
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASTERISCO CADENADOBLE CADENASIMPLE COMA COMENTARIOMULTI COMENTARIONORMAL DECIMAL DELETE DIFERENTE DISTINCT ENTERO FECHA FROM ID IGUAL INNER INSERT INTO JOIN MAYOR MAYORIGUAL MENOR MENORIGUAL ON OR PARDER PARIZQ PUNTO PUNTOCOMA SELECT SET UPDATE VALUES WHEREINICIO          : INSTRUCCIONESINSTRUCCIONES     : INSTRUCCIONES INSTRUCCIONINSTRUCCIONES    : INSTRUCCIONINSTRUCCION     : DQL_COMANDOS  DQL_COMANDOS       : SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO PUNTOCOMADQL_COMANDOS       : SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS  PUNTOCOMADQL_COMANDOS       : SELECT  DISTINCTNT  LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO PUNTOCOMADQL_COMANDOS       : SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS  PUNTOCOMALISTA_CAMPOS       : LISTA_CAMPOS LISTALISTA_CAMPOS    : LISTALISTA          : NOMBRE_T PUNTO CAMPOS SLISTA          : NOMBRE_T PUNTO CAMPOSLISTA          : CAMPOS SLISTA          : CAMPOSCAMPOS          : IDCAMPOS          : ASTERISCONOMBRE_T        : IDALIAS          : IDS          : COMA LISTAS          : AS ALIASDISTINCTNT          : DISTINCTNOMBRES_TABLAS       : NOMBRES_TABLAS TABLANOMBRES_TABLAS    : TABLATABLA   : NOMBRE_TTABLA   : NOMBRE_T S1S1          : COMA TABLAS1          : AS ALIASCUERPO   : WHERE CONDICIONESCUERPO   : INNERSCONDICIONES : CONDICIONES CONDICIONCONDICIONES : CONDICIONCONDICION : CONDICION_REL SIMBOLO_LOGICO  CONDICION_REL  OTRO_LOGICOCONDICION : CONDICION_REL SIMBOLO_LOGICO CONDICION_RELCONDICION : CONDICION_RELOTRO_LOGICO : SIMBOLO_LOGICO CONDICIONESCONDICION_REL : EXPRESIONNE OPERADOR EXPRESIONNEINNERS : INNERS INNERRINNERS : INNERRINNERR : INNER JOIN TABLA_REF ON CONDICIONESINNERR :  JOIN TABLA_REF ON CONDICIONESINNERR   : WHERE CONDICIONESTABLA_REF : IDTABLA_REF : ID AS IDEXPRESIONNE : NOMBRE_C PUNTO CAMPOSCEXPRESIONNE : CAMPOSC SIMBOLO_LOGICO : AND\n                      | OR NOMBRE_C : IDCAMPOSC     :  ID\n                    | ENTERO\n                    | DECIMAL\n                    | CADENASIMPLE\n                    | CADENADOBLE OPERADOR     : IGUAL\n                    | DIFERENTE\n                    | MAYOR\n                    | MENOR\n                    | MENORIGUAL\n                    | MAYORIGUAL '
    
_lr_action_items = {'SELECT':([0,2,3,4,6,33,45,65,82,],[5,5,-3,-4,-2,-6,-5,-8,-7,]),'$end':([1,2,3,4,6,33,45,65,82,],[0,-1,-3,-4,-2,-6,-5,-8,-7,]),'DISTINCT':([5,],[10,]),'ID':([5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,39,40,41,42,43,44,46,47,48,51,52,53,54,55,56,58,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,83,84,85,86,87,88,90,91,92,93,],[13,13,13,-10,-21,-14,-15,-16,25,-9,13,28,-13,13,31,25,-23,-24,-17,25,-12,-15,-19,-20,-18,-22,52,61,-25,25,31,25,-11,52,-31,-34,-45,-49,-50,-51,-52,-53,52,61,-26,-27,-30,52,-46,-47,52,-54,-55,-56,-57,-58,-59,86,52,52,89,-33,-36,-44,-49,52,52,52,-32,52,52,]),'ASTERISCO':([5,7,8,9,10,12,13,14,16,17,18,19,20,27,28,29,30,31,44,],[14,14,14,-10,-21,-14,-15,-16,-9,14,14,-13,14,-12,-15,-19,-20,-18,-11,]),'FROM':([7,9,12,13,14,16,17,19,27,28,29,30,31,44,],[15,-10,-14,-15,-16,-9,26,-13,-12,-15,-19,-20,-18,-11,]),'PUNTO':([11,13,50,52,],[18,-17,77,-48,]),'COMA':([12,13,14,24,25,27,28,],[20,-15,-16,41,-17,20,-15,]),'AS':([12,13,14,24,25,27,28,61,],[21,-15,-16,42,-17,21,-15,81,]),'PUNTOCOMA':([22,23,24,25,31,32,34,36,37,40,43,46,47,48,51,52,53,54,55,56,57,62,63,64,66,78,83,84,85,86,88,91,92,93,],[33,-23,-24,-17,-18,45,-22,-29,-38,-25,65,-28,-31,-34,-45,-49,-50,-51,-52,-53,-37,-26,-27,82,-30,-41,-33,-36,-44,-49,-40,-32,-39,-35,]),'WHERE':([22,23,24,25,31,34,36,37,40,43,46,47,48,51,52,53,54,55,56,57,62,63,66,78,83,84,85,86,88,91,92,93,],[35,-23,-24,-17,-18,-22,58,-38,-25,35,-41,-31,-34,-45,-49,-50,-51,-52,-53,-37,-26,-27,-30,-41,-33,-36,-44,-49,-40,-32,-39,-35,]),'INNER':([22,23,24,25,31,34,36,37,40,43,46,47,48,51,52,53,54,55,56,57,62,63,66,78,83,84,85,86,88,91,92,93,],[38,-23,-24,-17,-18,-22,38,-38,-25,38,-41,-31,-34,-45,-49,-50,-51,-52,-53,-37,-26,-27,-30,-41,-33,-36,-44,-49,-40,-32,-39,-35,]),'JOIN':([22,23,24,25,31,34,36,37,38,40,43,46,47,48,51,52,53,54,55,56,57,62,63,66,78,83,84,85,86,88,91,92,93,],[39,-23,-24,-17,-18,-22,39,-38,59,-25,39,-41,-31,-34,-45,-49,-50,-51,-52,-53,-37,-26,-27,-30,-41,-33,-36,-44,-49,-40,-32,-39,-35,]),'ENTERO':([35,46,47,48,51,52,53,54,55,56,58,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,84,85,86,87,88,90,91,92,93,],[53,53,-31,-34,-45,-49,-50,-51,-52,-53,53,-30,53,-46,-47,53,-54,-55,-56,-57,-58,-59,53,53,53,-33,-36,-44,-49,53,53,53,-32,53,53,]),'DECIMAL':([35,46,47,48,51,52,53,54,55,56,58,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,84,85,86,87,88,90,91,92,93,],[54,54,-31,-34,-45,-49,-50,-51,-52,-53,54,-30,54,-46,-47,54,-54,-55,-56,-57,-58,-59,54,54,54,-33,-36,-44,-49,54,54,54,-32,54,54,]),'CADENASIMPLE':([35,46,47,48,51,52,53,54,55,56,58,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,84,85,86,87,88,90,91,92,93,],[55,55,-31,-34,-45,-49,-50,-51,-52,-53,55,-30,55,-46,-47,55,-54,-55,-56,-57,-58,-59,55,55,55,-33,-36,-44,-49,55,55,55,-32,55,55,]),'CADENADOBLE':([35,46,47,48,51,52,53,54,55,56,58,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,84,85,86,87,88,90,91,92,93,],[56,56,-31,-34,-45,-49,-50,-51,-52,-53,56,-30,56,-46,-47,56,-54,-55,-56,-57,-58,-59,56,56,56,-33,-36,-44,-49,56,56,56,-32,56,56,]),'AND':([48,51,52,53,54,55,56,83,84,85,86,],[68,-45,-49,-50,-51,-52,-53,68,-36,-44,-49,]),'OR':([48,51,52,53,54,55,56,83,84,85,86,],[69,-45,-49,-50,-51,-52,-53,69,-36,-44,-49,]),'IGUAL':([49,51,52,53,54,55,56,85,86,],[71,-45,-49,-50,-51,-52,-53,-44,-49,]),'DIFERENTE':([49,51,52,53,54,55,56,85,86,],[72,-45,-49,-50,-51,-52,-53,-44,-49,]),'MAYOR':([49,51,52,53,54,55,56,85,86,],[73,-45,-49,-50,-51,-52,-53,-44,-49,]),'MENOR':([49,51,52,53,54,55,56,85,86,],[74,-45,-49,-50,-51,-52,-53,-44,-49,]),'MENORIGUAL':([49,51,52,53,54,55,56,85,86,],[75,-45,-49,-50,-51,-52,-53,-44,-49,]),'MAYORIGUAL':([49,51,52,53,54,55,56,85,86,],[76,-45,-49,-50,-51,-52,-53,-44,-49,]),'ON':([60,61,79,89,],[80,-42,87,-43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'INSTRUCCIONES':([0,],[2,]),'INSTRUCCION':([0,2,],[3,6,]),'DQL_COMANDOS':([0,2,],[4,4,]),'LISTA_CAMPOS':([5,8,],[7,17,]),'DISTINCTNT':([5,],[8,]),'LISTA':([5,7,8,17,20,],[9,16,9,16,29,]),'NOMBRE_T':([5,7,8,15,17,20,22,26,41,43,],[11,11,11,24,11,11,24,24,24,24,]),'CAMPOS':([5,7,8,17,18,20,],[12,12,12,12,27,12,]),'S':([12,27,],[19,44,]),'NOMBRES_TABLAS':([15,26,],[22,43,]),'TABLA':([15,22,26,41,43,],[23,34,23,62,34,]),'ALIAS':([21,42,],[30,63,]),'CUERPO':([22,43,],[32,64,]),'INNERS':([22,43,],[36,36,]),'INNERR':([22,36,43,],[37,57,37,]),'S1':([24,],[40,]),'CONDICIONES':([35,58,80,87,90,],[46,78,88,92,93,]),'CONDICION':([35,46,58,78,80,87,88,90,92,93,],[47,66,47,66,47,47,66,47,66,66,]),'CONDICION_REL':([35,46,58,67,78,80,87,88,90,92,93,],[48,48,48,83,48,48,48,48,48,48,48,]),'EXPRESIONNE':([35,46,58,67,70,78,80,87,88,90,92,93,],[49,49,49,49,84,49,49,49,49,49,49,49,]),'NOMBRE_C':([35,46,58,67,70,78,80,87,88,90,92,93,],[50,50,50,50,50,50,50,50,50,50,50,50,]),'CAMPOSC':([35,46,58,67,70,77,78,80,87,88,90,92,93,],[51,51,51,51,51,85,51,51,51,51,51,51,51,]),'TABLA_REF':([39,59,],[60,79,]),'SIMBOLO_LOGICO':([48,83,],[67,90,]),'OPERADOR':([49,],[70,]),'OTRO_LOGICO':([83,],[91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> INSTRUCCIONES','INICIO',1,'p_init','Gramatica.py',174),
  ('INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION','INSTRUCCIONES',2,'p_instrucciones_lista','Gramatica.py',178),
  ('INSTRUCCIONES -> INSTRUCCION','INSTRUCCIONES',1,'p_instrucciones_instruccion','Gramatica.py',183),
  ('INSTRUCCION -> DQL_COMANDOS','INSTRUCCION',1,'p_instruccion','Gramatica.py',195),
  ('DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO PUNTOCOMA','DQL_COMANDOS',6,'p_instruccion_dql_comandos','Gramatica.py',204),
  ('DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS PUNTOCOMA','DQL_COMANDOS',5,'p_instruccion_dql_comandosS','Gramatica.py',211),
  ('DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO PUNTOCOMA','DQL_COMANDOS',7,'p_instruccion_dql_comandosS1','Gramatica.py',218),
  ('DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS PUNTOCOMA','DQL_COMANDOS',6,'p_instruccion_dql_comandosS2','Gramatica.py',224),
  ('LISTA_CAMPOS -> LISTA_CAMPOS LISTA','LISTA_CAMPOS',2,'p_ListaCampos_ListaCampos','Gramatica.py',234),
  ('LISTA_CAMPOS -> LISTA','LISTA_CAMPOS',1,'p_ListaCampos_Lista','Gramatica.py',241),
  ('LISTA -> NOMBRE_T PUNTO CAMPOS S','LISTA',4,'p_Lista_NombreS','Gramatica.py',247),
  ('LISTA -> NOMBRE_T PUNTO CAMPOS','LISTA',3,'p_Lista_Nombre','Gramatica.py',255),
  ('LISTA -> CAMPOS S','LISTA',2,'p_Lista_CampoS','Gramatica.py',263),
  ('LISTA -> CAMPOS','LISTA',1,'p_Lista_Campo','Gramatica.py',272),
  ('CAMPOS -> ID','CAMPOS',1,'p_Campos_id','Gramatica.py',280),
  ('CAMPOS -> ASTERISCO','CAMPOS',1,'p_Campos_Asterisco','Gramatica.py',288),
  ('NOMBRE_T -> ID','NOMBRE_T',1,'p_NombreT_id','Gramatica.py',296),
  ('ALIAS -> ID','ALIAS',1,'p_Alias_id','Gramatica.py',304),
  ('S -> COMA LISTA','S',2,'p_S_ComaLista','Gramatica.py',313),
  ('S -> AS ALIAS','S',2,'p_S_AsAlias','Gramatica.py',322),
  ('DISTINCTNT -> DISTINCT','DISTINCTNT',1,'p_Disctint_Rw','Gramatica.py',330),
  ('NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA','NOMBRES_TABLAS',2,'p_NombresTablas_NombresTablas','Gramatica.py',344),
  ('NOMBRES_TABLAS -> TABLA','NOMBRES_TABLAS',1,'p_NombresTablas_Tabla','Gramatica.py',350),
  ('TABLA -> NOMBRE_T','TABLA',1,'p_Tabla_NombreT','Gramatica.py',356),
  ('TABLA -> NOMBRE_T S1','TABLA',2,'p_Tabla_NombreTS','Gramatica.py',364),
  ('S1 -> COMA TABLA','S1',2,'p_Ss_ComaLista','Gramatica.py',372),
  ('S1 -> AS ALIAS','S1',2,'p_Ss_AsAlias','Gramatica.py',378),
  ('CUERPO -> WHERE CONDICIONES','CUERPO',2,'p_Cuerpo_Where','Gramatica.py',388),
  ('CUERPO -> INNERS','CUERPO',1,'p_Cuerpo_Inners','Gramatica.py',395),
  ('CONDICIONES -> CONDICIONES CONDICION','CONDICIONES',2,'p_Condiciones_Lista','Gramatica.py',406),
  ('CONDICIONES -> CONDICION','CONDICIONES',1,'p_Condiciones_Condicion','Gramatica.py',414),
  ('CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO','CONDICION',4,'p_Condicion_CondicionRel','Gramatica.py',422),
  ('CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL','CONDICION',3,'p_Condicion_CondicionRel_Sin','Gramatica.py',427),
  ('CONDICION -> CONDICION_REL','CONDICION',1,'p_Condicion_CondiRel','Gramatica.py',433),
  ('OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES','OTRO_LOGICO',2,'p_OtroLogico_SimboloLogic','Gramatica.py',439),
  ('CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE','CONDICION_REL',3,'p_CondicionRel_Expresionn','Gramatica.py',445),
  ('INNERS -> INNERS INNERR','INNERS',2,'p_Inners_Lista','Gramatica.py',462),
  ('INNERS -> INNERR','INNERS',1,'p_Inners_Inner','Gramatica.py',470),
  ('INNERR -> INNER JOIN TABLA_REF ON CONDICIONES','INNERR',5,'p_Inner_InnerJoin','Gramatica.py',477),
  ('INNERR -> JOIN TABLA_REF ON CONDICIONES','INNERR',4,'p_Inner_Join','Gramatica.py',484),
  ('INNERR -> WHERE CONDICIONES','INNERR',2,'p_Inner_Where','Gramatica.py',491),
  ('TABLA_REF -> ID','TABLA_REF',1,'p_TablaRef_Id','Gramatica.py',499),
  ('TABLA_REF -> ID AS ID','TABLA_REF',3,'p_TablaRef_IdAS','Gramatica.py',504),
  ('EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC','EXPRESIONNE',3,'p_Expresion_Nombre','Gramatica.py',515),
  ('EXPRESIONNE -> CAMPOSC','EXPRESIONNE',1,'p_Expresion_CampoC','Gramatica.py',520),
  ('SIMBOLO_LOGICO -> AND','SIMBOLO_LOGICO',1,'p_SimboloLogico_Logicos','Gramatica.py',532),
  ('SIMBOLO_LOGICO -> OR','SIMBOLO_LOGICO',1,'p_SimboloLogico_Logicos','Gramatica.py',533),
  ('NOMBRE_C -> ID','NOMBRE_C',1,'p_NombreC_id','Gramatica.py',539),
  ('CAMPOSC -> ID','CAMPOSC',1,'p_CamposC_id','Gramatica.py',546),
  ('CAMPOSC -> ENTERO','CAMPOSC',1,'p_CamposC_id','Gramatica.py',547),
  ('CAMPOSC -> DECIMAL','CAMPOSC',1,'p_CamposC_id','Gramatica.py',548),
  ('CAMPOSC -> CADENASIMPLE','CAMPOSC',1,'p_CamposC_id','Gramatica.py',549),
  ('CAMPOSC -> CADENADOBLE','CAMPOSC',1,'p_CamposC_id','Gramatica.py',550),
  ('OPERADOR -> IGUAL','OPERADOR',1,'p_SimboloRela_Simbolos','Gramatica.py',556),
  ('OPERADOR -> DIFERENTE','OPERADOR',1,'p_SimboloRela_Simbolos','Gramatica.py',557),
  ('OPERADOR -> MAYOR','OPERADOR',1,'p_SimboloRela_Simbolos','Gramatica.py',558),
  ('OPERADOR -> MENOR','OPERADOR',1,'p_SimboloRela_Simbolos','Gramatica.py',559),
  ('OPERADOR -> MENORIGUAL','OPERADOR',1,'p_SimboloRela_Simbolos','Gramatica.py',560),
  ('OPERADOR -> MAYORIGUAL','OPERADOR',1,'p_SimboloRela_Simbolos','Gramatica.py',561),
]
