Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIOMULTI
    COMENTARIONORMAL
    CURRENT_DATE
    CURRENT_TIME
    DATE
    DAY
    FECHA
    MONTH
    NEGACION
    NOW
    TIME
    TYPE

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INSTRUCCIONES
Rule 2     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 3     INSTRUCCIONES -> INSTRUCCION
Rule 4     INSTRUCCION -> DQL_COMANDOS
Rule 5     INSTRUCCION -> DDL_COMANDOS
Rule 6     INSTRUCCION -> DML_COMANDOS
Rule 7     DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
Rule 8     DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
Rule 9     DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
Rule 10    DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
Rule 11    LISTA_CAMPOS -> LISTA_CAMPOS LISTA
Rule 12    LISTA_CAMPOS -> LISTA
Rule 13    LISTA -> NOMBRE_T PUNTO CAMPOS S
Rule 14    LISTA -> NOMBRE_T PUNTO CAMPOS
Rule 15    LISTA -> CAMPOS S
Rule 16    LISTA -> CAMPOS
Rule 17    LISTA -> EXPRESIONES_C
Rule 18    CAMPOS -> ID
Rule 19    CAMPOS -> ASTERISCO
Rule 20    NOMBRE_T -> ID
Rule 21    ALIAS -> ID
Rule 22    S -> COMA LISTA
Rule 23    S -> AS ALIAS
Rule 24    S -> AS ALIAS COMA LISTA
Rule 25    DISTINCTNT -> DISTINCT
Rule 26    NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA
Rule 27    NOMBRES_TABLAS -> TABLA
Rule 28    TABLA -> NOMBRE_T
Rule 29    TABLA -> NOMBRE_T S1
Rule 30    TABLA -> SUBQUERYS
Rule 31    S1 -> COMA TABLA
Rule 32    S1 -> AS ALIAS
Rule 33    CUERPO -> WHERE CONDICIONES
Rule 34    CUERPO -> MORES
Rule 35    MORES -> MORES MOREE
Rule 36    MORES -> MOREE
Rule 37    MOREE -> INNERS
Rule 38    MOREE -> GROUPS
Rule 39    MOREE -> LIMITS
Rule 40    CONDICIONES -> CONDICIONES CONDICION
Rule 41    CONDICIONES -> CONDICION
Rule 42    CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
Rule 43    CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
Rule 44    CONDICION -> CONDICION_REL
Rule 45    CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE
Rule 46    CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE
Rule 47    CONDICION_REL -> EXPRESIONNE
Rule 48    OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES
Rule 49    EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC
Rule 50    EXPRESIONNE -> CAMPOSC
Rule 51    SIMBOLO_LOGICO -> AND
Rule 52    SIMBOLO_LOGICO -> OR
Rule 53    SIMBOLO_NEG -> NOT
Rule 54    NOMBRE_C -> ID
Rule 55    CAMPOSC -> ID
Rule 56    CAMPOSC -> ENTERO
Rule 57    CAMPOSC -> FLOTANTE
Rule 58    CAMPOSC -> CADENASIMPLE
Rule 59    CAMPOSC -> CADENADOBLE
Rule 60    OPERADOR -> IGUAL
Rule 61    OPERADOR -> DIFERENTE
Rule 62    OPERADOR -> MAYOR
Rule 63    OPERADOR -> MENOR
Rule 64    OPERADOR -> MENORIGUAL
Rule 65    OPERADOR -> MAYORIGUAL
Rule 66    INNERS -> INNERS INNERR
Rule 67    INNERS -> INNERR
Rule 68    INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
Rule 69    INNERR -> JOIN TABLA_REF ON CONDICIONES
Rule 70    INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
Rule 71    INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
Rule 72    INNERR -> WHERE CONDICIONES
Rule 73    SUB_COLUMN -> JOIN EXPRESIONNE
Rule 74    SUB_COLUMN -> EXPRESIONNE
Rule 75    TIPOS_INNER -> INNER OUTER
Rule 76    TIPOS_INNER -> INNER
Rule 77    TIPOS_INNER -> LEFT OUTER
Rule 78    TIPOS_INNER -> LEFT
Rule 79    TIPOS_INNER -> RIGHT OUTER
Rule 80    TIPOS_INNER -> RIGHT
Rule 81    TIPOS_INNER -> FULL OUTER
Rule 82    TIPOS_INNER -> FULL
Rule 83    TABLA_REF -> ID
Rule 84    TABLA_REF -> ID AS ID
Rule 85    GROUPS -> GROUPS GROUPP
Rule 86    GROUPS -> GROUPP
Rule 87    GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER
Rule 88    GROUPP -> GROUP BY EXPRE_LIST
Rule 89    EXPRE_LIST -> EXPRE_LIST EXPRES
Rule 90    EXPRE_LIST -> EXPRES
Rule 91    EXPRES -> NOMBRE_T PUNTO CAMPOS S2
Rule 92    EXPRES -> NOMBRE_T PUNTO CAMPOS
Rule 93    EXPRES -> CAMPOS S2
Rule 94    EXPRES -> CAMPOS
Rule 95    EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE
Rule 96    EXPRES -> NOMBRE_T PUNTO CAMPOS STATE
Rule 97    EXPRES -> CAMPOS S2 STATE
Rule 98    EXPRES -> CAMPOS STATE
Rule 99    S2 -> COMA EXPRES
Rule 100   S2 -> AS ALIAS
Rule 101   S2 -> AS ALIAS COMA EXPRES
Rule 102   MORE_ORDER -> HAVING CONDICIONES
Rule 103   STATE -> ASC
Rule 104   STATE -> ASC NULLS FIRST
Rule 105   STATE -> ASC NULLS LAST
Rule 106   STATE -> DESC
Rule 107   STATE -> DESC NULLS FIRST
Rule 108   STATE -> DESC NULLS LAST
Rule 109   LIMITS -> LIMITS LIMITT
Rule 110   LIMITS -> LIMITT
Rule 111   LIMITT -> LIMIT EXPRE_NUM
Rule 112   LIMITT -> OFFSET EXPRE_NUM
Rule 113   EXPRE_NUM -> ENTERO
Rule 114   EXPRE_NUM -> ALL
Rule 115   SUBQUERYS -> SUBQUERYS QUERY
Rule 116   SUBQUERYS -> QUERY
Rule 117   QUERY -> ATE_QUE PARIZQ QUE PARDER
Rule 118   QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO
Rule 119   QUERY -> PARIZQ QUE PARDER
Rule 120   QUERY -> PARIZQ QUE PARDER AS_NO
Rule 121   AS_NO -> COMA QUERY
Rule 122   AS_NO -> AS NO_N
Rule 123   AS_NO -> AS NO_N COMA QUERY
Rule 124   NO_N -> ID
Rule 125   ATE_QUE -> EXISTS
Rule 126   ATE_QUE -> EXPRESIONNE OPCIONALESS
Rule 127   ATE_QUE -> EXPRESIONNE OPERADOR OPCIONALESS2
Rule 128   ATE_QUE -> ID
Rule 129   OPCIONALESS -> IN
Rule 130   OPCIONALESS -> NOT IN
Rule 131   OPCIONALESS2 -> ANY
Rule 132   OPCIONALESS2 -> ALL
Rule 133   OPCIONALESS2 -> SOME
Rule 134   QUE -> DQL_COMANDOS
Rule 135   UNIONS -> UNIONS UNIONN
Rule 136   UNIONS -> UNIONN
Rule 137   UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS
Rule 138   UNIONN -> COMPORTAMIENTO DQL_COMANDOS
Rule 139   UNIONN -> PUNTOCOMA
Rule 140   COMPORTAMIENTO -> UNION
Rule 141   COMPORTAMIENTO -> INTERSECT
Rule 142   COMPORTAMIENTO -> EXCEPT
Rule 143   EXPRESIONES_C -> CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO
Rule 144   EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER
Rule 145   EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER
Rule 146   CUERPOO -> WHEN CONDICIONES EXPRESIONNE END
Rule 147   CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END
Rule 148   CUERPOO -> END
Rule 149   DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
Rule 150   DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
Rule 151   CUERPO_CREATE_TABLE -> LISTA_DE_COLUMNAS
Rule 152   LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2
Rule 153   LISTA_DE_COLUMNAS -> LISTA2
Rule 154   LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
Rule 155   LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE
Rule 156   LISTA2 -> CONSTRAINT ID UNIQUE
Rule 157   LISTA2 -> CONSTRAINT ID UNIQUE COMA
Rule 158   LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
Rule 159   LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA
Rule 160   LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA
Rule 161   LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER
Rule 162   LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
Rule 163   LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
Rule 164   LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
Rule 165   LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
Rule 166   LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
Rule 167   LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
Rule 168   LISTA_DE_IDS -> LISTA_DE_IDS LISTA_ID_
Rule 169   LISTA_DE_IDS -> LISTA_ID_
Rule 170   LISTA_ID_ -> ID COMA
Rule 171   LISTA_ID_ -> ID
Rule 172   TIPO_CAMPO -> SMALLINT
Rule 173   TIPO_CAMPO -> INTEGER
Rule 174   TIPO_CAMPO -> INT
Rule 175   TIPO_CAMPO -> BIGINT
Rule 176   TIPO_CAMPO -> DECIMAL
Rule 177   TIPO_CAMPO -> REAL
Rule 178   TIPO_CAMPO -> MONEY
Rule 179   TIPO_CAMPO -> FLOAT
Rule 180   TIPO_CAMPO -> DOUBLE PRECISION
Rule 181   TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER
Rule 182   TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER
Rule 183   TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER
Rule 184   TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER
Rule 185   TIPO_CAMPO -> TEXT
Rule 186   TIPO_CAMPO -> BOOLEAN
Rule 187   VALIDACIONES_CREATE_TABLE -> LISTA3
Rule 188   LISTA3 -> VALIDACION_CAMPO_CREATE
Rule 189   LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO
Rule 190   LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE
Rule 191   VALIDACION_CAMPO_CREATE -> NOT NULL
Rule 192   VALIDACION_CAMPO_CREATE -> PRIMARY KEY
Rule 193   VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE
Rule 194   VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE
Rule 195   VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL
Rule 196   VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO
Rule 197   VALIDACION_CAMPO_CREATE -> DEFAULT ID
Rule 198   VALIDACION_CAMPO_CREATE_VACIO -> <empty>
Rule 199   VALIDACION_CAMPO_CREATE -> NULL
Rule 200   VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE
Rule 201   VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
Rule 202   DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA
Rule 203   DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA
Rule 204   DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES PARDER
Rule 205   DATOS -> VALUES PARIZQ VALORES PARDER
Rule 206   COLUMNAS -> COLUMNAS COLUMNA
Rule 207   COLUMNAS -> COLUMNA
Rule 208   COLUMNA -> ID COMA
Rule 209   COLUMNA -> ID
Rule 210   VALORES -> VALORES VALOR
Rule 211   VALORES -> VALOR
Rule 212   VALOR -> EXPRESION_GLOBAL COMA
Rule 213   VALOR -> EXPRESION_GLOBAL
Rule 214   DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
Rule 215   DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA
Rule 216   CAMPOSN -> CAMPOSN CAMPO
Rule 217   CAMPOSN -> CAMPO
Rule 218   CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL
Rule 219   CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C
Rule 220   CAMPO -> ID IGUAL EXPRESION_GLOBAL
Rule 221   CAMPO -> ID IGUAL EXPRESION_GLOBAL C
Rule 222   C -> COMA CAMPO
Rule 223   DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
Rule 224   DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA
Rule 225   DML_COMANDOS -> DROP TABLE ID PUNTOCOMA
Rule 226   DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
Rule 227   DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA
Rule 228   DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA
Rule 229   DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA
Rule 230   DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
Rule 231   DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
Rule 232   DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA
Rule 233   EXPRESION_GLOBAL -> EXPNUMERICA
Rule 234   DDL_COMANDOS -> CREATE_DATABASE
Rule 235   DDL_COMANDOS -> SHOW_DATABASES
Rule 236   DDL_COMANDOS -> ALTER_DATABASE
Rule 237   DDL_COMANDOS -> DROP_DATABASE
Rule 238   CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
Rule 239   REPLACE_OP -> OR REPLACE
Rule 240   REPLACE_OP -> <empty>
Rule 241   IF_NOT_EXISTIS -> IF NOT EXISTS
Rule 242   IF_NOT_EXISTIS -> <empty>
Rule 243   OWNER_DATABASE -> OWNER IGUAL ID
Rule 244   OWNER_DATABASE -> <empty>
Rule 245   MODE_DATABASE -> MODE IGUAL ENTERO
Rule 246   MODE_DATABASE -> <empty>
Rule 247   SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE
Rule 248   SHOW_DATABASES_LIKE -> LIKE CADENADOBLE
Rule 249   SHOW_DATABASES_LIKE -> <empty>
Rule 250   ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP
Rule 251   ALTER_DATABASE_OP -> RENAME TO ID
Rule 252   ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW
Rule 253   ALTER_TABLE_OP_OW -> ID
Rule 254   ALTER_TABLE_OP_OW -> CURRENT_USER
Rule 255   ALTER_TABLE_OP_OW -> SESSION_USER
Rule 256   ALTER_DATABASE_OP -> <empty>
Rule 257   DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID
Rule 258   IF_EXISTS_DATABASE -> IF EXISTS
Rule 259   IF_EXISTS_DATABASE -> <empty>
Rule 260   DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
Rule 261   TIPO_TIEMPO -> YEAR
Rule 262   TIPO_TIEMPO -> HOUR
Rule 263   TIPO_TIEMPO -> MINUTE
Rule 264   TIPO_TIEMPO -> SECOND
Rule 265   DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA
Rule 266   EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA
Rule 267   EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA
Rule 268   EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA
Rule 269   EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA
Rule 270   EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA
Rule 271   EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER
Rule 272   EXPNUMERICA -> ID
Rule 273   EXPNUMERICA -> ENTERO
Rule 274   EXPNUMERICA -> FLOTANTE

Terminals, with rules where they appear

ADD                  : 226 231 232
ALL                  : 114 132 137
ALTER                : 226 227 228 229 230 230 231 232 250
AND                  : 51
ANY                  : 131
AS                   : 23 24 32 84 100 101 122 123
ASC                  : 103 104 105
ASTERISCO            : 19 268
BIGINT               : 175
BOOLEAN              : 186
BY                   : 87 88
CADENADOBLE          : 59 194 248
CADENASIMPLE         : 58 193 260 265 265
CASE                 : 143
CHAR                 : 184
CHARACTER            : 181 183
CHECK                : 158 159 201
COLUMN               : 226 227 228 230
COMA                 : 22 24 31 99 101 121 123 154 157 159 160 163 164 165 170 208 212 222 265
COMENTARIOMULTI      : 
COMENTARIONORMAL     : 
CONSTRAINT           : 156 157 158 159 162 163 200 201 229 232
CREATE               : 149 150 238
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 254
DATABASE             : 238 250 257
DATABASES            : 247
DATE                 : 
DATE_PART            : 265
DAY                  : 
DECIMAL              : 176 195
DEFAULT              : 193 194 195 196 197 203
DELETE               : 223 224
DESC                 : 106 107 108
DIFERENTE            : 61
DISTINCT             : 25
DIVISION             : 269
DOUBLE               : 180
DROP                 : 225 227 229 257
ELSE                 : 147
END                  : 146 147 148
ENTERO               : 56 113 196 245 273
EXCEPT               : 142
EXISTS               : 125 241 258
EXTRACT              : 260
FECHA                : 
FIRST                : 104 107
FLOAT                : 179
FLOTANTE             : 57 274
FOREIGN              : 165 167 231
FROM                 : 7 8 9 10 223 224 260
FULL                 : 81 82
GREATEST             : 144
GROUP                : 87 88
HAVING               : 102
HOUR                 : 262
ID                   : 18 20 21 54 55 83 84 84 124 128 149 150 150 156 157 158 159 162 163 165 167 170 171 197 200 201 208 209 218 219 220 221 225 226 226 227 228 228 228 229 229 230 230 231 231 231 232 232 232 238 243 250 251 253 257 272
IF                   : 241 258
IGUAL                : 60 218 219 220 221 243 245
IN                   : 129 130
INHERITS             : 150
INNER                : 75 76
INSERT               : 202 203
INT                  : 174
INTEGER              : 173
INTERSECT            : 141
INTERVAL             : 265
INTO                 : 202 203
JOIN                 : 68 69 70 71 73
KEY                  : 162 163 164 165 166 167 192 231
LAST                 : 105 108
LEAST                : 145
LEFT                 : 77 78
LIKE                 : 248
LIMIT                : 111
MAS                  : 266
MAYOR                : 62
MAYORIGUAL           : 65
MENOR                : 63
MENORIGUAL           : 64
MENOS                : 267
MINUTE               : 263
MODE                 : 245
MONEY                : 178
MONTH                : 
NEGACION             : 
NOT                  : 53 130 191 230 241
NOW                  : 
NULL                 : 191 199 230
NULLS                : 104 105 107 108
OFFSET               : 112
ON                   : 68 69
OR                   : 52 239
OUTER                : 75 77 79 81
OWNER                : 243 252
PARDER               : 70 71 117 118 119 120 144 145 149 150 150 158 159 160 161 162 163 164 165 165 166 167 167 181 182 183 184 201 204 204 205 231 232 260 265 271
PARIZQ               : 70 71 117 118 119 120 144 145 149 150 150 158 159 160 161 162 163 164 165 165 166 167 167 181 182 183 184 201 204 204 205 231 232 260 265 271
PORCENTAJE           : 270
PRECISION            : 180
PRIMARY              : 162 163 164 166 192
PUNTO                : 13 14 49 91 92 95 96 218 219
PUNTOCOMA            : 139 149 150 202 203 214 215 223 224 225 226 227 228 229 230 231 232 260 265
REAL                 : 177
REFERENCES           : 165 167 231
RENAME               : 228 251
REPLACE              : 239
RIGHT                : 79 80
SECOND               : 264
SELECT               : 7 8 9 10 260 265
SESSION_USER         : 255
SET                  : 214 215 230
SHOW                 : 247
SMALLINT             : 172
SOME                 : 133
TABLE                : 149 150 225 226 227 228 229 230 231 232
TEXT                 : 185
THEN                 : 143
TIME                 : 
TIMESTAMP            : 260
TO                   : 228 251 252
TYPE                 : 
UNION                : 140
UNIQUE               : 156 157 160 161 200 232
UPDATE               : 214 215
USING                : 70 71
VALUES               : 203 204 205
VARCHAR              : 182
VARYING              : 181
WHEN                 : 143 146 147
WHERE                : 33 72 214 223
YEAR                 : 261
error                : 

Nonterminals, with rules where they appear

ALIAS                : 23 24 32 100 101
ALTER_DATABASE       : 236
ALTER_DATABASE_OP    : 250
ALTER_TABLE_OP_OW    : 252
AS_NO                : 118 120
ATE_QUE              : 117 118
C                    : 219 221
CAMPO                : 216 217 222
CAMPOS               : 13 14 15 16 91 92 93 94 95 96 97 98
CAMPOSC              : 49 50 227
CAMPOSN              : 214 215 216
COLUMNA              : 206 207
COLUMNAS             : 204 206
COMPORTAMIENTO       : 137 138
CONDICION            : 40 41
CONDICIONES          : 33 40 48 68 69 72 102 143 146 147 158 159 201 214 223
CONDICION_REL        : 42 42 43 43 44
CREATE_DATABASE      : 234
CUERPO               : 7 9
CUERPOO              : 143
CUERPO_CREATE_TABLE  : 149 150
DATOS                : 202
DDL_COMANDOS         : 5
DISTINCTNT           : 9 10
DML_COMANDOS         : 6
DQL_COMANDOS         : 4 134 137 138
DROP_DATABASE        : 237
EXPNUMERICA          : 181 182 183 184 233 266 266 267 267 268 268 269 269 270 270 271
EXPRES               : 89 90 99 101
EXPRESIONES_C        : 17
EXPRESIONNE          : 45 45 46 47 73 74 126 127 143 144 145 146 147 147
EXPRESION_GLOBAL     : 212 213 218 219 220 221
EXPRE_LIST           : 87 88 89
EXPRE_NUM            : 111 112
GROUPP               : 85 86
GROUPS               : 38 85
IF_EXISTS_DATABASE   : 257
IF_NOT_EXISTIS       : 238
INICIO               : 0
INNERR               : 66 67
INNERS               : 37 66
INSTRUCCION          : 2 3
INSTRUCCIONES        : 1 2
LIMITS               : 39 109
LIMITT               : 109 110
LISTA                : 11 12 22 24
LISTA2               : 152 153
LISTA3               : 187 190
LISTA_CAMPOS         : 7 8 9 10 11
LISTA_DE_COLUMNAS    : 151 152
LISTA_DE_IDS         : 160 161 162 163 164 165 165 166 167 167 168
LISTA_ID_            : 168 169
MODE_DATABASE        : 238
MOREE                : 35 36
MORES                : 34 35
MORE_ORDER           : 87
NOMBRES_TABLAS       : 7 8 9 10 26 202 203 214 215 218 219 223 224
NOMBRE_C             : 49
NOMBRE_T             : 13 14 28 29 91 92 95 96 154 155
NO_N                 : 122 123
OPCIONALESS          : 126
OPCIONALESS2         : 127
OPERADOR             : 45 127
OTRO_LOGICO          : 42
OWNER_DATABASE       : 238
QUE                  : 117 118 119 120
QUERY                : 115 116 121 123
REPLACE_OP           : 238
S                    : 13 15
S1                   : 29
S2                   : 91 93 95 97
SHOW_DATABASES       : 235
SHOW_DATABASES_LIKE  : 247
SIMBOLO_LOGICO       : 42 43 48
SIMBOLO_NEG          : 46
STATE                : 95 96 97 98
SUBQUERYS            : 30 115
SUB_COLUMN           : 70 71
TABLA                : 26 27 31
TABLA_REF            : 68 69 70 71
TIPOS_INNER          : 68 70
TIPO_CAMPO           : 154 155 226
TIPO_TIEMPO          : 260
UNIONN               : 135 136
UNIONS               : 7 8 9 10 135
VALIDACIONES_CREATE_TABLE : 154 155
VALIDACION_CAMPO_CREATE : 188 190
VALIDACION_CAMPO_CREATE_VACIO : 189
VALOR                : 210 211
VALORES              : 204 205 210

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . DQL_COMANDOS
    (5) INSTRUCCION -> . DDL_COMANDOS
    (6) INSTRUCCION -> . DML_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (260) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (265) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA
    (234) DDL_COMANDOS -> . CREATE_DATABASE
    (235) DDL_COMANDOS -> . SHOW_DATABASES
    (236) DDL_COMANDOS -> . ALTER_DATABASE
    (237) DDL_COMANDOS -> . DROP_DATABASE
    (149) DML_COMANDOS -> . CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (150) DML_COMANDOS -> . CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
    (202) DML_COMANDOS -> . INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA
    (203) DML_COMANDOS -> . INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA
    (214) DML_COMANDOS -> . UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (215) DML_COMANDOS -> . UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA
    (223) DML_COMANDOS -> . DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
    (224) DML_COMANDOS -> . DELETE FROM NOMBRES_TABLAS PUNTOCOMA
    (225) DML_COMANDOS -> . DROP TABLE ID PUNTOCOMA
    (226) DML_COMANDOS -> . ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (227) DML_COMANDOS -> . ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA
    (228) DML_COMANDOS -> . ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA
    (229) DML_COMANDOS -> . ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA
    (230) DML_COMANDOS -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (231) DML_COMANDOS -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (232) DML_COMANDOS -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA
    (238) CREATE_DATABASE -> . CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (247) SHOW_DATABASES -> . SHOW DATABASES SHOW_DATABASES_LIKE
    (250) ALTER_DATABASE -> . ALTER DATABASE ID ALTER_DATABASE_OP
    (257) DROP_DATABASE -> . DROP DATABASE IF_EXISTS_DATABASE ID

    SELECT          shift and go to state 7
    CREATE          shift and go to state 12
    INSERT          shift and go to state 13
    UPDATE          shift and go to state 14
    DELETE          shift and go to state 15
    DROP            shift and go to state 16
    ALTER           shift and go to state 17
    SHOW            shift and go to state 18

    INICIO                         shift and go to state 1
    INSTRUCCIONES                  shift and go to state 2
    INSTRUCCION                    shift and go to state 3
    DQL_COMANDOS                   shift and go to state 4
    DDL_COMANDOS                   shift and go to state 5
    DML_COMANDOS                   shift and go to state 6
    CREATE_DATABASE                shift and go to state 8
    SHOW_DATABASES                 shift and go to state 9
    ALTER_DATABASE                 shift and go to state 10
    DROP_DATABASE                  shift and go to state 11

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> INSTRUCCIONES .
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . DQL_COMANDOS
    (5) INSTRUCCION -> . DDL_COMANDOS
    (6) INSTRUCCION -> . DML_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (260) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (265) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA
    (234) DDL_COMANDOS -> . CREATE_DATABASE
    (235) DDL_COMANDOS -> . SHOW_DATABASES
    (236) DDL_COMANDOS -> . ALTER_DATABASE
    (237) DDL_COMANDOS -> . DROP_DATABASE
    (149) DML_COMANDOS -> . CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (150) DML_COMANDOS -> . CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
    (202) DML_COMANDOS -> . INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA
    (203) DML_COMANDOS -> . INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA
    (214) DML_COMANDOS -> . UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (215) DML_COMANDOS -> . UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA
    (223) DML_COMANDOS -> . DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
    (224) DML_COMANDOS -> . DELETE FROM NOMBRES_TABLAS PUNTOCOMA
    (225) DML_COMANDOS -> . DROP TABLE ID PUNTOCOMA
    (226) DML_COMANDOS -> . ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (227) DML_COMANDOS -> . ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA
    (228) DML_COMANDOS -> . ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA
    (229) DML_COMANDOS -> . ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA
    (230) DML_COMANDOS -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (231) DML_COMANDOS -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (232) DML_COMANDOS -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA
    (238) CREATE_DATABASE -> . CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (247) SHOW_DATABASES -> . SHOW DATABASES SHOW_DATABASES_LIKE
    (250) ALTER_DATABASE -> . ALTER DATABASE ID ALTER_DATABASE_OP
    (257) DROP_DATABASE -> . DROP DATABASE IF_EXISTS_DATABASE ID

    $end            reduce using rule 1 (INICIO -> INSTRUCCIONES .)
    SELECT          shift and go to state 7
    CREATE          shift and go to state 12
    INSERT          shift and go to state 13
    UPDATE          shift and go to state 14
    DELETE          shift and go to state 15
    DROP            shift and go to state 16
    ALTER           shift and go to state 17
    SHOW            shift and go to state 18

    INSTRUCCION                    shift and go to state 19
    DQL_COMANDOS                   shift and go to state 4
    DDL_COMANDOS                   shift and go to state 5
    DML_COMANDOS                   shift and go to state 6
    CREATE_DATABASE                shift and go to state 8
    SHOW_DATABASES                 shift and go to state 9
    ALTER_DATABASE                 shift and go to state 10
    DROP_DATABASE                  shift and go to state 11

state 3

    (3) INSTRUCCIONES -> INSTRUCCION .

    SELECT          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    CREATE          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    INSERT          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    UPDATE          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    DELETE          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    DROP            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    ALTER           reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    SHOW            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)


state 4

    (4) INSTRUCCION -> DQL_COMANDOS .

    SELECT          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    CREATE          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    INSERT          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    UPDATE          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    DELETE          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    DROP            reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    ALTER           reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    SHOW            reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    $end            reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)


state 5

    (5) INSTRUCCION -> DDL_COMANDOS .

    SELECT          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    CREATE          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    INSERT          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    UPDATE          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    DELETE          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    DROP            reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    ALTER           reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    SHOW            reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    $end            reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)


state 6

    (6) INSTRUCCION -> DML_COMANDOS .

    SELECT          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    CREATE          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    INSERT          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    UPDATE          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    DELETE          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    DROP            reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    ALTER           reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    SHOW            reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    $end            reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)


state 7

    (7) DQL_COMANDOS -> SELECT . LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> SELECT . LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> SELECT . DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT . DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (260) DQL_COMANDOS -> SELECT . EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (265) DQL_COMANDOS -> SELECT . DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA
    (11) LISTA_CAMPOS -> . LISTA_CAMPOS LISTA
    (12) LISTA_CAMPOS -> . LISTA
    (25) DISTINCTNT -> . DISTINCT
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTA -> . CAMPOS S
    (16) LISTA -> . CAMPOS
    (17) LISTA -> . EXPRESIONES_C
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO
    (143) EXPRESIONES_C -> . CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO
    (144) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (145) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER

    EXTRACT         shift and go to state 22
    DATE_PART       shift and go to state 23
    DISTINCT        shift and go to state 25
    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30
    CASE            shift and go to state 31
    GREATEST        shift and go to state 32
    LEAST           shift and go to state 33

    LISTA_CAMPOS                   shift and go to state 20
    DISTINCTNT                     shift and go to state 21
    LISTA                          shift and go to state 24
    NOMBRE_T                       shift and go to state 26
    CAMPOS                         shift and go to state 27
    EXPRESIONES_C                  shift and go to state 28

state 8

    (234) DDL_COMANDOS -> CREATE_DATABASE .

    SELECT          reduce using rule 234 (DDL_COMANDOS -> CREATE_DATABASE .)
    CREATE          reduce using rule 234 (DDL_COMANDOS -> CREATE_DATABASE .)
    INSERT          reduce using rule 234 (DDL_COMANDOS -> CREATE_DATABASE .)
    UPDATE          reduce using rule 234 (DDL_COMANDOS -> CREATE_DATABASE .)
    DELETE          reduce using rule 234 (DDL_COMANDOS -> CREATE_DATABASE .)
    DROP            reduce using rule 234 (DDL_COMANDOS -> CREATE_DATABASE .)
    ALTER           reduce using rule 234 (DDL_COMANDOS -> CREATE_DATABASE .)
    SHOW            reduce using rule 234 (DDL_COMANDOS -> CREATE_DATABASE .)
    $end            reduce using rule 234 (DDL_COMANDOS -> CREATE_DATABASE .)


state 9

    (235) DDL_COMANDOS -> SHOW_DATABASES .

    SELECT          reduce using rule 235 (DDL_COMANDOS -> SHOW_DATABASES .)
    CREATE          reduce using rule 235 (DDL_COMANDOS -> SHOW_DATABASES .)
    INSERT          reduce using rule 235 (DDL_COMANDOS -> SHOW_DATABASES .)
    UPDATE          reduce using rule 235 (DDL_COMANDOS -> SHOW_DATABASES .)
    DELETE          reduce using rule 235 (DDL_COMANDOS -> SHOW_DATABASES .)
    DROP            reduce using rule 235 (DDL_COMANDOS -> SHOW_DATABASES .)
    ALTER           reduce using rule 235 (DDL_COMANDOS -> SHOW_DATABASES .)
    SHOW            reduce using rule 235 (DDL_COMANDOS -> SHOW_DATABASES .)
    $end            reduce using rule 235 (DDL_COMANDOS -> SHOW_DATABASES .)


state 10

    (236) DDL_COMANDOS -> ALTER_DATABASE .

    SELECT          reduce using rule 236 (DDL_COMANDOS -> ALTER_DATABASE .)
    CREATE          reduce using rule 236 (DDL_COMANDOS -> ALTER_DATABASE .)
    INSERT          reduce using rule 236 (DDL_COMANDOS -> ALTER_DATABASE .)
    UPDATE          reduce using rule 236 (DDL_COMANDOS -> ALTER_DATABASE .)
    DELETE          reduce using rule 236 (DDL_COMANDOS -> ALTER_DATABASE .)
    DROP            reduce using rule 236 (DDL_COMANDOS -> ALTER_DATABASE .)
    ALTER           reduce using rule 236 (DDL_COMANDOS -> ALTER_DATABASE .)
    SHOW            reduce using rule 236 (DDL_COMANDOS -> ALTER_DATABASE .)
    $end            reduce using rule 236 (DDL_COMANDOS -> ALTER_DATABASE .)


state 11

    (237) DDL_COMANDOS -> DROP_DATABASE .

    SELECT          reduce using rule 237 (DDL_COMANDOS -> DROP_DATABASE .)
    CREATE          reduce using rule 237 (DDL_COMANDOS -> DROP_DATABASE .)
    INSERT          reduce using rule 237 (DDL_COMANDOS -> DROP_DATABASE .)
    UPDATE          reduce using rule 237 (DDL_COMANDOS -> DROP_DATABASE .)
    DELETE          reduce using rule 237 (DDL_COMANDOS -> DROP_DATABASE .)
    DROP            reduce using rule 237 (DDL_COMANDOS -> DROP_DATABASE .)
    ALTER           reduce using rule 237 (DDL_COMANDOS -> DROP_DATABASE .)
    SHOW            reduce using rule 237 (DDL_COMANDOS -> DROP_DATABASE .)
    $end            reduce using rule 237 (DDL_COMANDOS -> DROP_DATABASE .)


state 12

    (149) DML_COMANDOS -> CREATE . TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (150) DML_COMANDOS -> CREATE . TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
    (238) CREATE_DATABASE -> CREATE . REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (239) REPLACE_OP -> . OR REPLACE
    (240) REPLACE_OP -> .

    TABLE           shift and go to state 34
    OR              shift and go to state 36
    DATABASE        reduce using rule 240 (REPLACE_OP -> .)

    REPLACE_OP                     shift and go to state 35

state 13

    (202) DML_COMANDOS -> INSERT . INTO NOMBRES_TABLAS DATOS PUNTOCOMA
    (203) DML_COMANDOS -> INSERT . INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA

    INTO            shift and go to state 37


state 14

    (214) DML_COMANDOS -> UPDATE . NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (215) DML_COMANDOS -> UPDATE . NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA
    (26) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (27) NOMBRES_TABLAS -> . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    NOMBRES_TABLAS                 shift and go to state 38
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 15

    (223) DML_COMANDOS -> DELETE . FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
    (224) DML_COMANDOS -> DELETE . FROM NOMBRES_TABLAS PUNTOCOMA

    FROM            shift and go to state 54


state 16

    (225) DML_COMANDOS -> DROP . TABLE ID PUNTOCOMA
    (257) DROP_DATABASE -> DROP . DATABASE IF_EXISTS_DATABASE ID

    TABLE           shift and go to state 55
    DATABASE        shift and go to state 56


state 17

    (226) DML_COMANDOS -> ALTER . TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (227) DML_COMANDOS -> ALTER . TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA
    (228) DML_COMANDOS -> ALTER . TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA
    (229) DML_COMANDOS -> ALTER . TABLE ID DROP CONSTRAINT ID PUNTOCOMA
    (230) DML_COMANDOS -> ALTER . TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (231) DML_COMANDOS -> ALTER . TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (232) DML_COMANDOS -> ALTER . TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA
    (250) ALTER_DATABASE -> ALTER . DATABASE ID ALTER_DATABASE_OP

    TABLE           shift and go to state 57
    DATABASE        shift and go to state 58


state 18

    (247) SHOW_DATABASES -> SHOW . DATABASES SHOW_DATABASES_LIKE

    DATABASES       shift and go to state 59


state 19

    (2) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    SELECT          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    CREATE          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    INSERT          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    UPDATE          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    DELETE          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    DROP            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    ALTER           reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    SHOW            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 20

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS . FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> SELECT LISTA_CAMPOS . FROM NOMBRES_TABLAS UNIONS
    (11) LISTA_CAMPOS -> LISTA_CAMPOS . LISTA
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTA -> . CAMPOS S
    (16) LISTA -> . CAMPOS
    (17) LISTA -> . EXPRESIONES_C
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO
    (143) EXPRESIONES_C -> . CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO
    (144) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (145) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER

    FROM            shift and go to state 60
    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30
    CASE            shift and go to state 31
    GREATEST        shift and go to state 32
    LEAST           shift and go to state 33

    LISTA                          shift and go to state 61
    NOMBRE_T                       shift and go to state 26
    CAMPOS                         shift and go to state 27
    EXPRESIONES_C                  shift and go to state 28

state 21

    (9) DQL_COMANDOS -> SELECT DISTINCTNT . LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT DISTINCTNT . LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (11) LISTA_CAMPOS -> . LISTA_CAMPOS LISTA
    (12) LISTA_CAMPOS -> . LISTA
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTA -> . CAMPOS S
    (16) LISTA -> . CAMPOS
    (17) LISTA -> . EXPRESIONES_C
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO
    (143) EXPRESIONES_C -> . CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO
    (144) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (145) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER

    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30
    CASE            shift and go to state 31
    GREATEST        shift and go to state 32
    LEAST           shift and go to state 33

    LISTA_CAMPOS                   shift and go to state 62
    LISTA                          shift and go to state 24
    NOMBRE_T                       shift and go to state 26
    CAMPOS                         shift and go to state 27
    EXPRESIONES_C                  shift and go to state 28

state 22

    (260) DQL_COMANDOS -> SELECT EXTRACT . PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA

    PARIZQ          shift and go to state 63


state 23

    (265) DQL_COMANDOS -> SELECT DATE_PART . PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    PARIZQ          shift and go to state 64


state 24

    (12) LISTA_CAMPOS -> LISTA .

    FROM            reduce using rule 12 (LISTA_CAMPOS -> LISTA .)
    ID              reduce using rule 12 (LISTA_CAMPOS -> LISTA .)
    ASTERISCO       reduce using rule 12 (LISTA_CAMPOS -> LISTA .)
    CASE            reduce using rule 12 (LISTA_CAMPOS -> LISTA .)
    GREATEST        reduce using rule 12 (LISTA_CAMPOS -> LISTA .)
    LEAST           reduce using rule 12 (LISTA_CAMPOS -> LISTA .)


state 25

    (25) DISTINCTNT -> DISTINCT .

    ID              reduce using rule 25 (DISTINCTNT -> DISTINCT .)
    ASTERISCO       reduce using rule 25 (DISTINCTNT -> DISTINCT .)
    CASE            reduce using rule 25 (DISTINCTNT -> DISTINCT .)
    GREATEST        reduce using rule 25 (DISTINCTNT -> DISTINCT .)
    LEAST           reduce using rule 25 (DISTINCTNT -> DISTINCT .)


state 26

    (13) LISTA -> NOMBRE_T . PUNTO CAMPOS S
    (14) LISTA -> NOMBRE_T . PUNTO CAMPOS

    PUNTO           shift and go to state 65


state 27

    (15) LISTA -> CAMPOS . S
    (16) LISTA -> CAMPOS .
    (22) S -> . COMA LISTA
    (23) S -> . AS ALIAS
    (24) S -> . AS ALIAS COMA LISTA

    FROM            reduce using rule 16 (LISTA -> CAMPOS .)
    ID              reduce using rule 16 (LISTA -> CAMPOS .)
    ASTERISCO       reduce using rule 16 (LISTA -> CAMPOS .)
    CASE            reduce using rule 16 (LISTA -> CAMPOS .)
    GREATEST        reduce using rule 16 (LISTA -> CAMPOS .)
    LEAST           reduce using rule 16 (LISTA -> CAMPOS .)
    COMA            shift and go to state 67
    AS              shift and go to state 68

    S                              shift and go to state 66

state 28

    (17) LISTA -> EXPRESIONES_C .

    FROM            reduce using rule 17 (LISTA -> EXPRESIONES_C .)
    ID              reduce using rule 17 (LISTA -> EXPRESIONES_C .)
    ASTERISCO       reduce using rule 17 (LISTA -> EXPRESIONES_C .)
    CASE            reduce using rule 17 (LISTA -> EXPRESIONES_C .)
    GREATEST        reduce using rule 17 (LISTA -> EXPRESIONES_C .)
    LEAST           reduce using rule 17 (LISTA -> EXPRESIONES_C .)


state 29

    (20) NOMBRE_T -> ID .
    (18) CAMPOS -> ID .

    PUNTO           reduce using rule 20 (NOMBRE_T -> ID .)
    COMA            reduce using rule 18 (CAMPOS -> ID .)
    AS              reduce using rule 18 (CAMPOS -> ID .)
    FROM            reduce using rule 18 (CAMPOS -> ID .)
    ID              reduce using rule 18 (CAMPOS -> ID .)
    ASTERISCO       reduce using rule 18 (CAMPOS -> ID .)
    CASE            reduce using rule 18 (CAMPOS -> ID .)
    GREATEST        reduce using rule 18 (CAMPOS -> ID .)
    LEAST           reduce using rule 18 (CAMPOS -> ID .)
    ASC             reduce using rule 18 (CAMPOS -> ID .)
    DESC            reduce using rule 18 (CAMPOS -> ID .)
    HAVING          reduce using rule 18 (CAMPOS -> ID .)
    GROUP           reduce using rule 18 (CAMPOS -> ID .)
    JOIN            reduce using rule 18 (CAMPOS -> ID .)
    WHERE           reduce using rule 18 (CAMPOS -> ID .)
    LIMIT           reduce using rule 18 (CAMPOS -> ID .)
    OFFSET          reduce using rule 18 (CAMPOS -> ID .)
    INNER           reduce using rule 18 (CAMPOS -> ID .)
    LEFT            reduce using rule 18 (CAMPOS -> ID .)
    RIGHT           reduce using rule 18 (CAMPOS -> ID .)
    FULL            reduce using rule 18 (CAMPOS -> ID .)
    PUNTOCOMA       reduce using rule 18 (CAMPOS -> ID .)
    UNION           reduce using rule 18 (CAMPOS -> ID .)
    INTERSECT       reduce using rule 18 (CAMPOS -> ID .)
    EXCEPT          reduce using rule 18 (CAMPOS -> ID .)


state 30

    (19) CAMPOS -> ASTERISCO .

    COMA            reduce using rule 19 (CAMPOS -> ASTERISCO .)
    AS              reduce using rule 19 (CAMPOS -> ASTERISCO .)
    FROM            reduce using rule 19 (CAMPOS -> ASTERISCO .)
    ID              reduce using rule 19 (CAMPOS -> ASTERISCO .)
    ASTERISCO       reduce using rule 19 (CAMPOS -> ASTERISCO .)
    CASE            reduce using rule 19 (CAMPOS -> ASTERISCO .)
    GREATEST        reduce using rule 19 (CAMPOS -> ASTERISCO .)
    LEAST           reduce using rule 19 (CAMPOS -> ASTERISCO .)
    ASC             reduce using rule 19 (CAMPOS -> ASTERISCO .)
    DESC            reduce using rule 19 (CAMPOS -> ASTERISCO .)
    HAVING          reduce using rule 19 (CAMPOS -> ASTERISCO .)
    GROUP           reduce using rule 19 (CAMPOS -> ASTERISCO .)
    JOIN            reduce using rule 19 (CAMPOS -> ASTERISCO .)
    WHERE           reduce using rule 19 (CAMPOS -> ASTERISCO .)
    LIMIT           reduce using rule 19 (CAMPOS -> ASTERISCO .)
    OFFSET          reduce using rule 19 (CAMPOS -> ASTERISCO .)
    INNER           reduce using rule 19 (CAMPOS -> ASTERISCO .)
    LEFT            reduce using rule 19 (CAMPOS -> ASTERISCO .)
    RIGHT           reduce using rule 19 (CAMPOS -> ASTERISCO .)
    FULL            reduce using rule 19 (CAMPOS -> ASTERISCO .)
    PUNTOCOMA       reduce using rule 19 (CAMPOS -> ASTERISCO .)
    UNION           reduce using rule 19 (CAMPOS -> ASTERISCO .)
    INTERSECT       reduce using rule 19 (CAMPOS -> ASTERISCO .)
    EXCEPT          reduce using rule 19 (CAMPOS -> ASTERISCO .)


state 31

    (143) EXPRESIONES_C -> CASE . WHEN CONDICIONES THEN EXPRESIONNE CUERPOO

    WHEN            shift and go to state 69


state 32

    (144) EXPRESIONES_C -> GREATEST . PARIZQ EXPRESIONNE PARDER

    PARIZQ          shift and go to state 70


state 33

    (145) EXPRESIONES_C -> LEAST . PARIZQ EXPRESIONNE PARDER

    PARIZQ          shift and go to state 71


state 34

    (149) DML_COMANDOS -> CREATE TABLE . ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (150) DML_COMANDOS -> CREATE TABLE . ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA

    ID              shift and go to state 72


state 35

    (238) CREATE_DATABASE -> CREATE REPLACE_OP . DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE

    DATABASE        shift and go to state 73


state 36

    (239) REPLACE_OP -> OR . REPLACE

    REPLACE         shift and go to state 74


state 37

    (202) DML_COMANDOS -> INSERT INTO . NOMBRES_TABLAS DATOS PUNTOCOMA
    (203) DML_COMANDOS -> INSERT INTO . NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA
    (26) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (27) NOMBRES_TABLAS -> . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    NOMBRES_TABLAS                 shift and go to state 75
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 38

    (214) DML_COMANDOS -> UPDATE NOMBRES_TABLAS . SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (215) DML_COMANDOS -> UPDATE NOMBRES_TABLAS . SET CAMPOSN PUNTOCOMA
    (26) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    SET             shift and go to state 76
    ID              shift and go to state 42
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    TABLA                          shift and go to state 77
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 39

    (27) NOMBRES_TABLAS -> TABLA .

    SET             reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    ID              reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    PARIZQ          reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    EXISTS          reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    ENTERO          reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    FLOTANTE        reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    CADENASIMPLE    reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    CADENADOBLE     reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    DEFAULT         reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    VALUES          reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    WHERE           reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    PUNTOCOMA       reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    UNION           reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    INTERSECT       reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    EXCEPT          reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    JOIN            reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    GROUP           reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    LIMIT           reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    OFFSET          reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    INNER           reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    LEFT            reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    RIGHT           reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    FULL            reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)
    PUNTO           reduce using rule 27 (NOMBRES_TABLAS -> TABLA .)


state 40

    (28) TABLA -> NOMBRE_T .
    (29) TABLA -> NOMBRE_T . S1
    (31) S1 -> . COMA TABLA
    (32) S1 -> . AS ALIAS

    SET             reduce using rule 28 (TABLA -> NOMBRE_T .)
    ID              reduce using rule 28 (TABLA -> NOMBRE_T .)
    PARIZQ          reduce using rule 28 (TABLA -> NOMBRE_T .)
    EXISTS          reduce using rule 28 (TABLA -> NOMBRE_T .)
    ENTERO          reduce using rule 28 (TABLA -> NOMBRE_T .)
    FLOTANTE        reduce using rule 28 (TABLA -> NOMBRE_T .)
    CADENASIMPLE    reduce using rule 28 (TABLA -> NOMBRE_T .)
    CADENADOBLE     reduce using rule 28 (TABLA -> NOMBRE_T .)
    DEFAULT         reduce using rule 28 (TABLA -> NOMBRE_T .)
    VALUES          reduce using rule 28 (TABLA -> NOMBRE_T .)
    WHERE           reduce using rule 28 (TABLA -> NOMBRE_T .)
    PUNTOCOMA       reduce using rule 28 (TABLA -> NOMBRE_T .)
    UNION           reduce using rule 28 (TABLA -> NOMBRE_T .)
    INTERSECT       reduce using rule 28 (TABLA -> NOMBRE_T .)
    EXCEPT          reduce using rule 28 (TABLA -> NOMBRE_T .)
    JOIN            reduce using rule 28 (TABLA -> NOMBRE_T .)
    GROUP           reduce using rule 28 (TABLA -> NOMBRE_T .)
    LIMIT           reduce using rule 28 (TABLA -> NOMBRE_T .)
    OFFSET          reduce using rule 28 (TABLA -> NOMBRE_T .)
    INNER           reduce using rule 28 (TABLA -> NOMBRE_T .)
    LEFT            reduce using rule 28 (TABLA -> NOMBRE_T .)
    RIGHT           reduce using rule 28 (TABLA -> NOMBRE_T .)
    FULL            reduce using rule 28 (TABLA -> NOMBRE_T .)
    PUNTO           reduce using rule 28 (TABLA -> NOMBRE_T .)
    COMA            shift and go to state 79
    AS              shift and go to state 80

    S1                             shift and go to state 78

state 41

    (30) TABLA -> SUBQUERYS .
    (115) SUBQUERYS -> SUBQUERYS . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for EXISTS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CADENASIMPLE resolved as shift
  ! shift/reduce conflict for CADENADOBLE resolved as shift
    SET             reduce using rule 30 (TABLA -> SUBQUERYS .)
    DEFAULT         reduce using rule 30 (TABLA -> SUBQUERYS .)
    VALUES          reduce using rule 30 (TABLA -> SUBQUERYS .)
    WHERE           reduce using rule 30 (TABLA -> SUBQUERYS .)
    PUNTOCOMA       reduce using rule 30 (TABLA -> SUBQUERYS .)
    UNION           reduce using rule 30 (TABLA -> SUBQUERYS .)
    INTERSECT       reduce using rule 30 (TABLA -> SUBQUERYS .)
    EXCEPT          reduce using rule 30 (TABLA -> SUBQUERYS .)
    JOIN            reduce using rule 30 (TABLA -> SUBQUERYS .)
    GROUP           reduce using rule 30 (TABLA -> SUBQUERYS .)
    LIMIT           reduce using rule 30 (TABLA -> SUBQUERYS .)
    OFFSET          reduce using rule 30 (TABLA -> SUBQUERYS .)
    INNER           reduce using rule 30 (TABLA -> SUBQUERYS .)
    LEFT            reduce using rule 30 (TABLA -> SUBQUERYS .)
    RIGHT           reduce using rule 30 (TABLA -> SUBQUERYS .)
    FULL            reduce using rule 30 (TABLA -> SUBQUERYS .)
    PUNTO           reduce using rule 30 (TABLA -> SUBQUERYS .)
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ID              shift and go to state 82
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

  ! ID              [ reduce using rule 30 (TABLA -> SUBQUERYS .) ]
  ! PARIZQ          [ reduce using rule 30 (TABLA -> SUBQUERYS .) ]
  ! EXISTS          [ reduce using rule 30 (TABLA -> SUBQUERYS .) ]
  ! ENTERO          [ reduce using rule 30 (TABLA -> SUBQUERYS .) ]
  ! FLOTANTE        [ reduce using rule 30 (TABLA -> SUBQUERYS .) ]
  ! CADENASIMPLE    [ reduce using rule 30 (TABLA -> SUBQUERYS .) ]
  ! CADENADOBLE     [ reduce using rule 30 (TABLA -> SUBQUERYS .) ]

    QUERY                          shift and go to state 81
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 42

    (20) NOMBRE_T -> ID .
    (128) ATE_QUE -> ID .
    (54) NOMBRE_C -> ID .
    (55) CAMPOSC -> ID .

  ! reduce/reduce conflict for PARIZQ resolved using rule 20 (NOMBRE_T -> ID .)
  ! reduce/reduce conflict for PUNTO resolved using rule 20 (NOMBRE_T -> ID .)
    COMA            reduce using rule 20 (NOMBRE_T -> ID .)
    AS              reduce using rule 20 (NOMBRE_T -> ID .)
    SET             reduce using rule 20 (NOMBRE_T -> ID .)
    ID              reduce using rule 20 (NOMBRE_T -> ID .)
    PARIZQ          reduce using rule 20 (NOMBRE_T -> ID .)
    EXISTS          reduce using rule 20 (NOMBRE_T -> ID .)
    ENTERO          reduce using rule 20 (NOMBRE_T -> ID .)
    FLOTANTE        reduce using rule 20 (NOMBRE_T -> ID .)
    CADENASIMPLE    reduce using rule 20 (NOMBRE_T -> ID .)
    CADENADOBLE     reduce using rule 20 (NOMBRE_T -> ID .)
    DEFAULT         reduce using rule 20 (NOMBRE_T -> ID .)
    VALUES          reduce using rule 20 (NOMBRE_T -> ID .)
    WHERE           reduce using rule 20 (NOMBRE_T -> ID .)
    PUNTOCOMA       reduce using rule 20 (NOMBRE_T -> ID .)
    UNION           reduce using rule 20 (NOMBRE_T -> ID .)
    INTERSECT       reduce using rule 20 (NOMBRE_T -> ID .)
    EXCEPT          reduce using rule 20 (NOMBRE_T -> ID .)
    JOIN            reduce using rule 20 (NOMBRE_T -> ID .)
    GROUP           reduce using rule 20 (NOMBRE_T -> ID .)
    LIMIT           reduce using rule 20 (NOMBRE_T -> ID .)
    OFFSET          reduce using rule 20 (NOMBRE_T -> ID .)
    INNER           reduce using rule 20 (NOMBRE_T -> ID .)
    LEFT            reduce using rule 20 (NOMBRE_T -> ID .)
    RIGHT           reduce using rule 20 (NOMBRE_T -> ID .)
    FULL            reduce using rule 20 (NOMBRE_T -> ID .)
    PUNTO           reduce using rule 20 (NOMBRE_T -> ID .)
    IN              reduce using rule 55 (CAMPOSC -> ID .)
    NOT             reduce using rule 55 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 55 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 55 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)

  ! PARIZQ          [ reduce using rule 128 (ATE_QUE -> ID .) ]
  ! PUNTO           [ reduce using rule 54 (NOMBRE_C -> ID .) ]


state 43

    (116) SUBQUERYS -> QUERY .

    PARIZQ          reduce using rule 116 (SUBQUERYS -> QUERY .)
    EXISTS          reduce using rule 116 (SUBQUERYS -> QUERY .)
    ID              reduce using rule 116 (SUBQUERYS -> QUERY .)
    ENTERO          reduce using rule 116 (SUBQUERYS -> QUERY .)
    FLOTANTE        reduce using rule 116 (SUBQUERYS -> QUERY .)
    CADENASIMPLE    reduce using rule 116 (SUBQUERYS -> QUERY .)
    CADENADOBLE     reduce using rule 116 (SUBQUERYS -> QUERY .)
    SET             reduce using rule 116 (SUBQUERYS -> QUERY .)
    DEFAULT         reduce using rule 116 (SUBQUERYS -> QUERY .)
    VALUES          reduce using rule 116 (SUBQUERYS -> QUERY .)
    WHERE           reduce using rule 116 (SUBQUERYS -> QUERY .)
    PUNTOCOMA       reduce using rule 116 (SUBQUERYS -> QUERY .)
    UNION           reduce using rule 116 (SUBQUERYS -> QUERY .)
    INTERSECT       reduce using rule 116 (SUBQUERYS -> QUERY .)
    EXCEPT          reduce using rule 116 (SUBQUERYS -> QUERY .)
    JOIN            reduce using rule 116 (SUBQUERYS -> QUERY .)
    GROUP           reduce using rule 116 (SUBQUERYS -> QUERY .)
    LIMIT           reduce using rule 116 (SUBQUERYS -> QUERY .)
    OFFSET          reduce using rule 116 (SUBQUERYS -> QUERY .)
    INNER           reduce using rule 116 (SUBQUERYS -> QUERY .)
    LEFT            reduce using rule 116 (SUBQUERYS -> QUERY .)
    RIGHT           reduce using rule 116 (SUBQUERYS -> QUERY .)
    FULL            reduce using rule 116 (SUBQUERYS -> QUERY .)
    PUNTO           reduce using rule 116 (SUBQUERYS -> QUERY .)


state 44

    (117) QUERY -> ATE_QUE . PARIZQ QUE PARDER
    (118) QUERY -> ATE_QUE . PARIZQ QUE PARDER AS_NO

    PARIZQ          shift and go to state 83


state 45

    (119) QUERY -> PARIZQ . QUE PARDER
    (120) QUERY -> PARIZQ . QUE PARDER AS_NO
    (134) QUE -> . DQL_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (260) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (265) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    SELECT          shift and go to state 7

    QUE                            shift and go to state 84
    DQL_COMANDOS                   shift and go to state 85

state 46

    (125) ATE_QUE -> EXISTS .

    PARIZQ          reduce using rule 125 (ATE_QUE -> EXISTS .)


state 47

    (126) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (127) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (129) OPCIONALESS -> . IN
    (130) OPCIONALESS -> . NOT IN
    (60) OPERADOR -> . IGUAL
    (61) OPERADOR -> . DIFERENTE
    (62) OPERADOR -> . MAYOR
    (63) OPERADOR -> . MENOR
    (64) OPERADOR -> . MENORIGUAL
    (65) OPERADOR -> . MAYORIGUAL

    IN              shift and go to state 88
    NOT             shift and go to state 89
    IGUAL           shift and go to state 90
    DIFERENTE       shift and go to state 91
    MAYOR           shift and go to state 92
    MENOR           shift and go to state 93
    MENORIGUAL      shift and go to state 94
    MAYORIGUAL      shift and go to state 95

    OPCIONALESS                    shift and go to state 86
    OPERADOR                       shift and go to state 87

state 48

    (49) EXPRESIONNE -> NOMBRE_C . PUNTO CAMPOSC

    PUNTO           shift and go to state 96


state 49

    (50) EXPRESIONNE -> CAMPOSC .

    IN              reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    NOT             reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    IGUAL           reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    DIFERENTE       reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    MAYOR           reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    MENOR           reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    MENORIGUAL      reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    MAYORIGUAL      reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    AND             reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    OR              reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    THEN            reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    ID              reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    ENTERO          reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    FLOTANTE        reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    CADENASIMPLE    reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    CADENADOBLE     reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    PARDER          reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    PUNTOCOMA       reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    UNION           reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    INTERSECT       reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    EXCEPT          reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    JOIN            reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    WHERE           reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    INNER           reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    LEFT            reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    RIGHT           reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    FULL            reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    GROUP           reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    LIMIT           reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    OFFSET          reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    WHEN            reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    END             reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)
    ELSE            reduce using rule 50 (EXPRESIONNE -> CAMPOSC .)


state 50

    (56) CAMPOSC -> ENTERO .

    IN              reduce using rule 56 (CAMPOSC -> ENTERO .)
    NOT             reduce using rule 56 (CAMPOSC -> ENTERO .)
    IGUAL           reduce using rule 56 (CAMPOSC -> ENTERO .)
    DIFERENTE       reduce using rule 56 (CAMPOSC -> ENTERO .)
    MAYOR           reduce using rule 56 (CAMPOSC -> ENTERO .)
    MENOR           reduce using rule 56 (CAMPOSC -> ENTERO .)
    MENORIGUAL      reduce using rule 56 (CAMPOSC -> ENTERO .)
    MAYORIGUAL      reduce using rule 56 (CAMPOSC -> ENTERO .)
    AND             reduce using rule 56 (CAMPOSC -> ENTERO .)
    OR              reduce using rule 56 (CAMPOSC -> ENTERO .)
    THEN            reduce using rule 56 (CAMPOSC -> ENTERO .)
    ID              reduce using rule 56 (CAMPOSC -> ENTERO .)
    ENTERO          reduce using rule 56 (CAMPOSC -> ENTERO .)
    FLOTANTE        reduce using rule 56 (CAMPOSC -> ENTERO .)
    CADENASIMPLE    reduce using rule 56 (CAMPOSC -> ENTERO .)
    CADENADOBLE     reduce using rule 56 (CAMPOSC -> ENTERO .)
    PARDER          reduce using rule 56 (CAMPOSC -> ENTERO .)
    PUNTOCOMA       reduce using rule 56 (CAMPOSC -> ENTERO .)
    UNION           reduce using rule 56 (CAMPOSC -> ENTERO .)
    INTERSECT       reduce using rule 56 (CAMPOSC -> ENTERO .)
    EXCEPT          reduce using rule 56 (CAMPOSC -> ENTERO .)
    JOIN            reduce using rule 56 (CAMPOSC -> ENTERO .)
    WHERE           reduce using rule 56 (CAMPOSC -> ENTERO .)
    INNER           reduce using rule 56 (CAMPOSC -> ENTERO .)
    LEFT            reduce using rule 56 (CAMPOSC -> ENTERO .)
    RIGHT           reduce using rule 56 (CAMPOSC -> ENTERO .)
    FULL            reduce using rule 56 (CAMPOSC -> ENTERO .)
    GROUP           reduce using rule 56 (CAMPOSC -> ENTERO .)
    LIMIT           reduce using rule 56 (CAMPOSC -> ENTERO .)
    OFFSET          reduce using rule 56 (CAMPOSC -> ENTERO .)
    WHEN            reduce using rule 56 (CAMPOSC -> ENTERO .)
    END             reduce using rule 56 (CAMPOSC -> ENTERO .)
    ELSE            reduce using rule 56 (CAMPOSC -> ENTERO .)


state 51

    (57) CAMPOSC -> FLOTANTE .

    IN              reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    NOT             reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    IGUAL           reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    DIFERENTE       reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    MAYOR           reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    MENOR           reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    MENORIGUAL      reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    AND             reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    OR              reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    THEN            reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    ID              reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    ENTERO          reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    FLOTANTE        reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    CADENASIMPLE    reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    CADENADOBLE     reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    PARDER          reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    UNION           reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    INTERSECT       reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    EXCEPT          reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    JOIN            reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    WHERE           reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    INNER           reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    LEFT            reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    RIGHT           reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    FULL            reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    GROUP           reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    LIMIT           reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    OFFSET          reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    WHEN            reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    END             reduce using rule 57 (CAMPOSC -> FLOTANTE .)
    ELSE            reduce using rule 57 (CAMPOSC -> FLOTANTE .)


state 52

    (58) CAMPOSC -> CADENASIMPLE .

    IN              reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    NOT             reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    IGUAL           reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    DIFERENTE       reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    MAYOR           reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    MENOR           reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    MENORIGUAL      reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    MAYORIGUAL      reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    AND             reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    OR              reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    THEN            reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    ID              reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    ENTERO          reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    FLOTANTE        reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    CADENASIMPLE    reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    CADENADOBLE     reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    PARDER          reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    PUNTOCOMA       reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    UNION           reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    INTERSECT       reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    EXCEPT          reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    JOIN            reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    WHERE           reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    INNER           reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    LEFT            reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    RIGHT           reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    FULL            reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    GROUP           reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    LIMIT           reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    OFFSET          reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    WHEN            reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    END             reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)
    ELSE            reduce using rule 58 (CAMPOSC -> CADENASIMPLE .)


state 53

    (59) CAMPOSC -> CADENADOBLE .

    IN              reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    NOT             reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    IGUAL           reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    DIFERENTE       reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    MAYOR           reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    MENOR           reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    MENORIGUAL      reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    MAYORIGUAL      reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    AND             reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    OR              reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    THEN            reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    ID              reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    ENTERO          reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    FLOTANTE        reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    CADENASIMPLE    reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    CADENADOBLE     reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    PARDER          reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    PUNTOCOMA       reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    UNION           reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    INTERSECT       reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    EXCEPT          reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    JOIN            reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    WHERE           reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    INNER           reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    LEFT            reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    RIGHT           reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    FULL            reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    GROUP           reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    LIMIT           reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    OFFSET          reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    WHEN            reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    END             reduce using rule 59 (CAMPOSC -> CADENADOBLE .)
    ELSE            reduce using rule 59 (CAMPOSC -> CADENADOBLE .)


state 54

    (223) DML_COMANDOS -> DELETE FROM . NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
    (224) DML_COMANDOS -> DELETE FROM . NOMBRES_TABLAS PUNTOCOMA
    (26) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (27) NOMBRES_TABLAS -> . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    NOMBRES_TABLAS                 shift and go to state 97
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 55

    (225) DML_COMANDOS -> DROP TABLE . ID PUNTOCOMA

    ID              shift and go to state 98


state 56

    (257) DROP_DATABASE -> DROP DATABASE . IF_EXISTS_DATABASE ID
    (258) IF_EXISTS_DATABASE -> . IF EXISTS
    (259) IF_EXISTS_DATABASE -> .

    IF              shift and go to state 100
    ID              reduce using rule 259 (IF_EXISTS_DATABASE -> .)

    IF_EXISTS_DATABASE             shift and go to state 99

state 57

    (226) DML_COMANDOS -> ALTER TABLE . ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (227) DML_COMANDOS -> ALTER TABLE . ID DROP COLUMN CAMPOSC PUNTOCOMA
    (228) DML_COMANDOS -> ALTER TABLE . ID RENAME COLUMN ID TO ID PUNTOCOMA
    (229) DML_COMANDOS -> ALTER TABLE . ID DROP CONSTRAINT ID PUNTOCOMA
    (230) DML_COMANDOS -> ALTER TABLE . ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (231) DML_COMANDOS -> ALTER TABLE . ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (232) DML_COMANDOS -> ALTER TABLE . ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA

    ID              shift and go to state 101


state 58

    (250) ALTER_DATABASE -> ALTER DATABASE . ID ALTER_DATABASE_OP

    ID              shift and go to state 102


state 59

    (247) SHOW_DATABASES -> SHOW DATABASES . SHOW_DATABASES_LIKE
    (248) SHOW_DATABASES_LIKE -> . LIKE CADENADOBLE
    (249) SHOW_DATABASES_LIKE -> .

    LIKE            shift and go to state 104
    SELECT          reduce using rule 249 (SHOW_DATABASES_LIKE -> .)
    CREATE          reduce using rule 249 (SHOW_DATABASES_LIKE -> .)
    INSERT          reduce using rule 249 (SHOW_DATABASES_LIKE -> .)
    UPDATE          reduce using rule 249 (SHOW_DATABASES_LIKE -> .)
    DELETE          reduce using rule 249 (SHOW_DATABASES_LIKE -> .)
    DROP            reduce using rule 249 (SHOW_DATABASES_LIKE -> .)
    ALTER           reduce using rule 249 (SHOW_DATABASES_LIKE -> .)
    SHOW            reduce using rule 249 (SHOW_DATABASES_LIKE -> .)
    $end            reduce using rule 249 (SHOW_DATABASES_LIKE -> .)

    SHOW_DATABASES_LIKE            shift and go to state 103

state 60

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM . NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM . NOMBRES_TABLAS UNIONS
    (26) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (27) NOMBRES_TABLAS -> . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    NOMBRES_TABLAS                 shift and go to state 105
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 61

    (11) LISTA_CAMPOS -> LISTA_CAMPOS LISTA .

    FROM            reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTA .)
    ID              reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTA .)
    ASTERISCO       reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTA .)
    CASE            reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTA .)
    GREATEST        reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTA .)
    LEAST           reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTA .)


state 62

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS . FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS . FROM NOMBRES_TABLAS UNIONS
    (11) LISTA_CAMPOS -> LISTA_CAMPOS . LISTA
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTA -> . CAMPOS S
    (16) LISTA -> . CAMPOS
    (17) LISTA -> . EXPRESIONES_C
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO
    (143) EXPRESIONES_C -> . CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO
    (144) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (145) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER

    FROM            shift and go to state 106
    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30
    CASE            shift and go to state 31
    GREATEST        shift and go to state 32
    LEAST           shift and go to state 33

    LISTA                          shift and go to state 61
    NOMBRE_T                       shift and go to state 26
    CAMPOS                         shift and go to state 27
    EXPRESIONES_C                  shift and go to state 28

state 63

    (260) DQL_COMANDOS -> SELECT EXTRACT PARIZQ . TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (261) TIPO_TIEMPO -> . YEAR
    (262) TIPO_TIEMPO -> . HOUR
    (263) TIPO_TIEMPO -> . MINUTE
    (264) TIPO_TIEMPO -> . SECOND

    YEAR            shift and go to state 108
    HOUR            shift and go to state 109
    MINUTE          shift and go to state 110
    SECOND          shift and go to state 111

    TIPO_TIEMPO                    shift and go to state 107

state 64

    (265) DQL_COMANDOS -> SELECT DATE_PART PARIZQ . CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    CADENASIMPLE    shift and go to state 112


state 65

    (13) LISTA -> NOMBRE_T PUNTO . CAMPOS S
    (14) LISTA -> NOMBRE_T PUNTO . CAMPOS
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO

    ID              shift and go to state 114
    ASTERISCO       shift and go to state 30

    CAMPOS                         shift and go to state 113

state 66

    (15) LISTA -> CAMPOS S .

    FROM            reduce using rule 15 (LISTA -> CAMPOS S .)
    ID              reduce using rule 15 (LISTA -> CAMPOS S .)
    ASTERISCO       reduce using rule 15 (LISTA -> CAMPOS S .)
    CASE            reduce using rule 15 (LISTA -> CAMPOS S .)
    GREATEST        reduce using rule 15 (LISTA -> CAMPOS S .)
    LEAST           reduce using rule 15 (LISTA -> CAMPOS S .)


state 67

    (22) S -> COMA . LISTA
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTA -> . CAMPOS S
    (16) LISTA -> . CAMPOS
    (17) LISTA -> . EXPRESIONES_C
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO
    (143) EXPRESIONES_C -> . CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO
    (144) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (145) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER

    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30
    CASE            shift and go to state 31
    GREATEST        shift and go to state 32
    LEAST           shift and go to state 33

    LISTA                          shift and go to state 115
    NOMBRE_T                       shift and go to state 26
    CAMPOS                         shift and go to state 27
    EXPRESIONES_C                  shift and go to state 28

state 68

    (23) S -> AS . ALIAS
    (24) S -> AS . ALIAS COMA LISTA
    (21) ALIAS -> . ID

    ID              shift and go to state 117

    ALIAS                          shift and go to state 116

state 69

    (143) EXPRESIONES_C -> CASE WHEN . CONDICIONES THEN EXPRESIONNE CUERPOO
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 118
    EXPRESIONNE                    shift and go to state 119
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 70

    (144) EXPRESIONES_C -> GREATEST PARIZQ . EXPRESIONNE PARDER
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    EXPRESIONNE                    shift and go to state 125
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 71

    (145) EXPRESIONES_C -> LEAST PARIZQ . EXPRESIONNE PARDER
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    EXPRESIONNE                    shift and go to state 126
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 72

    (149) DML_COMANDOS -> CREATE TABLE ID . PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (150) DML_COMANDOS -> CREATE TABLE ID . PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA

    PARIZQ          shift and go to state 127


state 73

    (238) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE . IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (241) IF_NOT_EXISTIS -> . IF NOT EXISTS
    (242) IF_NOT_EXISTIS -> .

    IF              shift and go to state 129
    ID              reduce using rule 242 (IF_NOT_EXISTIS -> .)

    IF_NOT_EXISTIS                 shift and go to state 128

state 74

    (239) REPLACE_OP -> OR REPLACE .

    DATABASE        reduce using rule 239 (REPLACE_OP -> OR REPLACE .)


state 75

    (202) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS . DATOS PUNTOCOMA
    (203) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS . DEFAULT VALUES PUNTOCOMA
    (26) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (204) DATOS -> . PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES PARDER
    (205) DATOS -> . VALUES PARIZQ VALORES PARDER
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    DEFAULT         shift and go to state 131
    PARIZQ          shift and go to state 133
    VALUES          shift and go to state 132
    ID              shift and go to state 42
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    DATOS                          shift and go to state 130
    TABLA                          shift and go to state 77
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 76

    (214) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET . CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (215) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET . CAMPOSN PUNTOCOMA
    (216) CAMPOSN -> . CAMPOSN CAMPO
    (217) CAMPOSN -> . CAMPO
    (218) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL
    (219) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C
    (220) CAMPO -> . ID IGUAL EXPRESION_GLOBAL
    (221) CAMPO -> . ID IGUAL EXPRESION_GLOBAL C
    (26) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (27) NOMBRES_TABLAS -> . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 137
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    NOMBRES_TABLAS                 shift and go to state 134
    CAMPOSN                        shift and go to state 135
    CAMPO                          shift and go to state 136
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 77

    (26) NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .

    SET             reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    ID              reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    PARIZQ          reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    EXISTS          reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    ENTERO          reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    FLOTANTE        reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    CADENASIMPLE    reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    CADENADOBLE     reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    DEFAULT         reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    VALUES          reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    WHERE           reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    PUNTOCOMA       reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    UNION           reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    INTERSECT       reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    EXCEPT          reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    JOIN            reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    GROUP           reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    LIMIT           reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    OFFSET          reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    INNER           reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    LEFT            reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    RIGHT           reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    FULL            reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    PUNTO           reduce using rule 26 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)


state 78

    (29) TABLA -> NOMBRE_T S1 .

    SET             reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    ID              reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    PARIZQ          reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    EXISTS          reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    ENTERO          reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    FLOTANTE        reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    CADENASIMPLE    reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    CADENADOBLE     reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    DEFAULT         reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    VALUES          reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    WHERE           reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    PUNTOCOMA       reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    UNION           reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    INTERSECT       reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    EXCEPT          reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    JOIN            reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    GROUP           reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    LIMIT           reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    OFFSET          reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    INNER           reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    LEFT            reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    RIGHT           reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    FULL            reduce using rule 29 (TABLA -> NOMBRE_T S1 .)
    PUNTO           reduce using rule 29 (TABLA -> NOMBRE_T S1 .)


state 79

    (31) S1 -> COMA . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    TABLA                          shift and go to state 138
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 80

    (32) S1 -> AS . ALIAS
    (21) ALIAS -> . ID

    ID              shift and go to state 117

    ALIAS                          shift and go to state 139

state 81

    (115) SUBQUERYS -> SUBQUERYS QUERY .

    PARIZQ          reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    EXISTS          reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    ID              reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    ENTERO          reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    FLOTANTE        reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    CADENASIMPLE    reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    CADENADOBLE     reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    SET             reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    DEFAULT         reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    VALUES          reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    WHERE           reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    PUNTOCOMA       reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    UNION           reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    INTERSECT       reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    EXCEPT          reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    JOIN            reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    GROUP           reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    LIMIT           reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    OFFSET          reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    INNER           reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    LEFT            reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    RIGHT           reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    FULL            reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)
    PUNTO           reduce using rule 115 (SUBQUERYS -> SUBQUERYS QUERY .)


state 82

    (128) ATE_QUE -> ID .
    (54) NOMBRE_C -> ID .
    (55) CAMPOSC -> ID .

    PARIZQ          reduce using rule 128 (ATE_QUE -> ID .)
    PUNTO           reduce using rule 54 (NOMBRE_C -> ID .)
    IN              reduce using rule 55 (CAMPOSC -> ID .)
    NOT             reduce using rule 55 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 55 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 55 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)


state 83

    (117) QUERY -> ATE_QUE PARIZQ . QUE PARDER
    (118) QUERY -> ATE_QUE PARIZQ . QUE PARDER AS_NO
    (134) QUE -> . DQL_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (260) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (265) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    SELECT          shift and go to state 7

    QUE                            shift and go to state 140
    DQL_COMANDOS                   shift and go to state 85

state 84

    (119) QUERY -> PARIZQ QUE . PARDER
    (120) QUERY -> PARIZQ QUE . PARDER AS_NO

    PARDER          shift and go to state 141


state 85

    (134) QUE -> DQL_COMANDOS .

    PARDER          reduce using rule 134 (QUE -> DQL_COMANDOS .)


state 86

    (126) ATE_QUE -> EXPRESIONNE OPCIONALESS .

    PARIZQ          reduce using rule 126 (ATE_QUE -> EXPRESIONNE OPCIONALESS .)


state 87

    (127) ATE_QUE -> EXPRESIONNE OPERADOR . OPCIONALESS2
    (131) OPCIONALESS2 -> . ANY
    (132) OPCIONALESS2 -> . ALL
    (133) OPCIONALESS2 -> . SOME

    ANY             shift and go to state 143
    ALL             shift and go to state 144
    SOME            shift and go to state 145

    OPCIONALESS2                   shift and go to state 142

state 88

    (129) OPCIONALESS -> IN .

    PARIZQ          reduce using rule 129 (OPCIONALESS -> IN .)


state 89

    (130) OPCIONALESS -> NOT . IN

    IN              shift and go to state 146


state 90

    (60) OPERADOR -> IGUAL .

    ANY             reduce using rule 60 (OPERADOR -> IGUAL .)
    ALL             reduce using rule 60 (OPERADOR -> IGUAL .)
    SOME            reduce using rule 60 (OPERADOR -> IGUAL .)
    ID              reduce using rule 60 (OPERADOR -> IGUAL .)
    ENTERO          reduce using rule 60 (OPERADOR -> IGUAL .)
    FLOTANTE        reduce using rule 60 (OPERADOR -> IGUAL .)
    CADENASIMPLE    reduce using rule 60 (OPERADOR -> IGUAL .)
    CADENADOBLE     reduce using rule 60 (OPERADOR -> IGUAL .)


state 91

    (61) OPERADOR -> DIFERENTE .

    ANY             reduce using rule 61 (OPERADOR -> DIFERENTE .)
    ALL             reduce using rule 61 (OPERADOR -> DIFERENTE .)
    SOME            reduce using rule 61 (OPERADOR -> DIFERENTE .)
    ID              reduce using rule 61 (OPERADOR -> DIFERENTE .)
    ENTERO          reduce using rule 61 (OPERADOR -> DIFERENTE .)
    FLOTANTE        reduce using rule 61 (OPERADOR -> DIFERENTE .)
    CADENASIMPLE    reduce using rule 61 (OPERADOR -> DIFERENTE .)
    CADENADOBLE     reduce using rule 61 (OPERADOR -> DIFERENTE .)


state 92

    (62) OPERADOR -> MAYOR .

    ANY             reduce using rule 62 (OPERADOR -> MAYOR .)
    ALL             reduce using rule 62 (OPERADOR -> MAYOR .)
    SOME            reduce using rule 62 (OPERADOR -> MAYOR .)
    ID              reduce using rule 62 (OPERADOR -> MAYOR .)
    ENTERO          reduce using rule 62 (OPERADOR -> MAYOR .)
    FLOTANTE        reduce using rule 62 (OPERADOR -> MAYOR .)
    CADENASIMPLE    reduce using rule 62 (OPERADOR -> MAYOR .)
    CADENADOBLE     reduce using rule 62 (OPERADOR -> MAYOR .)


state 93

    (63) OPERADOR -> MENOR .

    ANY             reduce using rule 63 (OPERADOR -> MENOR .)
    ALL             reduce using rule 63 (OPERADOR -> MENOR .)
    SOME            reduce using rule 63 (OPERADOR -> MENOR .)
    ID              reduce using rule 63 (OPERADOR -> MENOR .)
    ENTERO          reduce using rule 63 (OPERADOR -> MENOR .)
    FLOTANTE        reduce using rule 63 (OPERADOR -> MENOR .)
    CADENASIMPLE    reduce using rule 63 (OPERADOR -> MENOR .)
    CADENADOBLE     reduce using rule 63 (OPERADOR -> MENOR .)


state 94

    (64) OPERADOR -> MENORIGUAL .

    ANY             reduce using rule 64 (OPERADOR -> MENORIGUAL .)
    ALL             reduce using rule 64 (OPERADOR -> MENORIGUAL .)
    SOME            reduce using rule 64 (OPERADOR -> MENORIGUAL .)
    ID              reduce using rule 64 (OPERADOR -> MENORIGUAL .)
    ENTERO          reduce using rule 64 (OPERADOR -> MENORIGUAL .)
    FLOTANTE        reduce using rule 64 (OPERADOR -> MENORIGUAL .)
    CADENASIMPLE    reduce using rule 64 (OPERADOR -> MENORIGUAL .)
    CADENADOBLE     reduce using rule 64 (OPERADOR -> MENORIGUAL .)


state 95

    (65) OPERADOR -> MAYORIGUAL .

    ANY             reduce using rule 65 (OPERADOR -> MAYORIGUAL .)
    ALL             reduce using rule 65 (OPERADOR -> MAYORIGUAL .)
    SOME            reduce using rule 65 (OPERADOR -> MAYORIGUAL .)
    ID              reduce using rule 65 (OPERADOR -> MAYORIGUAL .)
    ENTERO          reduce using rule 65 (OPERADOR -> MAYORIGUAL .)
    FLOTANTE        reduce using rule 65 (OPERADOR -> MAYORIGUAL .)
    CADENASIMPLE    reduce using rule 65 (OPERADOR -> MAYORIGUAL .)
    CADENADOBLE     reduce using rule 65 (OPERADOR -> MAYORIGUAL .)


state 96

    (49) EXPRESIONNE -> NOMBRE_C PUNTO . CAMPOSC
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 148
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CAMPOSC                        shift and go to state 147

state 97

    (223) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS . WHERE CONDICIONES PUNTOCOMA
    (224) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS . PUNTOCOMA
    (26) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 149
    PUNTOCOMA       shift and go to state 150
    ID              shift and go to state 42
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    TABLA                          shift and go to state 77
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 98

    (225) DML_COMANDOS -> DROP TABLE ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 151


state 99

    (257) DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE . ID

    ID              shift and go to state 152


state 100

    (258) IF_EXISTS_DATABASE -> IF . EXISTS

    EXISTS          shift and go to state 153


state 101

    (226) DML_COMANDOS -> ALTER TABLE ID . ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (227) DML_COMANDOS -> ALTER TABLE ID . DROP COLUMN CAMPOSC PUNTOCOMA
    (228) DML_COMANDOS -> ALTER TABLE ID . RENAME COLUMN ID TO ID PUNTOCOMA
    (229) DML_COMANDOS -> ALTER TABLE ID . DROP CONSTRAINT ID PUNTOCOMA
    (230) DML_COMANDOS -> ALTER TABLE ID . ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (231) DML_COMANDOS -> ALTER TABLE ID . ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (232) DML_COMANDOS -> ALTER TABLE ID . ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA

    ADD             shift and go to state 155
    DROP            shift and go to state 156
    RENAME          shift and go to state 157
    ALTER           shift and go to state 154


state 102

    (250) ALTER_DATABASE -> ALTER DATABASE ID . ALTER_DATABASE_OP
    (251) ALTER_DATABASE_OP -> . RENAME TO ID
    (252) ALTER_DATABASE_OP -> . OWNER TO ALTER_TABLE_OP_OW
    (256) ALTER_DATABASE_OP -> .

    RENAME          shift and go to state 159
    OWNER           shift and go to state 160
    SELECT          reduce using rule 256 (ALTER_DATABASE_OP -> .)
    CREATE          reduce using rule 256 (ALTER_DATABASE_OP -> .)
    INSERT          reduce using rule 256 (ALTER_DATABASE_OP -> .)
    UPDATE          reduce using rule 256 (ALTER_DATABASE_OP -> .)
    DELETE          reduce using rule 256 (ALTER_DATABASE_OP -> .)
    DROP            reduce using rule 256 (ALTER_DATABASE_OP -> .)
    ALTER           reduce using rule 256 (ALTER_DATABASE_OP -> .)
    SHOW            reduce using rule 256 (ALTER_DATABASE_OP -> .)
    $end            reduce using rule 256 (ALTER_DATABASE_OP -> .)

    ALTER_DATABASE_OP              shift and go to state 158

state 103

    (247) SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .

    SELECT          reduce using rule 247 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    CREATE          reduce using rule 247 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    INSERT          reduce using rule 247 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    UPDATE          reduce using rule 247 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    DELETE          reduce using rule 247 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    DROP            reduce using rule 247 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    ALTER           reduce using rule 247 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    SHOW            reduce using rule 247 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    $end            reduce using rule 247 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)


state 104

    (248) SHOW_DATABASES_LIKE -> LIKE . CADENADOBLE

    CADENADOBLE     shift and go to state 161


state 105

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS . CUERPO UNIONS
    (8) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS . UNIONS
    (26) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (33) CUERPO -> . WHERE CONDICIONES
    (34) CUERPO -> . MORES
    (135) UNIONS -> . UNIONS UNIONN
    (136) UNIONS -> . UNIONN
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (35) MORES -> . MORES MOREE
    (36) MORES -> . MOREE
    (137) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (138) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (139) UNIONN -> . PUNTOCOMA
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (37) MOREE -> . INNERS
    (38) MOREE -> . GROUPS
    (39) MOREE -> . LIMITS
    (140) COMPORTAMIENTO -> . UNION
    (141) COMPORTAMIENTO -> . INTERSECT
    (142) COMPORTAMIENTO -> . EXCEPT
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (66) INNERS -> . INNERS INNERR
    (67) INNERS -> . INNERR
    (85) GROUPS -> . GROUPS GROUPP
    (86) GROUPS -> . GROUPP
    (109) LIMITS -> . LIMITS LIMITT
    (110) LIMITS -> . LIMITT
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (68) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (69) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (70) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (71) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (72) INNERR -> . WHERE CONDICIONES
    (87) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (88) GROUPP -> . GROUP BY EXPRE_LIST
    (111) LIMITT -> . LIMIT EXPRE_NUM
    (112) LIMITT -> . OFFSET EXPRE_NUM
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (75) TIPOS_INNER -> . INNER OUTER
    (76) TIPOS_INNER -> . INNER
    (77) TIPOS_INNER -> . LEFT OUTER
    (78) TIPOS_INNER -> . LEFT
    (79) TIPOS_INNER -> . RIGHT OUTER
    (80) TIPOS_INNER -> . RIGHT
    (81) TIPOS_INNER -> . FULL OUTER
    (82) TIPOS_INNER -> . FULL
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 164
    PUNTOCOMA       shift and go to state 169
    ID              shift and go to state 42
    UNION           shift and go to state 173
    INTERSECT       shift and go to state 174
    EXCEPT          shift and go to state 175
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    JOIN            shift and go to state 180
    GROUP           shift and go to state 181
    LIMIT           shift and go to state 182
    OFFSET          shift and go to state 183
    INNER           shift and go to state 184
    LEFT            shift and go to state 185
    RIGHT           shift and go to state 186
    FULL            shift and go to state 187
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CUERPO                         shift and go to state 162
    UNIONS                         shift and go to state 163
    TABLA                          shift and go to state 77
    MORES                          shift and go to state 165
    UNIONN                         shift and go to state 166
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    MOREE                          shift and go to state 167
    COMPORTAMIENTO                 shift and go to state 168
    QUERY                          shift and go to state 43
    INNERS                         shift and go to state 170
    GROUPS                         shift and go to state 171
    LIMITS                         shift and go to state 172
    ATE_QUE                        shift and go to state 44
    INNERR                         shift and go to state 176
    GROUPP                         shift and go to state 177
    LIMITT                         shift and go to state 178
    EXPRESIONNE                    shift and go to state 47
    TIPOS_INNER                    shift and go to state 179
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 106

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM . NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM . NOMBRES_TABLAS UNIONS
    (26) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (27) NOMBRES_TABLAS -> . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    NOMBRES_TABLAS                 shift and go to state 188
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 107

    (260) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO . FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA

    FROM            shift and go to state 189


state 108

    (261) TIPO_TIEMPO -> YEAR .

    FROM            reduce using rule 261 (TIPO_TIEMPO -> YEAR .)


state 109

    (262) TIPO_TIEMPO -> HOUR .

    FROM            reduce using rule 262 (TIPO_TIEMPO -> HOUR .)


state 110

    (263) TIPO_TIEMPO -> MINUTE .

    FROM            reduce using rule 263 (TIPO_TIEMPO -> MINUTE .)


state 111

    (264) TIPO_TIEMPO -> SECOND .

    FROM            reduce using rule 264 (TIPO_TIEMPO -> SECOND .)


state 112

    (265) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE . COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    COMA            shift and go to state 190


state 113

    (13) LISTA -> NOMBRE_T PUNTO CAMPOS . S
    (14) LISTA -> NOMBRE_T PUNTO CAMPOS .
    (22) S -> . COMA LISTA
    (23) S -> . AS ALIAS
    (24) S -> . AS ALIAS COMA LISTA

    FROM            reduce using rule 14 (LISTA -> NOMBRE_T PUNTO CAMPOS .)
    ID              reduce using rule 14 (LISTA -> NOMBRE_T PUNTO CAMPOS .)
    ASTERISCO       reduce using rule 14 (LISTA -> NOMBRE_T PUNTO CAMPOS .)
    CASE            reduce using rule 14 (LISTA -> NOMBRE_T PUNTO CAMPOS .)
    GREATEST        reduce using rule 14 (LISTA -> NOMBRE_T PUNTO CAMPOS .)
    LEAST           reduce using rule 14 (LISTA -> NOMBRE_T PUNTO CAMPOS .)
    COMA            shift and go to state 67
    AS              shift and go to state 68

    S                              shift and go to state 191

state 114

    (18) CAMPOS -> ID .

    COMA            reduce using rule 18 (CAMPOS -> ID .)
    AS              reduce using rule 18 (CAMPOS -> ID .)
    FROM            reduce using rule 18 (CAMPOS -> ID .)
    ID              reduce using rule 18 (CAMPOS -> ID .)
    ASTERISCO       reduce using rule 18 (CAMPOS -> ID .)
    CASE            reduce using rule 18 (CAMPOS -> ID .)
    GREATEST        reduce using rule 18 (CAMPOS -> ID .)
    LEAST           reduce using rule 18 (CAMPOS -> ID .)
    ASC             reduce using rule 18 (CAMPOS -> ID .)
    DESC            reduce using rule 18 (CAMPOS -> ID .)
    HAVING          reduce using rule 18 (CAMPOS -> ID .)
    GROUP           reduce using rule 18 (CAMPOS -> ID .)
    JOIN            reduce using rule 18 (CAMPOS -> ID .)
    WHERE           reduce using rule 18 (CAMPOS -> ID .)
    LIMIT           reduce using rule 18 (CAMPOS -> ID .)
    OFFSET          reduce using rule 18 (CAMPOS -> ID .)
    INNER           reduce using rule 18 (CAMPOS -> ID .)
    LEFT            reduce using rule 18 (CAMPOS -> ID .)
    RIGHT           reduce using rule 18 (CAMPOS -> ID .)
    FULL            reduce using rule 18 (CAMPOS -> ID .)
    PUNTOCOMA       reduce using rule 18 (CAMPOS -> ID .)
    UNION           reduce using rule 18 (CAMPOS -> ID .)
    INTERSECT       reduce using rule 18 (CAMPOS -> ID .)
    EXCEPT          reduce using rule 18 (CAMPOS -> ID .)


state 115

    (22) S -> COMA LISTA .

    FROM            reduce using rule 22 (S -> COMA LISTA .)
    ID              reduce using rule 22 (S -> COMA LISTA .)
    ASTERISCO       reduce using rule 22 (S -> COMA LISTA .)
    CASE            reduce using rule 22 (S -> COMA LISTA .)
    GREATEST        reduce using rule 22 (S -> COMA LISTA .)
    LEAST           reduce using rule 22 (S -> COMA LISTA .)


state 116

    (23) S -> AS ALIAS .
    (24) S -> AS ALIAS . COMA LISTA

    FROM            reduce using rule 23 (S -> AS ALIAS .)
    ID              reduce using rule 23 (S -> AS ALIAS .)
    ASTERISCO       reduce using rule 23 (S -> AS ALIAS .)
    CASE            reduce using rule 23 (S -> AS ALIAS .)
    GREATEST        reduce using rule 23 (S -> AS ALIAS .)
    LEAST           reduce using rule 23 (S -> AS ALIAS .)
    COMA            shift and go to state 192


state 117

    (21) ALIAS -> ID .

    COMA            reduce using rule 21 (ALIAS -> ID .)
    FROM            reduce using rule 21 (ALIAS -> ID .)
    ID              reduce using rule 21 (ALIAS -> ID .)
    ASTERISCO       reduce using rule 21 (ALIAS -> ID .)
    CASE            reduce using rule 21 (ALIAS -> ID .)
    GREATEST        reduce using rule 21 (ALIAS -> ID .)
    LEAST           reduce using rule 21 (ALIAS -> ID .)
    SET             reduce using rule 21 (ALIAS -> ID .)
    PARIZQ          reduce using rule 21 (ALIAS -> ID .)
    EXISTS          reduce using rule 21 (ALIAS -> ID .)
    ENTERO          reduce using rule 21 (ALIAS -> ID .)
    FLOTANTE        reduce using rule 21 (ALIAS -> ID .)
    CADENASIMPLE    reduce using rule 21 (ALIAS -> ID .)
    CADENADOBLE     reduce using rule 21 (ALIAS -> ID .)
    DEFAULT         reduce using rule 21 (ALIAS -> ID .)
    VALUES          reduce using rule 21 (ALIAS -> ID .)
    WHERE           reduce using rule 21 (ALIAS -> ID .)
    PUNTOCOMA       reduce using rule 21 (ALIAS -> ID .)
    UNION           reduce using rule 21 (ALIAS -> ID .)
    INTERSECT       reduce using rule 21 (ALIAS -> ID .)
    EXCEPT          reduce using rule 21 (ALIAS -> ID .)
    JOIN            reduce using rule 21 (ALIAS -> ID .)
    GROUP           reduce using rule 21 (ALIAS -> ID .)
    LIMIT           reduce using rule 21 (ALIAS -> ID .)
    OFFSET          reduce using rule 21 (ALIAS -> ID .)
    INNER           reduce using rule 21 (ALIAS -> ID .)
    LEFT            reduce using rule 21 (ALIAS -> ID .)
    RIGHT           reduce using rule 21 (ALIAS -> ID .)
    FULL            reduce using rule 21 (ALIAS -> ID .)
    PUNTO           reduce using rule 21 (ALIAS -> ID .)
    ASC             reduce using rule 21 (ALIAS -> ID .)
    DESC            reduce using rule 21 (ALIAS -> ID .)
    HAVING          reduce using rule 21 (ALIAS -> ID .)


state 118

    (143) EXPRESIONES_C -> CASE WHEN CONDICIONES . THEN EXPRESIONNE CUERPOO
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    THEN            shift and go to state 193
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    EXPRESIONNE                    shift and go to state 119
    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 119

    (45) CONDICION_REL -> EXPRESIONNE . OPERADOR EXPRESIONNE
    (47) CONDICION_REL -> EXPRESIONNE .
    (60) OPERADOR -> . IGUAL
    (61) OPERADOR -> . DIFERENTE
    (62) OPERADOR -> . MAYOR
    (63) OPERADOR -> . MENOR
    (64) OPERADOR -> . MENORIGUAL
    (65) OPERADOR -> . MAYORIGUAL

    AND             reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    OR              reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    THEN            reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    NOT             reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    ID              reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    ENTERO          reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    FLOTANTE        reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    CADENADOBLE     reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    PUNTOCOMA       reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    UNION           reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    INTERSECT       reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    EXCEPT          reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    JOIN            reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    WHERE           reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    INNER           reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    LEFT            reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    RIGHT           reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    FULL            reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    GROUP           reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    LIMIT           reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    OFFSET          reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    PARDER          reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    IGUAL           shift and go to state 90
    DIFERENTE       shift and go to state 91
    MAYOR           shift and go to state 92
    MENOR           shift and go to state 93
    MENORIGUAL      shift and go to state 94
    MAYORIGUAL      shift and go to state 95

    OPERADOR                       shift and go to state 195

state 120

    (41) CONDICIONES -> CONDICION .

    THEN            reduce using rule 41 (CONDICIONES -> CONDICION .)
    NOT             reduce using rule 41 (CONDICIONES -> CONDICION .)
    ID              reduce using rule 41 (CONDICIONES -> CONDICION .)
    ENTERO          reduce using rule 41 (CONDICIONES -> CONDICION .)
    FLOTANTE        reduce using rule 41 (CONDICIONES -> CONDICION .)
    CADENASIMPLE    reduce using rule 41 (CONDICIONES -> CONDICION .)
    CADENADOBLE     reduce using rule 41 (CONDICIONES -> CONDICION .)
    PUNTOCOMA       reduce using rule 41 (CONDICIONES -> CONDICION .)
    UNION           reduce using rule 41 (CONDICIONES -> CONDICION .)
    INTERSECT       reduce using rule 41 (CONDICIONES -> CONDICION .)
    EXCEPT          reduce using rule 41 (CONDICIONES -> CONDICION .)
    JOIN            reduce using rule 41 (CONDICIONES -> CONDICION .)
    WHERE           reduce using rule 41 (CONDICIONES -> CONDICION .)
    INNER           reduce using rule 41 (CONDICIONES -> CONDICION .)
    LEFT            reduce using rule 41 (CONDICIONES -> CONDICION .)
    RIGHT           reduce using rule 41 (CONDICIONES -> CONDICION .)
    FULL            reduce using rule 41 (CONDICIONES -> CONDICION .)
    GROUP           reduce using rule 41 (CONDICIONES -> CONDICION .)
    LIMIT           reduce using rule 41 (CONDICIONES -> CONDICION .)
    OFFSET          reduce using rule 41 (CONDICIONES -> CONDICION .)
    PARDER          reduce using rule 41 (CONDICIONES -> CONDICION .)


state 121

    (42) CONDICION -> CONDICION_REL . SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> CONDICION_REL . SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> CONDICION_REL .
    (51) SIMBOLO_LOGICO -> . AND
    (52) SIMBOLO_LOGICO -> . OR

    THEN            reduce using rule 44 (CONDICION -> CONDICION_REL .)
    NOT             reduce using rule 44 (CONDICION -> CONDICION_REL .)
    ID              reduce using rule 44 (CONDICION -> CONDICION_REL .)
    ENTERO          reduce using rule 44 (CONDICION -> CONDICION_REL .)
    FLOTANTE        reduce using rule 44 (CONDICION -> CONDICION_REL .)
    CADENASIMPLE    reduce using rule 44 (CONDICION -> CONDICION_REL .)
    CADENADOBLE     reduce using rule 44 (CONDICION -> CONDICION_REL .)
    PUNTOCOMA       reduce using rule 44 (CONDICION -> CONDICION_REL .)
    UNION           reduce using rule 44 (CONDICION -> CONDICION_REL .)
    INTERSECT       reduce using rule 44 (CONDICION -> CONDICION_REL .)
    EXCEPT          reduce using rule 44 (CONDICION -> CONDICION_REL .)
    JOIN            reduce using rule 44 (CONDICION -> CONDICION_REL .)
    WHERE           reduce using rule 44 (CONDICION -> CONDICION_REL .)
    INNER           reduce using rule 44 (CONDICION -> CONDICION_REL .)
    LEFT            reduce using rule 44 (CONDICION -> CONDICION_REL .)
    RIGHT           reduce using rule 44 (CONDICION -> CONDICION_REL .)
    FULL            reduce using rule 44 (CONDICION -> CONDICION_REL .)
    GROUP           reduce using rule 44 (CONDICION -> CONDICION_REL .)
    LIMIT           reduce using rule 44 (CONDICION -> CONDICION_REL .)
    OFFSET          reduce using rule 44 (CONDICION -> CONDICION_REL .)
    PARDER          reduce using rule 44 (CONDICION -> CONDICION_REL .)
    AND             shift and go to state 197
    OR              shift and go to state 198

    SIMBOLO_LOGICO                 shift and go to state 196

state 122

    (46) CONDICION_REL -> SIMBOLO_NEG . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    EXPRESIONNE                    shift and go to state 199
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 123

    (53) SIMBOLO_NEG -> NOT .

    ID              reduce using rule 53 (SIMBOLO_NEG -> NOT .)
    ENTERO          reduce using rule 53 (SIMBOLO_NEG -> NOT .)
    FLOTANTE        reduce using rule 53 (SIMBOLO_NEG -> NOT .)
    CADENASIMPLE    reduce using rule 53 (SIMBOLO_NEG -> NOT .)
    CADENADOBLE     reduce using rule 53 (SIMBOLO_NEG -> NOT .)


state 124

    (54) NOMBRE_C -> ID .
    (55) CAMPOSC -> ID .

    PUNTO           reduce using rule 54 (NOMBRE_C -> ID .)
    IGUAL           reduce using rule 55 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 55 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)
    AND             reduce using rule 55 (CAMPOSC -> ID .)
    OR              reduce using rule 55 (CAMPOSC -> ID .)
    THEN            reduce using rule 55 (CAMPOSC -> ID .)
    NOT             reduce using rule 55 (CAMPOSC -> ID .)
    ID              reduce using rule 55 (CAMPOSC -> ID .)
    ENTERO          reduce using rule 55 (CAMPOSC -> ID .)
    FLOTANTE        reduce using rule 55 (CAMPOSC -> ID .)
    CADENASIMPLE    reduce using rule 55 (CAMPOSC -> ID .)
    CADENADOBLE     reduce using rule 55 (CAMPOSC -> ID .)
    PARDER          reduce using rule 55 (CAMPOSC -> ID .)
    PUNTOCOMA       reduce using rule 55 (CAMPOSC -> ID .)
    UNION           reduce using rule 55 (CAMPOSC -> ID .)
    INTERSECT       reduce using rule 55 (CAMPOSC -> ID .)
    EXCEPT          reduce using rule 55 (CAMPOSC -> ID .)
    JOIN            reduce using rule 55 (CAMPOSC -> ID .)
    WHERE           reduce using rule 55 (CAMPOSC -> ID .)
    INNER           reduce using rule 55 (CAMPOSC -> ID .)
    LEFT            reduce using rule 55 (CAMPOSC -> ID .)
    RIGHT           reduce using rule 55 (CAMPOSC -> ID .)
    FULL            reduce using rule 55 (CAMPOSC -> ID .)
    GROUP           reduce using rule 55 (CAMPOSC -> ID .)
    LIMIT           reduce using rule 55 (CAMPOSC -> ID .)
    OFFSET          reduce using rule 55 (CAMPOSC -> ID .)
    WHEN            reduce using rule 55 (CAMPOSC -> ID .)
    END             reduce using rule 55 (CAMPOSC -> ID .)
    ELSE            reduce using rule 55 (CAMPOSC -> ID .)


state 125

    (144) EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE . PARDER

    PARDER          shift and go to state 200


state 126

    (145) EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE . PARDER

    PARDER          shift and go to state 201


state 127

    (149) DML_COMANDOS -> CREATE TABLE ID PARIZQ . CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (150) DML_COMANDOS -> CREATE TABLE ID PARIZQ . CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
    (151) CUERPO_CREATE_TABLE -> . LISTA_DE_COLUMNAS
    (152) LISTA_DE_COLUMNAS -> . LISTA_DE_COLUMNAS LISTA2
    (153) LISTA_DE_COLUMNAS -> . LISTA2
    (154) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
    (155) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE
    (156) LISTA2 -> . CONSTRAINT ID UNIQUE
    (157) LISTA2 -> . CONSTRAINT ID UNIQUE COMA
    (158) LISTA2 -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
    (159) LISTA2 -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA
    (160) LISTA2 -> . UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA
    (161) LISTA2 -> . UNIQUE PARIZQ LISTA_DE_IDS PARDER
    (162) LISTA2 -> . CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (163) LISTA2 -> . CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (164) LISTA2 -> . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (165) LISTA2 -> . FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (166) LISTA2 -> . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (167) LISTA2 -> . FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
    (20) NOMBRE_T -> . ID

    CONSTRAINT      shift and go to state 207
    UNIQUE          shift and go to state 208
    PRIMARY         shift and go to state 209
    FOREIGN         shift and go to state 210
    ID              shift and go to state 202

    CUERPO_CREATE_TABLE            shift and go to state 203
    LISTA_DE_COLUMNAS              shift and go to state 204
    LISTA2                         shift and go to state 205
    NOMBRE_T                       shift and go to state 206

state 128

    (238) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS . ID OWNER_DATABASE MODE_DATABASE

    ID              shift and go to state 211


state 129

    (241) IF_NOT_EXISTIS -> IF . NOT EXISTS

    NOT             shift and go to state 212


state 130

    (202) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 213


state 131

    (203) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT . VALUES PUNTOCOMA

    VALUES          shift and go to state 214


state 132

    (205) DATOS -> VALUES . PARIZQ VALORES PARDER

    PARIZQ          shift and go to state 215


state 133

    (204) DATOS -> PARIZQ . COLUMNAS PARDER VALUES PARIZQ VALORES PARDER
    (119) QUERY -> PARIZQ . QUE PARDER
    (120) QUERY -> PARIZQ . QUE PARDER AS_NO
    (206) COLUMNAS -> . COLUMNAS COLUMNA
    (207) COLUMNAS -> . COLUMNA
    (134) QUE -> . DQL_COMANDOS
    (208) COLUMNA -> . ID COMA
    (209) COLUMNA -> . ID
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (260) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (265) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    ID              shift and go to state 218
    SELECT          shift and go to state 7

    COLUMNAS                       shift and go to state 216
    QUE                            shift and go to state 84
    COLUMNA                        shift and go to state 217
    DQL_COMANDOS                   shift and go to state 85

state 134

    (218) CAMPO -> NOMBRES_TABLAS . PUNTO ID IGUAL EXPRESION_GLOBAL
    (219) CAMPO -> NOMBRES_TABLAS . PUNTO ID IGUAL EXPRESION_GLOBAL C
    (26) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    PUNTO           shift and go to state 219
    ID              shift and go to state 42
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    TABLA                          shift and go to state 77
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 135

    (214) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN . WHERE CONDICIONES PUNTOCOMA
    (215) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN . PUNTOCOMA
    (216) CAMPOSN -> CAMPOSN . CAMPO
    (218) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL
    (219) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C
    (220) CAMPO -> . ID IGUAL EXPRESION_GLOBAL
    (221) CAMPO -> . ID IGUAL EXPRESION_GLOBAL C
    (26) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (27) NOMBRES_TABLAS -> . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 220
    PUNTOCOMA       shift and go to state 221
    ID              shift and go to state 137
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    NOMBRES_TABLAS                 shift and go to state 134
    CAMPO                          shift and go to state 222
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 136

    (217) CAMPOSN -> CAMPO .

    WHERE           reduce using rule 217 (CAMPOSN -> CAMPO .)
    PUNTOCOMA       reduce using rule 217 (CAMPOSN -> CAMPO .)
    ID              reduce using rule 217 (CAMPOSN -> CAMPO .)
    PARIZQ          reduce using rule 217 (CAMPOSN -> CAMPO .)
    EXISTS          reduce using rule 217 (CAMPOSN -> CAMPO .)
    ENTERO          reduce using rule 217 (CAMPOSN -> CAMPO .)
    FLOTANTE        reduce using rule 217 (CAMPOSN -> CAMPO .)
    CADENASIMPLE    reduce using rule 217 (CAMPOSN -> CAMPO .)
    CADENADOBLE     reduce using rule 217 (CAMPOSN -> CAMPO .)


state 137

    (220) CAMPO -> ID . IGUAL EXPRESION_GLOBAL
    (221) CAMPO -> ID . IGUAL EXPRESION_GLOBAL C
    (20) NOMBRE_T -> ID .
    (128) ATE_QUE -> ID .
    (54) NOMBRE_C -> ID .
    (55) CAMPOSC -> ID .

  ! reduce/reduce conflict for PARIZQ resolved using rule 20 (NOMBRE_T -> ID .)
  ! reduce/reduce conflict for PUNTO resolved using rule 20 (NOMBRE_T -> ID .)
  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 223
    COMA            reduce using rule 20 (NOMBRE_T -> ID .)
    AS              reduce using rule 20 (NOMBRE_T -> ID .)
    PUNTO           reduce using rule 20 (NOMBRE_T -> ID .)
    ID              reduce using rule 20 (NOMBRE_T -> ID .)
    PARIZQ          reduce using rule 20 (NOMBRE_T -> ID .)
    EXISTS          reduce using rule 20 (NOMBRE_T -> ID .)
    ENTERO          reduce using rule 20 (NOMBRE_T -> ID .)
    FLOTANTE        reduce using rule 20 (NOMBRE_T -> ID .)
    CADENASIMPLE    reduce using rule 20 (NOMBRE_T -> ID .)
    CADENADOBLE     reduce using rule 20 (NOMBRE_T -> ID .)
    IN              reduce using rule 55 (CAMPOSC -> ID .)
    NOT             reduce using rule 55 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 55 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)

  ! PARIZQ          [ reduce using rule 128 (ATE_QUE -> ID .) ]
  ! PUNTO           [ reduce using rule 54 (NOMBRE_C -> ID .) ]
  ! IGUAL           [ reduce using rule 55 (CAMPOSC -> ID .) ]


state 138

    (31) S1 -> COMA TABLA .

    SET             reduce using rule 31 (S1 -> COMA TABLA .)
    ID              reduce using rule 31 (S1 -> COMA TABLA .)
    PARIZQ          reduce using rule 31 (S1 -> COMA TABLA .)
    EXISTS          reduce using rule 31 (S1 -> COMA TABLA .)
    ENTERO          reduce using rule 31 (S1 -> COMA TABLA .)
    FLOTANTE        reduce using rule 31 (S1 -> COMA TABLA .)
    CADENASIMPLE    reduce using rule 31 (S1 -> COMA TABLA .)
    CADENADOBLE     reduce using rule 31 (S1 -> COMA TABLA .)
    DEFAULT         reduce using rule 31 (S1 -> COMA TABLA .)
    VALUES          reduce using rule 31 (S1 -> COMA TABLA .)
    WHERE           reduce using rule 31 (S1 -> COMA TABLA .)
    PUNTOCOMA       reduce using rule 31 (S1 -> COMA TABLA .)
    UNION           reduce using rule 31 (S1 -> COMA TABLA .)
    INTERSECT       reduce using rule 31 (S1 -> COMA TABLA .)
    EXCEPT          reduce using rule 31 (S1 -> COMA TABLA .)
    JOIN            reduce using rule 31 (S1 -> COMA TABLA .)
    GROUP           reduce using rule 31 (S1 -> COMA TABLA .)
    LIMIT           reduce using rule 31 (S1 -> COMA TABLA .)
    OFFSET          reduce using rule 31 (S1 -> COMA TABLA .)
    INNER           reduce using rule 31 (S1 -> COMA TABLA .)
    LEFT            reduce using rule 31 (S1 -> COMA TABLA .)
    RIGHT           reduce using rule 31 (S1 -> COMA TABLA .)
    FULL            reduce using rule 31 (S1 -> COMA TABLA .)
    PUNTO           reduce using rule 31 (S1 -> COMA TABLA .)


state 139

    (32) S1 -> AS ALIAS .

    SET             reduce using rule 32 (S1 -> AS ALIAS .)
    ID              reduce using rule 32 (S1 -> AS ALIAS .)
    PARIZQ          reduce using rule 32 (S1 -> AS ALIAS .)
    EXISTS          reduce using rule 32 (S1 -> AS ALIAS .)
    ENTERO          reduce using rule 32 (S1 -> AS ALIAS .)
    FLOTANTE        reduce using rule 32 (S1 -> AS ALIAS .)
    CADENASIMPLE    reduce using rule 32 (S1 -> AS ALIAS .)
    CADENADOBLE     reduce using rule 32 (S1 -> AS ALIAS .)
    DEFAULT         reduce using rule 32 (S1 -> AS ALIAS .)
    VALUES          reduce using rule 32 (S1 -> AS ALIAS .)
    WHERE           reduce using rule 32 (S1 -> AS ALIAS .)
    PUNTOCOMA       reduce using rule 32 (S1 -> AS ALIAS .)
    UNION           reduce using rule 32 (S1 -> AS ALIAS .)
    INTERSECT       reduce using rule 32 (S1 -> AS ALIAS .)
    EXCEPT          reduce using rule 32 (S1 -> AS ALIAS .)
    JOIN            reduce using rule 32 (S1 -> AS ALIAS .)
    GROUP           reduce using rule 32 (S1 -> AS ALIAS .)
    LIMIT           reduce using rule 32 (S1 -> AS ALIAS .)
    OFFSET          reduce using rule 32 (S1 -> AS ALIAS .)
    INNER           reduce using rule 32 (S1 -> AS ALIAS .)
    LEFT            reduce using rule 32 (S1 -> AS ALIAS .)
    RIGHT           reduce using rule 32 (S1 -> AS ALIAS .)
    FULL            reduce using rule 32 (S1 -> AS ALIAS .)
    PUNTO           reduce using rule 32 (S1 -> AS ALIAS .)


state 140

    (117) QUERY -> ATE_QUE PARIZQ QUE . PARDER
    (118) QUERY -> ATE_QUE PARIZQ QUE . PARDER AS_NO

    PARDER          shift and go to state 224


state 141

    (119) QUERY -> PARIZQ QUE PARDER .
    (120) QUERY -> PARIZQ QUE PARDER . AS_NO
    (121) AS_NO -> . COMA QUERY
    (122) AS_NO -> . AS NO_N
    (123) AS_NO -> . AS NO_N COMA QUERY

    PARIZQ          reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    EXISTS          reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    ID              reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    ENTERO          reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    FLOTANTE        reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    CADENASIMPLE    reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    CADENADOBLE     reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    SET             reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    DEFAULT         reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    VALUES          reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    WHERE           reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    PUNTOCOMA       reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    UNION           reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    INTERSECT       reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    EXCEPT          reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    JOIN            reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    GROUP           reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    LIMIT           reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    OFFSET          reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    INNER           reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    LEFT            reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    RIGHT           reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    FULL            reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    PUNTO           reduce using rule 119 (QUERY -> PARIZQ QUE PARDER .)
    COMA            shift and go to state 226
    AS              shift and go to state 227

    AS_NO                          shift and go to state 225

state 142

    (127) ATE_QUE -> EXPRESIONNE OPERADOR OPCIONALESS2 .

    PARIZQ          reduce using rule 127 (ATE_QUE -> EXPRESIONNE OPERADOR OPCIONALESS2 .)


state 143

    (131) OPCIONALESS2 -> ANY .

    PARIZQ          reduce using rule 131 (OPCIONALESS2 -> ANY .)


state 144

    (132) OPCIONALESS2 -> ALL .

    PARIZQ          reduce using rule 132 (OPCIONALESS2 -> ALL .)


state 145

    (133) OPCIONALESS2 -> SOME .

    PARIZQ          reduce using rule 133 (OPCIONALESS2 -> SOME .)


state 146

    (130) OPCIONALESS -> NOT IN .

    PARIZQ          reduce using rule 130 (OPCIONALESS -> NOT IN .)


state 147

    (49) EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .

    IN              reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    NOT             reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    IGUAL           reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    DIFERENTE       reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MAYOR           reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MENOR           reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MENORIGUAL      reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MAYORIGUAL      reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    AND             reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    OR              reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    THEN            reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    ID              reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    ENTERO          reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    FLOTANTE        reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    CADENASIMPLE    reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    CADENADOBLE     reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    PARDER          reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    PUNTOCOMA       reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    UNION           reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    INTERSECT       reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    EXCEPT          reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    JOIN            reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    WHERE           reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    INNER           reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    LEFT            reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    RIGHT           reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    FULL            reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    GROUP           reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    LIMIT           reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    OFFSET          reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    WHEN            reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    END             reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    ELSE            reduce using rule 49 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)


state 148

    (55) CAMPOSC -> ID .

    IN              reduce using rule 55 (CAMPOSC -> ID .)
    NOT             reduce using rule 55 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 55 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 55 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENOR           reduce using rule 55 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 55 (CAMPOSC -> ID .)
    AND             reduce using rule 55 (CAMPOSC -> ID .)
    OR              reduce using rule 55 (CAMPOSC -> ID .)
    THEN            reduce using rule 55 (CAMPOSC -> ID .)
    ID              reduce using rule 55 (CAMPOSC -> ID .)
    ENTERO          reduce using rule 55 (CAMPOSC -> ID .)
    FLOTANTE        reduce using rule 55 (CAMPOSC -> ID .)
    CADENASIMPLE    reduce using rule 55 (CAMPOSC -> ID .)
    CADENADOBLE     reduce using rule 55 (CAMPOSC -> ID .)
    PARDER          reduce using rule 55 (CAMPOSC -> ID .)
    PUNTOCOMA       reduce using rule 55 (CAMPOSC -> ID .)
    UNION           reduce using rule 55 (CAMPOSC -> ID .)
    INTERSECT       reduce using rule 55 (CAMPOSC -> ID .)
    EXCEPT          reduce using rule 55 (CAMPOSC -> ID .)
    JOIN            reduce using rule 55 (CAMPOSC -> ID .)
    WHERE           reduce using rule 55 (CAMPOSC -> ID .)
    INNER           reduce using rule 55 (CAMPOSC -> ID .)
    LEFT            reduce using rule 55 (CAMPOSC -> ID .)
    RIGHT           reduce using rule 55 (CAMPOSC -> ID .)
    FULL            reduce using rule 55 (CAMPOSC -> ID .)
    GROUP           reduce using rule 55 (CAMPOSC -> ID .)
    LIMIT           reduce using rule 55 (CAMPOSC -> ID .)
    OFFSET          reduce using rule 55 (CAMPOSC -> ID .)
    WHEN            reduce using rule 55 (CAMPOSC -> ID .)
    END             reduce using rule 55 (CAMPOSC -> ID .)
    ELSE            reduce using rule 55 (CAMPOSC -> ID .)


state 149

    (223) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE . CONDICIONES PUNTOCOMA
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 228
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 150

    (224) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .

    SELECT          reduce using rule 224 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    CREATE          reduce using rule 224 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    INSERT          reduce using rule 224 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    UPDATE          reduce using rule 224 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    DELETE          reduce using rule 224 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    DROP            reduce using rule 224 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    ALTER           reduce using rule 224 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    SHOW            reduce using rule 224 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    $end            reduce using rule 224 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)


state 151

    (225) DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .

    SELECT          reduce using rule 225 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    CREATE          reduce using rule 225 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    INSERT          reduce using rule 225 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    UPDATE          reduce using rule 225 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    DELETE          reduce using rule 225 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    DROP            reduce using rule 225 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    ALTER           reduce using rule 225 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    SHOW            reduce using rule 225 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    $end            reduce using rule 225 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)


state 152

    (257) DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .

    SELECT          reduce using rule 257 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    CREATE          reduce using rule 257 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    INSERT          reduce using rule 257 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    UPDATE          reduce using rule 257 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    DELETE          reduce using rule 257 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    DROP            reduce using rule 257 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    ALTER           reduce using rule 257 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    SHOW            reduce using rule 257 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    $end            reduce using rule 257 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)


state 153

    (258) IF_EXISTS_DATABASE -> IF EXISTS .

    ID              reduce using rule 258 (IF_EXISTS_DATABASE -> IF EXISTS .)


state 154

    (230) DML_COMANDOS -> ALTER TABLE ID ALTER . COLUMN ID SET NOT NULL PUNTOCOMA

    COLUMN          shift and go to state 229


state 155

    (226) DML_COMANDOS -> ALTER TABLE ID ADD . COLUMN ID TIPO_CAMPO PUNTOCOMA
    (231) DML_COMANDOS -> ALTER TABLE ID ADD . FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (232) DML_COMANDOS -> ALTER TABLE ID ADD . CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA

    COLUMN          shift and go to state 230
    FOREIGN         shift and go to state 231
    CONSTRAINT      shift and go to state 232


state 156

    (227) DML_COMANDOS -> ALTER TABLE ID DROP . COLUMN CAMPOSC PUNTOCOMA
    (229) DML_COMANDOS -> ALTER TABLE ID DROP . CONSTRAINT ID PUNTOCOMA

    COLUMN          shift and go to state 233
    CONSTRAINT      shift and go to state 234


state 157

    (228) DML_COMANDOS -> ALTER TABLE ID RENAME . COLUMN ID TO ID PUNTOCOMA

    COLUMN          shift and go to state 235


state 158

    (250) ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .

    SELECT          reduce using rule 250 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    CREATE          reduce using rule 250 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    INSERT          reduce using rule 250 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    UPDATE          reduce using rule 250 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    DELETE          reduce using rule 250 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    DROP            reduce using rule 250 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    ALTER           reduce using rule 250 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    SHOW            reduce using rule 250 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    $end            reduce using rule 250 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)


state 159

    (251) ALTER_DATABASE_OP -> RENAME . TO ID

    TO              shift and go to state 236


state 160

    (252) ALTER_DATABASE_OP -> OWNER . TO ALTER_TABLE_OP_OW

    TO              shift and go to state 237


state 161

    (248) SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .

    SELECT          reduce using rule 248 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    CREATE          reduce using rule 248 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    INSERT          reduce using rule 248 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    UPDATE          reduce using rule 248 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    DELETE          reduce using rule 248 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    DROP            reduce using rule 248 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    ALTER           reduce using rule 248 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    SHOW            reduce using rule 248 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    $end            reduce using rule 248 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)


state 162

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO . UNIONS
    (135) UNIONS -> . UNIONS UNIONN
    (136) UNIONS -> . UNIONN
    (137) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (138) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (139) UNIONN -> . PUNTOCOMA
    (140) COMPORTAMIENTO -> . UNION
    (141) COMPORTAMIENTO -> . INTERSECT
    (142) COMPORTAMIENTO -> . EXCEPT

    PUNTOCOMA       shift and go to state 169
    UNION           shift and go to state 173
    INTERSECT       shift and go to state 174
    EXCEPT          shift and go to state 175

    UNIONS                         shift and go to state 238
    UNIONN                         shift and go to state 166
    COMPORTAMIENTO                 shift and go to state 168

state 163

    (8) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .
    (135) UNIONS -> UNIONS . UNIONN
    (137) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (138) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (139) UNIONN -> . PUNTOCOMA
    (140) COMPORTAMIENTO -> . UNION
    (141) COMPORTAMIENTO -> . INTERSECT
    (142) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    CREATE          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    INSERT          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    UPDATE          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DELETE          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DROP            reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    ALTER           reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    SHOW            reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    $end            reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PARDER          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PUNTOCOMA       shift and go to state 169
    UNION           shift and go to state 173
    INTERSECT       shift and go to state 174
    EXCEPT          shift and go to state 175

  ! PUNTOCOMA       [ reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! UNION           [ reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! INTERSECT       [ reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! EXCEPT          [ reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]

    UNIONN                         shift and go to state 239
    COMPORTAMIENTO                 shift and go to state 168

state 164

    (33) CUERPO -> WHERE . CONDICIONES
    (72) INNERR -> WHERE . CONDICIONES
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 240
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 165

    (34) CUERPO -> MORES .
    (35) MORES -> MORES . MOREE
    (37) MOREE -> . INNERS
    (38) MOREE -> . GROUPS
    (39) MOREE -> . LIMITS
    (66) INNERS -> . INNERS INNERR
    (67) INNERS -> . INNERR
    (85) GROUPS -> . GROUPS GROUPP
    (86) GROUPS -> . GROUPP
    (109) LIMITS -> . LIMITS LIMITT
    (110) LIMITS -> . LIMITT
    (68) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (69) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (70) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (71) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (72) INNERR -> . WHERE CONDICIONES
    (87) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (88) GROUPP -> . GROUP BY EXPRE_LIST
    (111) LIMITT -> . LIMIT EXPRE_NUM
    (112) LIMITT -> . OFFSET EXPRE_NUM
    (75) TIPOS_INNER -> . INNER OUTER
    (76) TIPOS_INNER -> . INNER
    (77) TIPOS_INNER -> . LEFT OUTER
    (78) TIPOS_INNER -> . LEFT
    (79) TIPOS_INNER -> . RIGHT OUTER
    (80) TIPOS_INNER -> . RIGHT
    (81) TIPOS_INNER -> . FULL OUTER
    (82) TIPOS_INNER -> . FULL

    PUNTOCOMA       reduce using rule 34 (CUERPO -> MORES .)
    UNION           reduce using rule 34 (CUERPO -> MORES .)
    INTERSECT       reduce using rule 34 (CUERPO -> MORES .)
    EXCEPT          reduce using rule 34 (CUERPO -> MORES .)
    JOIN            shift and go to state 180
    WHERE           shift and go to state 242
    GROUP           shift and go to state 181
    LIMIT           shift and go to state 182
    OFFSET          shift and go to state 183
    INNER           shift and go to state 184
    LEFT            shift and go to state 185
    RIGHT           shift and go to state 186
    FULL            shift and go to state 187

    MOREE                          shift and go to state 241
    INNERS                         shift and go to state 170
    GROUPS                         shift and go to state 171
    LIMITS                         shift and go to state 172
    INNERR                         shift and go to state 176
    GROUPP                         shift and go to state 177
    LIMITT                         shift and go to state 178
    TIPOS_INNER                    shift and go to state 179

state 166

    (136) UNIONS -> UNIONN .

    PUNTOCOMA       reduce using rule 136 (UNIONS -> UNIONN .)
    UNION           reduce using rule 136 (UNIONS -> UNIONN .)
    INTERSECT       reduce using rule 136 (UNIONS -> UNIONN .)
    EXCEPT          reduce using rule 136 (UNIONS -> UNIONN .)
    SELECT          reduce using rule 136 (UNIONS -> UNIONN .)
    CREATE          reduce using rule 136 (UNIONS -> UNIONN .)
    INSERT          reduce using rule 136 (UNIONS -> UNIONN .)
    UPDATE          reduce using rule 136 (UNIONS -> UNIONN .)
    DELETE          reduce using rule 136 (UNIONS -> UNIONN .)
    DROP            reduce using rule 136 (UNIONS -> UNIONN .)
    ALTER           reduce using rule 136 (UNIONS -> UNIONN .)
    SHOW            reduce using rule 136 (UNIONS -> UNIONN .)
    $end            reduce using rule 136 (UNIONS -> UNIONN .)
    PARDER          reduce using rule 136 (UNIONS -> UNIONN .)


state 167

    (36) MORES -> MOREE .

    JOIN            reduce using rule 36 (MORES -> MOREE .)
    WHERE           reduce using rule 36 (MORES -> MOREE .)
    GROUP           reduce using rule 36 (MORES -> MOREE .)
    LIMIT           reduce using rule 36 (MORES -> MOREE .)
    OFFSET          reduce using rule 36 (MORES -> MOREE .)
    INNER           reduce using rule 36 (MORES -> MOREE .)
    LEFT            reduce using rule 36 (MORES -> MOREE .)
    RIGHT           reduce using rule 36 (MORES -> MOREE .)
    FULL            reduce using rule 36 (MORES -> MOREE .)
    PUNTOCOMA       reduce using rule 36 (MORES -> MOREE .)
    UNION           reduce using rule 36 (MORES -> MOREE .)
    INTERSECT       reduce using rule 36 (MORES -> MOREE .)
    EXCEPT          reduce using rule 36 (MORES -> MOREE .)


state 168

    (137) UNIONN -> COMPORTAMIENTO . ALL DQL_COMANDOS
    (138) UNIONN -> COMPORTAMIENTO . DQL_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (260) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (265) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    ALL             shift and go to state 243
    SELECT          shift and go to state 7

    DQL_COMANDOS                   shift and go to state 244

state 169

    (139) UNIONN -> PUNTOCOMA .

    PUNTOCOMA       reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    UNION           reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    INTERSECT       reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    EXCEPT          reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    SELECT          reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    CREATE          reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    INSERT          reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    UPDATE          reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    DELETE          reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    DROP            reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    ALTER           reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    SHOW            reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    $end            reduce using rule 139 (UNIONN -> PUNTOCOMA .)
    PARDER          reduce using rule 139 (UNIONN -> PUNTOCOMA .)


state 170

    (37) MOREE -> INNERS .
    (66) INNERS -> INNERS . INNERR
    (68) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (69) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (70) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (71) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (72) INNERR -> . WHERE CONDICIONES
    (75) TIPOS_INNER -> . INNER OUTER
    (76) TIPOS_INNER -> . INNER
    (77) TIPOS_INNER -> . LEFT OUTER
    (78) TIPOS_INNER -> . LEFT
    (79) TIPOS_INNER -> . RIGHT OUTER
    (80) TIPOS_INNER -> . RIGHT
    (81) TIPOS_INNER -> . FULL OUTER
    (82) TIPOS_INNER -> . FULL

  ! shift/reduce conflict for JOIN resolved as shift
  ! shift/reduce conflict for WHERE resolved as shift
  ! shift/reduce conflict for INNER resolved as shift
  ! shift/reduce conflict for LEFT resolved as shift
  ! shift/reduce conflict for RIGHT resolved as shift
  ! shift/reduce conflict for FULL resolved as shift
    GROUP           reduce using rule 37 (MOREE -> INNERS .)
    LIMIT           reduce using rule 37 (MOREE -> INNERS .)
    OFFSET          reduce using rule 37 (MOREE -> INNERS .)
    PUNTOCOMA       reduce using rule 37 (MOREE -> INNERS .)
    UNION           reduce using rule 37 (MOREE -> INNERS .)
    INTERSECT       reduce using rule 37 (MOREE -> INNERS .)
    EXCEPT          reduce using rule 37 (MOREE -> INNERS .)
    JOIN            shift and go to state 180
    WHERE           shift and go to state 242
    INNER           shift and go to state 184
    LEFT            shift and go to state 185
    RIGHT           shift and go to state 186
    FULL            shift and go to state 187

  ! JOIN            [ reduce using rule 37 (MOREE -> INNERS .) ]
  ! WHERE           [ reduce using rule 37 (MOREE -> INNERS .) ]
  ! INNER           [ reduce using rule 37 (MOREE -> INNERS .) ]
  ! LEFT            [ reduce using rule 37 (MOREE -> INNERS .) ]
  ! RIGHT           [ reduce using rule 37 (MOREE -> INNERS .) ]
  ! FULL            [ reduce using rule 37 (MOREE -> INNERS .) ]

    INNERR                         shift and go to state 245
    TIPOS_INNER                    shift and go to state 179

state 171

    (38) MOREE -> GROUPS .
    (85) GROUPS -> GROUPS . GROUPP
    (87) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (88) GROUPP -> . GROUP BY EXPRE_LIST

  ! shift/reduce conflict for GROUP resolved as shift
    JOIN            reduce using rule 38 (MOREE -> GROUPS .)
    WHERE           reduce using rule 38 (MOREE -> GROUPS .)
    LIMIT           reduce using rule 38 (MOREE -> GROUPS .)
    OFFSET          reduce using rule 38 (MOREE -> GROUPS .)
    INNER           reduce using rule 38 (MOREE -> GROUPS .)
    LEFT            reduce using rule 38 (MOREE -> GROUPS .)
    RIGHT           reduce using rule 38 (MOREE -> GROUPS .)
    FULL            reduce using rule 38 (MOREE -> GROUPS .)
    PUNTOCOMA       reduce using rule 38 (MOREE -> GROUPS .)
    UNION           reduce using rule 38 (MOREE -> GROUPS .)
    INTERSECT       reduce using rule 38 (MOREE -> GROUPS .)
    EXCEPT          reduce using rule 38 (MOREE -> GROUPS .)
    GROUP           shift and go to state 181

  ! GROUP           [ reduce using rule 38 (MOREE -> GROUPS .) ]

    GROUPP                         shift and go to state 246

state 172

    (39) MOREE -> LIMITS .
    (109) LIMITS -> LIMITS . LIMITT
    (111) LIMITT -> . LIMIT EXPRE_NUM
    (112) LIMITT -> . OFFSET EXPRE_NUM

  ! shift/reduce conflict for LIMIT resolved as shift
  ! shift/reduce conflict for OFFSET resolved as shift
    JOIN            reduce using rule 39 (MOREE -> LIMITS .)
    WHERE           reduce using rule 39 (MOREE -> LIMITS .)
    GROUP           reduce using rule 39 (MOREE -> LIMITS .)
    INNER           reduce using rule 39 (MOREE -> LIMITS .)
    LEFT            reduce using rule 39 (MOREE -> LIMITS .)
    RIGHT           reduce using rule 39 (MOREE -> LIMITS .)
    FULL            reduce using rule 39 (MOREE -> LIMITS .)
    PUNTOCOMA       reduce using rule 39 (MOREE -> LIMITS .)
    UNION           reduce using rule 39 (MOREE -> LIMITS .)
    INTERSECT       reduce using rule 39 (MOREE -> LIMITS .)
    EXCEPT          reduce using rule 39 (MOREE -> LIMITS .)
    LIMIT           shift and go to state 182
    OFFSET          shift and go to state 183

  ! LIMIT           [ reduce using rule 39 (MOREE -> LIMITS .) ]
  ! OFFSET          [ reduce using rule 39 (MOREE -> LIMITS .) ]

    LIMITT                         shift and go to state 247

state 173

    (140) COMPORTAMIENTO -> UNION .

    ALL             reduce using rule 140 (COMPORTAMIENTO -> UNION .)
    SELECT          reduce using rule 140 (COMPORTAMIENTO -> UNION .)


state 174

    (141) COMPORTAMIENTO -> INTERSECT .

    ALL             reduce using rule 141 (COMPORTAMIENTO -> INTERSECT .)
    SELECT          reduce using rule 141 (COMPORTAMIENTO -> INTERSECT .)


state 175

    (142) COMPORTAMIENTO -> EXCEPT .

    ALL             reduce using rule 142 (COMPORTAMIENTO -> EXCEPT .)
    SELECT          reduce using rule 142 (COMPORTAMIENTO -> EXCEPT .)


state 176

    (67) INNERS -> INNERR .

    JOIN            reduce using rule 67 (INNERS -> INNERR .)
    WHERE           reduce using rule 67 (INNERS -> INNERR .)
    INNER           reduce using rule 67 (INNERS -> INNERR .)
    LEFT            reduce using rule 67 (INNERS -> INNERR .)
    RIGHT           reduce using rule 67 (INNERS -> INNERR .)
    FULL            reduce using rule 67 (INNERS -> INNERR .)
    GROUP           reduce using rule 67 (INNERS -> INNERR .)
    LIMIT           reduce using rule 67 (INNERS -> INNERR .)
    OFFSET          reduce using rule 67 (INNERS -> INNERR .)
    PUNTOCOMA       reduce using rule 67 (INNERS -> INNERR .)
    UNION           reduce using rule 67 (INNERS -> INNERR .)
    INTERSECT       reduce using rule 67 (INNERS -> INNERR .)
    EXCEPT          reduce using rule 67 (INNERS -> INNERR .)


state 177

    (86) GROUPS -> GROUPP .

    GROUP           reduce using rule 86 (GROUPS -> GROUPP .)
    JOIN            reduce using rule 86 (GROUPS -> GROUPP .)
    WHERE           reduce using rule 86 (GROUPS -> GROUPP .)
    LIMIT           reduce using rule 86 (GROUPS -> GROUPP .)
    OFFSET          reduce using rule 86 (GROUPS -> GROUPP .)
    INNER           reduce using rule 86 (GROUPS -> GROUPP .)
    LEFT            reduce using rule 86 (GROUPS -> GROUPP .)
    RIGHT           reduce using rule 86 (GROUPS -> GROUPP .)
    FULL            reduce using rule 86 (GROUPS -> GROUPP .)
    PUNTOCOMA       reduce using rule 86 (GROUPS -> GROUPP .)
    UNION           reduce using rule 86 (GROUPS -> GROUPP .)
    INTERSECT       reduce using rule 86 (GROUPS -> GROUPP .)
    EXCEPT          reduce using rule 86 (GROUPS -> GROUPP .)


state 178

    (110) LIMITS -> LIMITT .

    LIMIT           reduce using rule 110 (LIMITS -> LIMITT .)
    OFFSET          reduce using rule 110 (LIMITS -> LIMITT .)
    JOIN            reduce using rule 110 (LIMITS -> LIMITT .)
    WHERE           reduce using rule 110 (LIMITS -> LIMITT .)
    GROUP           reduce using rule 110 (LIMITS -> LIMITT .)
    INNER           reduce using rule 110 (LIMITS -> LIMITT .)
    LEFT            reduce using rule 110 (LIMITS -> LIMITT .)
    RIGHT           reduce using rule 110 (LIMITS -> LIMITT .)
    FULL            reduce using rule 110 (LIMITS -> LIMITT .)
    PUNTOCOMA       reduce using rule 110 (LIMITS -> LIMITT .)
    UNION           reduce using rule 110 (LIMITS -> LIMITT .)
    INTERSECT       reduce using rule 110 (LIMITS -> LIMITT .)
    EXCEPT          reduce using rule 110 (LIMITS -> LIMITT .)


state 179

    (68) INNERR -> TIPOS_INNER . JOIN TABLA_REF ON CONDICIONES
    (70) INNERR -> TIPOS_INNER . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER

    JOIN            shift and go to state 248


state 180

    (69) INNERR -> JOIN . TABLA_REF ON CONDICIONES
    (71) INNERR -> JOIN . TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (83) TABLA_REF -> . ID
    (84) TABLA_REF -> . ID AS ID

    ID              shift and go to state 250

    TABLA_REF                      shift and go to state 249

state 181

    (87) GROUPP -> GROUP . BY EXPRE_LIST MORE_ORDER
    (88) GROUPP -> GROUP . BY EXPRE_LIST

    BY              shift and go to state 251


state 182

    (111) LIMITT -> LIMIT . EXPRE_NUM
    (113) EXPRE_NUM -> . ENTERO
    (114) EXPRE_NUM -> . ALL

    ENTERO          shift and go to state 253
    ALL             shift and go to state 254

    EXPRE_NUM                      shift and go to state 252

state 183

    (112) LIMITT -> OFFSET . EXPRE_NUM
    (113) EXPRE_NUM -> . ENTERO
    (114) EXPRE_NUM -> . ALL

    ENTERO          shift and go to state 253
    ALL             shift and go to state 254

    EXPRE_NUM                      shift and go to state 255

state 184

    (75) TIPOS_INNER -> INNER . OUTER
    (76) TIPOS_INNER -> INNER .

    OUTER           shift and go to state 256
    JOIN            reduce using rule 76 (TIPOS_INNER -> INNER .)


state 185

    (77) TIPOS_INNER -> LEFT . OUTER
    (78) TIPOS_INNER -> LEFT .

    OUTER           shift and go to state 257
    JOIN            reduce using rule 78 (TIPOS_INNER -> LEFT .)


state 186

    (79) TIPOS_INNER -> RIGHT . OUTER
    (80) TIPOS_INNER -> RIGHT .

    OUTER           shift and go to state 258
    JOIN            reduce using rule 80 (TIPOS_INNER -> RIGHT .)


state 187

    (81) TIPOS_INNER -> FULL . OUTER
    (82) TIPOS_INNER -> FULL .

    OUTER           shift and go to state 259
    JOIN            reduce using rule 82 (TIPOS_INNER -> FULL .)


state 188

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS . CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS . UNIONS
    (26) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (33) CUERPO -> . WHERE CONDICIONES
    (34) CUERPO -> . MORES
    (135) UNIONS -> . UNIONS UNIONN
    (136) UNIONS -> . UNIONN
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (35) MORES -> . MORES MOREE
    (36) MORES -> . MOREE
    (137) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (138) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (139) UNIONN -> . PUNTOCOMA
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (37) MOREE -> . INNERS
    (38) MOREE -> . GROUPS
    (39) MOREE -> . LIMITS
    (140) COMPORTAMIENTO -> . UNION
    (141) COMPORTAMIENTO -> . INTERSECT
    (142) COMPORTAMIENTO -> . EXCEPT
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (66) INNERS -> . INNERS INNERR
    (67) INNERS -> . INNERR
    (85) GROUPS -> . GROUPS GROUPP
    (86) GROUPS -> . GROUPP
    (109) LIMITS -> . LIMITS LIMITT
    (110) LIMITS -> . LIMITT
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (68) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (69) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (70) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (71) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (72) INNERR -> . WHERE CONDICIONES
    (87) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (88) GROUPP -> . GROUP BY EXPRE_LIST
    (111) LIMITT -> . LIMIT EXPRE_NUM
    (112) LIMITT -> . OFFSET EXPRE_NUM
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (75) TIPOS_INNER -> . INNER OUTER
    (76) TIPOS_INNER -> . INNER
    (77) TIPOS_INNER -> . LEFT OUTER
    (78) TIPOS_INNER -> . LEFT
    (79) TIPOS_INNER -> . RIGHT OUTER
    (80) TIPOS_INNER -> . RIGHT
    (81) TIPOS_INNER -> . FULL OUTER
    (82) TIPOS_INNER -> . FULL
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 164
    PUNTOCOMA       shift and go to state 169
    ID              shift and go to state 42
    UNION           shift and go to state 173
    INTERSECT       shift and go to state 174
    EXCEPT          shift and go to state 175
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    JOIN            shift and go to state 180
    GROUP           shift and go to state 181
    LIMIT           shift and go to state 182
    OFFSET          shift and go to state 183
    INNER           shift and go to state 184
    LEFT            shift and go to state 185
    RIGHT           shift and go to state 186
    FULL            shift and go to state 187
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CUERPO                         shift and go to state 260
    UNIONS                         shift and go to state 261
    TABLA                          shift and go to state 77
    MORES                          shift and go to state 165
    UNIONN                         shift and go to state 166
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    MOREE                          shift and go to state 167
    COMPORTAMIENTO                 shift and go to state 168
    QUERY                          shift and go to state 43
    INNERS                         shift and go to state 170
    GROUPS                         shift and go to state 171
    LIMITS                         shift and go to state 172
    ATE_QUE                        shift and go to state 44
    INNERR                         shift and go to state 176
    GROUPP                         shift and go to state 177
    LIMITT                         shift and go to state 178
    EXPRESIONNE                    shift and go to state 47
    TIPOS_INNER                    shift and go to state 179
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 189

    (260) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM . TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA

    TIMESTAMP       shift and go to state 262


state 190

    (265) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA . INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    INTERVAL        shift and go to state 263


state 191

    (13) LISTA -> NOMBRE_T PUNTO CAMPOS S .

    FROM            reduce using rule 13 (LISTA -> NOMBRE_T PUNTO CAMPOS S .)
    ID              reduce using rule 13 (LISTA -> NOMBRE_T PUNTO CAMPOS S .)
    ASTERISCO       reduce using rule 13 (LISTA -> NOMBRE_T PUNTO CAMPOS S .)
    CASE            reduce using rule 13 (LISTA -> NOMBRE_T PUNTO CAMPOS S .)
    GREATEST        reduce using rule 13 (LISTA -> NOMBRE_T PUNTO CAMPOS S .)
    LEAST           reduce using rule 13 (LISTA -> NOMBRE_T PUNTO CAMPOS S .)


state 192

    (24) S -> AS ALIAS COMA . LISTA
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTA -> . CAMPOS S
    (16) LISTA -> . CAMPOS
    (17) LISTA -> . EXPRESIONES_C
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO
    (143) EXPRESIONES_C -> . CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO
    (144) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (145) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER

    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30
    CASE            shift and go to state 31
    GREATEST        shift and go to state 32
    LEAST           shift and go to state 33

    LISTA                          shift and go to state 264
    NOMBRE_T                       shift and go to state 26
    CAMPOS                         shift and go to state 27
    EXPRESIONES_C                  shift and go to state 28

state 193

    (143) EXPRESIONES_C -> CASE WHEN CONDICIONES THEN . EXPRESIONNE CUERPOO
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    EXPRESIONNE                    shift and go to state 265
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 194

    (40) CONDICIONES -> CONDICIONES CONDICION .

    THEN            reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    NOT             reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    ID              reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    ENTERO          reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    FLOTANTE        reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    CADENASIMPLE    reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    CADENADOBLE     reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    PUNTOCOMA       reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    UNION           reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    INTERSECT       reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    EXCEPT          reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    JOIN            reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    WHERE           reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    INNER           reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    LEFT            reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    RIGHT           reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    FULL            reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    GROUP           reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    LIMIT           reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    OFFSET          reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)
    PARDER          reduce using rule 40 (CONDICIONES -> CONDICIONES CONDICION .)


state 195

    (45) CONDICION_REL -> EXPRESIONNE OPERADOR . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    EXPRESIONNE                    shift and go to state 266
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 196

    (42) CONDICION -> CONDICION_REL SIMBOLO_LOGICO . CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> CONDICION_REL SIMBOLO_LOGICO . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICION_REL                  shift and go to state 267
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 197

    (51) SIMBOLO_LOGICO -> AND .

    NOT             reduce using rule 51 (SIMBOLO_LOGICO -> AND .)
    ID              reduce using rule 51 (SIMBOLO_LOGICO -> AND .)
    ENTERO          reduce using rule 51 (SIMBOLO_LOGICO -> AND .)
    FLOTANTE        reduce using rule 51 (SIMBOLO_LOGICO -> AND .)
    CADENASIMPLE    reduce using rule 51 (SIMBOLO_LOGICO -> AND .)
    CADENADOBLE     reduce using rule 51 (SIMBOLO_LOGICO -> AND .)


state 198

    (52) SIMBOLO_LOGICO -> OR .

    NOT             reduce using rule 52 (SIMBOLO_LOGICO -> OR .)
    ID              reduce using rule 52 (SIMBOLO_LOGICO -> OR .)
    ENTERO          reduce using rule 52 (SIMBOLO_LOGICO -> OR .)
    FLOTANTE        reduce using rule 52 (SIMBOLO_LOGICO -> OR .)
    CADENASIMPLE    reduce using rule 52 (SIMBOLO_LOGICO -> OR .)
    CADENADOBLE     reduce using rule 52 (SIMBOLO_LOGICO -> OR .)


state 199

    (46) CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .

    AND             reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    OR              reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    THEN            reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    NOT             reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    ID              reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    ENTERO          reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    FLOTANTE        reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    CADENADOBLE     reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    PUNTOCOMA       reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    UNION           reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    INTERSECT       reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    EXCEPT          reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    JOIN            reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    WHERE           reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    INNER           reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    LEFT            reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    RIGHT           reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    FULL            reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    GROUP           reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    LIMIT           reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    OFFSET          reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    PARDER          reduce using rule 46 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)


state 200

    (144) EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .

    FROM            reduce using rule 144 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    ID              reduce using rule 144 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    ASTERISCO       reduce using rule 144 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    CASE            reduce using rule 144 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    GREATEST        reduce using rule 144 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    LEAST           reduce using rule 144 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)


state 201

    (145) EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .

    FROM            reduce using rule 145 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    ID              reduce using rule 145 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    ASTERISCO       reduce using rule 145 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    CASE            reduce using rule 145 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    GREATEST        reduce using rule 145 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    LEAST           reduce using rule 145 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)


state 202

    (20) NOMBRE_T -> ID .

    SMALLINT        reduce using rule 20 (NOMBRE_T -> ID .)
    INTEGER         reduce using rule 20 (NOMBRE_T -> ID .)
    INT             reduce using rule 20 (NOMBRE_T -> ID .)
    BIGINT          reduce using rule 20 (NOMBRE_T -> ID .)
    DECIMAL         reduce using rule 20 (NOMBRE_T -> ID .)
    REAL            reduce using rule 20 (NOMBRE_T -> ID .)
    MONEY           reduce using rule 20 (NOMBRE_T -> ID .)
    FLOAT           reduce using rule 20 (NOMBRE_T -> ID .)
    DOUBLE          reduce using rule 20 (NOMBRE_T -> ID .)
    CHARACTER       reduce using rule 20 (NOMBRE_T -> ID .)
    VARCHAR         reduce using rule 20 (NOMBRE_T -> ID .)
    CHAR            reduce using rule 20 (NOMBRE_T -> ID .)
    TEXT            reduce using rule 20 (NOMBRE_T -> ID .)
    BOOLEAN         reduce using rule 20 (NOMBRE_T -> ID .)


state 203

    (149) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE . PARDER PUNTOCOMA
    (150) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE . PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA

    PARDER          shift and go to state 268


state 204

    (151) CUERPO_CREATE_TABLE -> LISTA_DE_COLUMNAS .
    (152) LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS . LISTA2
    (154) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
    (155) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE
    (156) LISTA2 -> . CONSTRAINT ID UNIQUE
    (157) LISTA2 -> . CONSTRAINT ID UNIQUE COMA
    (158) LISTA2 -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
    (159) LISTA2 -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA
    (160) LISTA2 -> . UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA
    (161) LISTA2 -> . UNIQUE PARIZQ LISTA_DE_IDS PARDER
    (162) LISTA2 -> . CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (163) LISTA2 -> . CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (164) LISTA2 -> . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (165) LISTA2 -> . FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (166) LISTA2 -> . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (167) LISTA2 -> . FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
    (20) NOMBRE_T -> . ID

    PARDER          reduce using rule 151 (CUERPO_CREATE_TABLE -> LISTA_DE_COLUMNAS .)
    CONSTRAINT      shift and go to state 207
    UNIQUE          shift and go to state 208
    PRIMARY         shift and go to state 209
    FOREIGN         shift and go to state 210
    ID              shift and go to state 202

    LISTA2                         shift and go to state 269
    NOMBRE_T                       shift and go to state 206

state 205

    (153) LISTA_DE_COLUMNAS -> LISTA2 .

    CONSTRAINT      reduce using rule 153 (LISTA_DE_COLUMNAS -> LISTA2 .)
    UNIQUE          reduce using rule 153 (LISTA_DE_COLUMNAS -> LISTA2 .)
    PRIMARY         reduce using rule 153 (LISTA_DE_COLUMNAS -> LISTA2 .)
    FOREIGN         reduce using rule 153 (LISTA_DE_COLUMNAS -> LISTA2 .)
    ID              reduce using rule 153 (LISTA_DE_COLUMNAS -> LISTA2 .)
    PARDER          reduce using rule 153 (LISTA_DE_COLUMNAS -> LISTA2 .)


state 206

    (154) LISTA2 -> NOMBRE_T . TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
    (155) LISTA2 -> NOMBRE_T . TIPO_CAMPO VALIDACIONES_CREATE_TABLE
    (172) TIPO_CAMPO -> . SMALLINT
    (173) TIPO_CAMPO -> . INTEGER
    (174) TIPO_CAMPO -> . INT
    (175) TIPO_CAMPO -> . BIGINT
    (176) TIPO_CAMPO -> . DECIMAL
    (177) TIPO_CAMPO -> . REAL
    (178) TIPO_CAMPO -> . MONEY
    (179) TIPO_CAMPO -> . FLOAT
    (180) TIPO_CAMPO -> . DOUBLE PRECISION
    (181) TIPO_CAMPO -> . CHARACTER VARYING PARIZQ EXPNUMERICA PARDER
    (182) TIPO_CAMPO -> . VARCHAR PARIZQ EXPNUMERICA PARDER
    (183) TIPO_CAMPO -> . CHARACTER PARIZQ EXPNUMERICA PARDER
    (184) TIPO_CAMPO -> . CHAR PARIZQ EXPNUMERICA PARDER
    (185) TIPO_CAMPO -> . TEXT
    (186) TIPO_CAMPO -> . BOOLEAN

    SMALLINT        shift and go to state 271
    INTEGER         shift and go to state 272
    INT             shift and go to state 273
    BIGINT          shift and go to state 274
    DECIMAL         shift and go to state 275
    REAL            shift and go to state 276
    MONEY           shift and go to state 277
    FLOAT           shift and go to state 278
    DOUBLE          shift and go to state 279
    CHARACTER       shift and go to state 280
    VARCHAR         shift and go to state 281
    CHAR            shift and go to state 282
    TEXT            shift and go to state 283
    BOOLEAN         shift and go to state 284

    TIPO_CAMPO                     shift and go to state 270

state 207

    (156) LISTA2 -> CONSTRAINT . ID UNIQUE
    (157) LISTA2 -> CONSTRAINT . ID UNIQUE COMA
    (158) LISTA2 -> CONSTRAINT . ID CHECK PARIZQ CONDICIONES PARDER
    (159) LISTA2 -> CONSTRAINT . ID CHECK PARIZQ CONDICIONES PARDER COMA
    (162) LISTA2 -> CONSTRAINT . ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (163) LISTA2 -> CONSTRAINT . ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA

    ID              shift and go to state 285


state 208

    (160) LISTA2 -> UNIQUE . PARIZQ LISTA_DE_IDS PARDER COMA
    (161) LISTA2 -> UNIQUE . PARIZQ LISTA_DE_IDS PARDER

    PARIZQ          shift and go to state 286


state 209

    (164) LISTA2 -> PRIMARY . KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (166) LISTA2 -> PRIMARY . KEY PARIZQ LISTA_DE_IDS PARDER

    KEY             shift and go to state 287


state 210

    (165) LISTA2 -> FOREIGN . KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (167) LISTA2 -> FOREIGN . KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER

    KEY             shift and go to state 288


state 211

    (238) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID . OWNER_DATABASE MODE_DATABASE
    (243) OWNER_DATABASE -> . OWNER IGUAL ID
    (244) OWNER_DATABASE -> .

    OWNER           shift and go to state 290
    MODE            reduce using rule 244 (OWNER_DATABASE -> .)
    SELECT          reduce using rule 244 (OWNER_DATABASE -> .)
    CREATE          reduce using rule 244 (OWNER_DATABASE -> .)
    INSERT          reduce using rule 244 (OWNER_DATABASE -> .)
    UPDATE          reduce using rule 244 (OWNER_DATABASE -> .)
    DELETE          reduce using rule 244 (OWNER_DATABASE -> .)
    DROP            reduce using rule 244 (OWNER_DATABASE -> .)
    ALTER           reduce using rule 244 (OWNER_DATABASE -> .)
    SHOW            reduce using rule 244 (OWNER_DATABASE -> .)
    $end            reduce using rule 244 (OWNER_DATABASE -> .)

    OWNER_DATABASE                 shift and go to state 289

state 212

    (241) IF_NOT_EXISTIS -> IF NOT . EXISTS

    EXISTS          shift and go to state 291


state 213

    (202) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .

    SELECT          reduce using rule 202 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    CREATE          reduce using rule 202 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    INSERT          reduce using rule 202 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    UPDATE          reduce using rule 202 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    DELETE          reduce using rule 202 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    DROP            reduce using rule 202 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    ALTER           reduce using rule 202 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    SHOW            reduce using rule 202 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    $end            reduce using rule 202 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)


state 214

    (203) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES . PUNTOCOMA

    PUNTOCOMA       shift and go to state 292


state 215

    (205) DATOS -> VALUES PARIZQ . VALORES PARDER
    (210) VALORES -> . VALORES VALOR
    (211) VALORES -> . VALOR
    (212) VALOR -> . EXPRESION_GLOBAL COMA
    (213) VALOR -> . EXPRESION_GLOBAL
    (233) EXPRESION_GLOBAL -> . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    VALORES                        shift and go to state 294
    VALOR                          shift and go to state 295
    EXPRESION_GLOBAL               shift and go to state 296
    EXPNUMERICA                    shift and go to state 297

state 216

    (204) DATOS -> PARIZQ COLUMNAS . PARDER VALUES PARIZQ VALORES PARDER
    (206) COLUMNAS -> COLUMNAS . COLUMNA
    (208) COLUMNA -> . ID COMA
    (209) COLUMNA -> . ID

    PARDER          shift and go to state 301
    ID              shift and go to state 218

    COLUMNA                        shift and go to state 302

state 217

    (207) COLUMNAS -> COLUMNA .

    PARDER          reduce using rule 207 (COLUMNAS -> COLUMNA .)
    ID              reduce using rule 207 (COLUMNAS -> COLUMNA .)


state 218

    (208) COLUMNA -> ID . COMA
    (209) COLUMNA -> ID .

    COMA            shift and go to state 303
    PARDER          reduce using rule 209 (COLUMNA -> ID .)
    ID              reduce using rule 209 (COLUMNA -> ID .)


state 219

    (218) CAMPO -> NOMBRES_TABLAS PUNTO . ID IGUAL EXPRESION_GLOBAL
    (219) CAMPO -> NOMBRES_TABLAS PUNTO . ID IGUAL EXPRESION_GLOBAL C

    ID              shift and go to state 304


state 220

    (214) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE . CONDICIONES PUNTOCOMA
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 305
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 221

    (215) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .

    SELECT          reduce using rule 215 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    CREATE          reduce using rule 215 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    INSERT          reduce using rule 215 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    UPDATE          reduce using rule 215 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    DELETE          reduce using rule 215 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    DROP            reduce using rule 215 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    ALTER           reduce using rule 215 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    SHOW            reduce using rule 215 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    $end            reduce using rule 215 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)


state 222

    (216) CAMPOSN -> CAMPOSN CAMPO .

    WHERE           reduce using rule 216 (CAMPOSN -> CAMPOSN CAMPO .)
    PUNTOCOMA       reduce using rule 216 (CAMPOSN -> CAMPOSN CAMPO .)
    ID              reduce using rule 216 (CAMPOSN -> CAMPOSN CAMPO .)
    PARIZQ          reduce using rule 216 (CAMPOSN -> CAMPOSN CAMPO .)
    EXISTS          reduce using rule 216 (CAMPOSN -> CAMPOSN CAMPO .)
    ENTERO          reduce using rule 216 (CAMPOSN -> CAMPOSN CAMPO .)
    FLOTANTE        reduce using rule 216 (CAMPOSN -> CAMPOSN CAMPO .)
    CADENASIMPLE    reduce using rule 216 (CAMPOSN -> CAMPOSN CAMPO .)
    CADENADOBLE     reduce using rule 216 (CAMPOSN -> CAMPOSN CAMPO .)


state 223

    (220) CAMPO -> ID IGUAL . EXPRESION_GLOBAL
    (221) CAMPO -> ID IGUAL . EXPRESION_GLOBAL C
    (233) EXPRESION_GLOBAL -> . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPRESION_GLOBAL               shift and go to state 306
    EXPNUMERICA                    shift and go to state 297

state 224

    (117) QUERY -> ATE_QUE PARIZQ QUE PARDER .
    (118) QUERY -> ATE_QUE PARIZQ QUE PARDER . AS_NO
    (121) AS_NO -> . COMA QUERY
    (122) AS_NO -> . AS NO_N
    (123) AS_NO -> . AS NO_N COMA QUERY

    PARIZQ          reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    EXISTS          reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    ID              reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    ENTERO          reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    FLOTANTE        reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    CADENASIMPLE    reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    CADENADOBLE     reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    SET             reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    DEFAULT         reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    VALUES          reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    WHERE           reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    PUNTOCOMA       reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    UNION           reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    INTERSECT       reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    EXCEPT          reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    JOIN            reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    GROUP           reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    LIMIT           reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    OFFSET          reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    INNER           reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    LEFT            reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    RIGHT           reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    FULL            reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    PUNTO           reduce using rule 117 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    COMA            shift and go to state 226
    AS              shift and go to state 227

    AS_NO                          shift and go to state 307

state 225

    (120) QUERY -> PARIZQ QUE PARDER AS_NO .

    PARIZQ          reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    EXISTS          reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    ID              reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    ENTERO          reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    FLOTANTE        reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    CADENASIMPLE    reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    CADENADOBLE     reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    SET             reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    DEFAULT         reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    VALUES          reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    WHERE           reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    PUNTOCOMA       reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    UNION           reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    INTERSECT       reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    EXCEPT          reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    JOIN            reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    GROUP           reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    LIMIT           reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    OFFSET          reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    INNER           reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    LEFT            reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    RIGHT           reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    FULL            reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    PUNTO           reduce using rule 120 (QUERY -> PARIZQ QUE PARDER AS_NO .)


state 226

    (121) AS_NO -> COMA . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ID              shift and go to state 82
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    QUERY                          shift and go to state 308
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 227

    (122) AS_NO -> AS . NO_N
    (123) AS_NO -> AS . NO_N COMA QUERY
    (124) NO_N -> . ID

    ID              shift and go to state 310

    NO_N                           shift and go to state 309

state 228

    (223) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES . PUNTOCOMA
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    PUNTOCOMA       shift and go to state 311
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 229

    (230) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN . ID SET NOT NULL PUNTOCOMA

    ID              shift and go to state 312


state 230

    (226) DML_COMANDOS -> ALTER TABLE ID ADD COLUMN . ID TIPO_CAMPO PUNTOCOMA

    ID              shift and go to state 313


state 231

    (231) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN . KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA

    KEY             shift and go to state 314


state 232

    (232) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT . ID UNIQUE PARIZQ ID PARDER PUNTOCOMA

    ID              shift and go to state 315


state 233

    (227) DML_COMANDOS -> ALTER TABLE ID DROP COLUMN . CAMPOSC PUNTOCOMA
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 148
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CAMPOSC                        shift and go to state 316

state 234

    (229) DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT . ID PUNTOCOMA

    ID              shift and go to state 317


state 235

    (228) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN . ID TO ID PUNTOCOMA

    ID              shift and go to state 318


state 236

    (251) ALTER_DATABASE_OP -> RENAME TO . ID

    ID              shift and go to state 319


state 237

    (252) ALTER_DATABASE_OP -> OWNER TO . ALTER_TABLE_OP_OW
    (253) ALTER_TABLE_OP_OW -> . ID
    (254) ALTER_TABLE_OP_OW -> . CURRENT_USER
    (255) ALTER_TABLE_OP_OW -> . SESSION_USER

    ID              shift and go to state 321
    CURRENT_USER    shift and go to state 322
    SESSION_USER    shift and go to state 323

    ALTER_TABLE_OP_OW              shift and go to state 320

state 238

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .
    (135) UNIONS -> UNIONS . UNIONN
    (137) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (138) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (139) UNIONN -> . PUNTOCOMA
    (140) COMPORTAMIENTO -> . UNION
    (141) COMPORTAMIENTO -> . INTERSECT
    (142) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    CREATE          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    INSERT          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    UPDATE          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DELETE          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DROP            reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    ALTER           reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    SHOW            reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    $end            reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PARDER          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PUNTOCOMA       shift and go to state 169
    UNION           shift and go to state 173
    INTERSECT       shift and go to state 174
    EXCEPT          shift and go to state 175

  ! PUNTOCOMA       [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! UNION           [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! INTERSECT       [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! EXCEPT          [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]

    UNIONN                         shift and go to state 239
    COMPORTAMIENTO                 shift and go to state 168

state 239

    (135) UNIONS -> UNIONS UNIONN .

    PUNTOCOMA       reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    UNION           reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    INTERSECT       reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    EXCEPT          reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    SELECT          reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    CREATE          reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    INSERT          reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    UPDATE          reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    DELETE          reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    DROP            reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    ALTER           reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    SHOW            reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    $end            reduce using rule 135 (UNIONS -> UNIONS UNIONN .)
    PARDER          reduce using rule 135 (UNIONS -> UNIONS UNIONN .)


state 240

    (33) CUERPO -> WHERE CONDICIONES .
    (72) INNERR -> WHERE CONDICIONES .
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 33 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for UNION resolved using rule 33 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for INTERSECT resolved using rule 33 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for EXCEPT resolved using rule 33 (CUERPO -> WHERE CONDICIONES .)
    PUNTOCOMA       reduce using rule 33 (CUERPO -> WHERE CONDICIONES .)
    UNION           reduce using rule 33 (CUERPO -> WHERE CONDICIONES .)
    INTERSECT       reduce using rule 33 (CUERPO -> WHERE CONDICIONES .)
    EXCEPT          reduce using rule 33 (CUERPO -> WHERE CONDICIONES .)
    JOIN            reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    WHERE           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    INNER           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    LEFT            reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    RIGHT           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    FULL            reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    GROUP           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    LIMIT           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    OFFSET          reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

  ! PUNTOCOMA       [ reduce using rule 72 (INNERR -> WHERE CONDICIONES .) ]
  ! UNION           [ reduce using rule 72 (INNERR -> WHERE CONDICIONES .) ]
  ! INTERSECT       [ reduce using rule 72 (INNERR -> WHERE CONDICIONES .) ]
  ! EXCEPT          [ reduce using rule 72 (INNERR -> WHERE CONDICIONES .) ]

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 241

    (35) MORES -> MORES MOREE .

    JOIN            reduce using rule 35 (MORES -> MORES MOREE .)
    WHERE           reduce using rule 35 (MORES -> MORES MOREE .)
    GROUP           reduce using rule 35 (MORES -> MORES MOREE .)
    LIMIT           reduce using rule 35 (MORES -> MORES MOREE .)
    OFFSET          reduce using rule 35 (MORES -> MORES MOREE .)
    INNER           reduce using rule 35 (MORES -> MORES MOREE .)
    LEFT            reduce using rule 35 (MORES -> MORES MOREE .)
    RIGHT           reduce using rule 35 (MORES -> MORES MOREE .)
    FULL            reduce using rule 35 (MORES -> MORES MOREE .)
    PUNTOCOMA       reduce using rule 35 (MORES -> MORES MOREE .)
    UNION           reduce using rule 35 (MORES -> MORES MOREE .)
    INTERSECT       reduce using rule 35 (MORES -> MORES MOREE .)
    EXCEPT          reduce using rule 35 (MORES -> MORES MOREE .)


state 242

    (72) INNERR -> WHERE . CONDICIONES
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 324
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 243

    (137) UNIONN -> COMPORTAMIENTO ALL . DQL_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (260) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (265) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    SELECT          shift and go to state 7

    DQL_COMANDOS                   shift and go to state 325

state 244

    (138) UNIONN -> COMPORTAMIENTO DQL_COMANDOS .

    PUNTOCOMA       reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    UNION           reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    INTERSECT       reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    EXCEPT          reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    SELECT          reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    CREATE          reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    INSERT          reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    UPDATE          reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    DELETE          reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    DROP            reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    ALTER           reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    SHOW            reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    $end            reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    PARDER          reduce using rule 138 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)


state 245

    (66) INNERS -> INNERS INNERR .

    JOIN            reduce using rule 66 (INNERS -> INNERS INNERR .)
    WHERE           reduce using rule 66 (INNERS -> INNERS INNERR .)
    INNER           reduce using rule 66 (INNERS -> INNERS INNERR .)
    LEFT            reduce using rule 66 (INNERS -> INNERS INNERR .)
    RIGHT           reduce using rule 66 (INNERS -> INNERS INNERR .)
    FULL            reduce using rule 66 (INNERS -> INNERS INNERR .)
    GROUP           reduce using rule 66 (INNERS -> INNERS INNERR .)
    LIMIT           reduce using rule 66 (INNERS -> INNERS INNERR .)
    OFFSET          reduce using rule 66 (INNERS -> INNERS INNERR .)
    PUNTOCOMA       reduce using rule 66 (INNERS -> INNERS INNERR .)
    UNION           reduce using rule 66 (INNERS -> INNERS INNERR .)
    INTERSECT       reduce using rule 66 (INNERS -> INNERS INNERR .)
    EXCEPT          reduce using rule 66 (INNERS -> INNERS INNERR .)


state 246

    (85) GROUPS -> GROUPS GROUPP .

    GROUP           reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    JOIN            reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    WHERE           reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    LIMIT           reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    OFFSET          reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    INNER           reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    LEFT            reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    RIGHT           reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    FULL            reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    PUNTOCOMA       reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    UNION           reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    INTERSECT       reduce using rule 85 (GROUPS -> GROUPS GROUPP .)
    EXCEPT          reduce using rule 85 (GROUPS -> GROUPS GROUPP .)


state 247

    (109) LIMITS -> LIMITS LIMITT .

    LIMIT           reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    OFFSET          reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    JOIN            reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    WHERE           reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    GROUP           reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    INNER           reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    LEFT            reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    RIGHT           reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    FULL            reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    PUNTOCOMA       reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    UNION           reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    INTERSECT       reduce using rule 109 (LIMITS -> LIMITS LIMITT .)
    EXCEPT          reduce using rule 109 (LIMITS -> LIMITS LIMITT .)


state 248

    (68) INNERR -> TIPOS_INNER JOIN . TABLA_REF ON CONDICIONES
    (70) INNERR -> TIPOS_INNER JOIN . TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (83) TABLA_REF -> . ID
    (84) TABLA_REF -> . ID AS ID

    ID              shift and go to state 250

    TABLA_REF                      shift and go to state 326

state 249

    (69) INNERR -> JOIN TABLA_REF . ON CONDICIONES
    (71) INNERR -> JOIN TABLA_REF . USING PARIZQ SUB_COLUMN PARDER

    ON              shift and go to state 327
    USING           shift and go to state 328


state 250

    (83) TABLA_REF -> ID .
    (84) TABLA_REF -> ID . AS ID

    ON              reduce using rule 83 (TABLA_REF -> ID .)
    USING           reduce using rule 83 (TABLA_REF -> ID .)
    AS              shift and go to state 329


state 251

    (87) GROUPP -> GROUP BY . EXPRE_LIST MORE_ORDER
    (88) GROUPP -> GROUP BY . EXPRE_LIST
    (89) EXPRE_LIST -> . EXPRE_LIST EXPRES
    (90) EXPRE_LIST -> . EXPRES
    (91) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (92) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (93) EXPRES -> . CAMPOS S2
    (94) EXPRES -> . CAMPOS
    (95) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (96) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (97) EXPRES -> . CAMPOS S2 STATE
    (98) EXPRES -> . CAMPOS STATE
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO

    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30

    EXPRE_LIST                     shift and go to state 330
    EXPRES                         shift and go to state 331
    NOMBRE_T                       shift and go to state 332
    CAMPOS                         shift and go to state 333

state 252

    (111) LIMITT -> LIMIT EXPRE_NUM .

    LIMIT           reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    OFFSET          reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    JOIN            reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    WHERE           reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    GROUP           reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    INNER           reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    LEFT            reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    RIGHT           reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    FULL            reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    PUNTOCOMA       reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    UNION           reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    INTERSECT       reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)
    EXCEPT          reduce using rule 111 (LIMITT -> LIMIT EXPRE_NUM .)


state 253

    (113) EXPRE_NUM -> ENTERO .

    LIMIT           reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    OFFSET          reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    JOIN            reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    WHERE           reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    GROUP           reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    INNER           reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    LEFT            reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    RIGHT           reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    FULL            reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    PUNTOCOMA       reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    UNION           reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    INTERSECT       reduce using rule 113 (EXPRE_NUM -> ENTERO .)
    EXCEPT          reduce using rule 113 (EXPRE_NUM -> ENTERO .)


state 254

    (114) EXPRE_NUM -> ALL .

    LIMIT           reduce using rule 114 (EXPRE_NUM -> ALL .)
    OFFSET          reduce using rule 114 (EXPRE_NUM -> ALL .)
    JOIN            reduce using rule 114 (EXPRE_NUM -> ALL .)
    WHERE           reduce using rule 114 (EXPRE_NUM -> ALL .)
    GROUP           reduce using rule 114 (EXPRE_NUM -> ALL .)
    INNER           reduce using rule 114 (EXPRE_NUM -> ALL .)
    LEFT            reduce using rule 114 (EXPRE_NUM -> ALL .)
    RIGHT           reduce using rule 114 (EXPRE_NUM -> ALL .)
    FULL            reduce using rule 114 (EXPRE_NUM -> ALL .)
    PUNTOCOMA       reduce using rule 114 (EXPRE_NUM -> ALL .)
    UNION           reduce using rule 114 (EXPRE_NUM -> ALL .)
    INTERSECT       reduce using rule 114 (EXPRE_NUM -> ALL .)
    EXCEPT          reduce using rule 114 (EXPRE_NUM -> ALL .)


state 255

    (112) LIMITT -> OFFSET EXPRE_NUM .

    LIMIT           reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    OFFSET          reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    JOIN            reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    WHERE           reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    GROUP           reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    INNER           reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    LEFT            reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    RIGHT           reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    FULL            reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    PUNTOCOMA       reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    UNION           reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    INTERSECT       reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)
    EXCEPT          reduce using rule 112 (LIMITT -> OFFSET EXPRE_NUM .)


state 256

    (75) TIPOS_INNER -> INNER OUTER .

    JOIN            reduce using rule 75 (TIPOS_INNER -> INNER OUTER .)


state 257

    (77) TIPOS_INNER -> LEFT OUTER .

    JOIN            reduce using rule 77 (TIPOS_INNER -> LEFT OUTER .)


state 258

    (79) TIPOS_INNER -> RIGHT OUTER .

    JOIN            reduce using rule 79 (TIPOS_INNER -> RIGHT OUTER .)


state 259

    (81) TIPOS_INNER -> FULL OUTER .

    JOIN            reduce using rule 81 (TIPOS_INNER -> FULL OUTER .)


state 260

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO . UNIONS
    (135) UNIONS -> . UNIONS UNIONN
    (136) UNIONS -> . UNIONN
    (137) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (138) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (139) UNIONN -> . PUNTOCOMA
    (140) COMPORTAMIENTO -> . UNION
    (141) COMPORTAMIENTO -> . INTERSECT
    (142) COMPORTAMIENTO -> . EXCEPT

    PUNTOCOMA       shift and go to state 169
    UNION           shift and go to state 173
    INTERSECT       shift and go to state 174
    EXCEPT          shift and go to state 175

    UNIONS                         shift and go to state 334
    UNIONN                         shift and go to state 166
    COMPORTAMIENTO                 shift and go to state 168

state 261

    (10) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .
    (135) UNIONS -> UNIONS . UNIONN
    (137) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (138) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (139) UNIONN -> . PUNTOCOMA
    (140) COMPORTAMIENTO -> . UNION
    (141) COMPORTAMIENTO -> . INTERSECT
    (142) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    CREATE          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    INSERT          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    UPDATE          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DELETE          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DROP            reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    ALTER           reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    SHOW            reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    $end            reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PARDER          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PUNTOCOMA       shift and go to state 169
    UNION           shift and go to state 173
    INTERSECT       shift and go to state 174
    EXCEPT          shift and go to state 175

  ! PUNTOCOMA       [ reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! UNION           [ reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! INTERSECT       [ reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! EXCEPT          [ reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]

    UNIONN                         shift and go to state 239
    COMPORTAMIENTO                 shift and go to state 168

state 262

    (260) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP . CADENASIMPLE PARDER PUNTOCOMA

    CADENASIMPLE    shift and go to state 335


state 263

    (265) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL . CADENASIMPLE PARDER PUNTOCOMA

    CADENASIMPLE    shift and go to state 336


state 264

    (24) S -> AS ALIAS COMA LISTA .

    FROM            reduce using rule 24 (S -> AS ALIAS COMA LISTA .)
    ID              reduce using rule 24 (S -> AS ALIAS COMA LISTA .)
    ASTERISCO       reduce using rule 24 (S -> AS ALIAS COMA LISTA .)
    CASE            reduce using rule 24 (S -> AS ALIAS COMA LISTA .)
    GREATEST        reduce using rule 24 (S -> AS ALIAS COMA LISTA .)
    LEAST           reduce using rule 24 (S -> AS ALIAS COMA LISTA .)


state 265

    (143) EXPRESIONES_C -> CASE WHEN CONDICIONES THEN EXPRESIONNE . CUERPOO
    (146) CUERPOO -> . WHEN CONDICIONES EXPRESIONNE END
    (147) CUERPOO -> . WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END
    (148) CUERPOO -> . END

    WHEN            shift and go to state 337
    END             shift and go to state 339

    CUERPOO                        shift and go to state 338

state 266

    (45) CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .

    AND             reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    OR              reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    THEN            reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    NOT             reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    ID              reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    ENTERO          reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    FLOTANTE        reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    CADENADOBLE     reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    PUNTOCOMA       reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    UNION           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    INTERSECT       reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    EXCEPT          reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    JOIN            reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    WHERE           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    INNER           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    LEFT            reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    RIGHT           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    FULL            reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    GROUP           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    LIMIT           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    OFFSET          reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    PARDER          reduce using rule 45 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)


state 267

    (42) CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL . OTRO_LOGICO
    (43) CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .
    (48) OTRO_LOGICO -> . SIMBOLO_LOGICO CONDICIONES
    (51) SIMBOLO_LOGICO -> . AND
    (52) SIMBOLO_LOGICO -> . OR

    THEN            reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    NOT             reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    ID              reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    ENTERO          reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    FLOTANTE        reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    CADENASIMPLE    reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    CADENADOBLE     reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    PUNTOCOMA       reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    UNION           reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    INTERSECT       reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    EXCEPT          reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    JOIN            reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    WHERE           reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    INNER           reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    LEFT            reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    RIGHT           reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    FULL            reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    GROUP           reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    LIMIT           reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    OFFSET          reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    PARDER          reduce using rule 43 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    AND             shift and go to state 197
    OR              shift and go to state 198

    SIMBOLO_LOGICO                 shift and go to state 340
    OTRO_LOGICO                    shift and go to state 341

state 268

    (149) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER . PUNTOCOMA
    (150) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER . INHERITS PARIZQ ID PARDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 342
    INHERITS        shift and go to state 343


state 269

    (152) LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .

    CONSTRAINT      reduce using rule 152 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    UNIQUE          reduce using rule 152 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    PRIMARY         reduce using rule 152 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    FOREIGN         reduce using rule 152 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    ID              reduce using rule 152 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    PARDER          reduce using rule 152 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)


state 270

    (154) LISTA2 -> NOMBRE_T TIPO_CAMPO . VALIDACIONES_CREATE_TABLE COMA
    (155) LISTA2 -> NOMBRE_T TIPO_CAMPO . VALIDACIONES_CREATE_TABLE
    (187) VALIDACIONES_CREATE_TABLE -> . LISTA3
    (188) LISTA3 -> . VALIDACION_CAMPO_CREATE
    (189) LISTA3 -> . VALIDACION_CAMPO_CREATE_VACIO
    (190) LISTA3 -> . LISTA3 VALIDACION_CAMPO_CREATE
    (191) VALIDACION_CAMPO_CREATE -> . NOT NULL
    (192) VALIDACION_CAMPO_CREATE -> . PRIMARY KEY
    (193) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENASIMPLE
    (194) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENADOBLE
    (195) VALIDACION_CAMPO_CREATE -> . DEFAULT DECIMAL
    (196) VALIDACION_CAMPO_CREATE -> . DEFAULT ENTERO
    (197) VALIDACION_CAMPO_CREATE -> . DEFAULT ID
    (199) VALIDACION_CAMPO_CREATE -> . NULL
    (200) VALIDACION_CAMPO_CREATE -> . CONSTRAINT ID UNIQUE
    (201) VALIDACION_CAMPO_CREATE -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
    (198) VALIDACION_CAMPO_CREATE_VACIO -> .

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PRIMARY resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for CONSTRAINT resolved as shift
    NOT             shift and go to state 348
    PRIMARY         shift and go to state 350
    DEFAULT         shift and go to state 351
    NULL            shift and go to state 349
    CONSTRAINT      shift and go to state 352
    COMA            reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    UNIQUE          reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    FOREIGN         reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    ID              reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    PARDER          reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .)

  ! NOT             [ reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]
  ! PRIMARY         [ reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]
  ! DEFAULT         [ reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]
  ! NULL            [ reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]
  ! CONSTRAINT      [ reduce using rule 198 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]

    VALIDACIONES_CREATE_TABLE      shift and go to state 344
    LISTA3                         shift and go to state 345
    VALIDACION_CAMPO_CREATE        shift and go to state 346
    VALIDACION_CAMPO_CREATE_VACIO  shift and go to state 347

state 271

    (172) TIPO_CAMPO -> SMALLINT .

    NOT             reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    PRIMARY         reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    DEFAULT         reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    NULL            reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    CONSTRAINT      reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    COMA            reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    UNIQUE          reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    FOREIGN         reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    ID              reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    PARDER          reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)
    PUNTOCOMA       reduce using rule 172 (TIPO_CAMPO -> SMALLINT .)


state 272

    (173) TIPO_CAMPO -> INTEGER .

    NOT             reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    PRIMARY         reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    DEFAULT         reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    NULL            reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    CONSTRAINT      reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    COMA            reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    UNIQUE          reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    FOREIGN         reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    ID              reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    PARDER          reduce using rule 173 (TIPO_CAMPO -> INTEGER .)
    PUNTOCOMA       reduce using rule 173 (TIPO_CAMPO -> INTEGER .)


state 273

    (174) TIPO_CAMPO -> INT .

    NOT             reduce using rule 174 (TIPO_CAMPO -> INT .)
    PRIMARY         reduce using rule 174 (TIPO_CAMPO -> INT .)
    DEFAULT         reduce using rule 174 (TIPO_CAMPO -> INT .)
    NULL            reduce using rule 174 (TIPO_CAMPO -> INT .)
    CONSTRAINT      reduce using rule 174 (TIPO_CAMPO -> INT .)
    COMA            reduce using rule 174 (TIPO_CAMPO -> INT .)
    UNIQUE          reduce using rule 174 (TIPO_CAMPO -> INT .)
    FOREIGN         reduce using rule 174 (TIPO_CAMPO -> INT .)
    ID              reduce using rule 174 (TIPO_CAMPO -> INT .)
    PARDER          reduce using rule 174 (TIPO_CAMPO -> INT .)
    PUNTOCOMA       reduce using rule 174 (TIPO_CAMPO -> INT .)


state 274

    (175) TIPO_CAMPO -> BIGINT .

    NOT             reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    PRIMARY         reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    DEFAULT         reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    NULL            reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    CONSTRAINT      reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    COMA            reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    UNIQUE          reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    FOREIGN         reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    ID              reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    PARDER          reduce using rule 175 (TIPO_CAMPO -> BIGINT .)
    PUNTOCOMA       reduce using rule 175 (TIPO_CAMPO -> BIGINT .)


state 275

    (176) TIPO_CAMPO -> DECIMAL .

    NOT             reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    PRIMARY         reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    DEFAULT         reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    NULL            reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    CONSTRAINT      reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    COMA            reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    UNIQUE          reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    FOREIGN         reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    ID              reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    PARDER          reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)
    PUNTOCOMA       reduce using rule 176 (TIPO_CAMPO -> DECIMAL .)


state 276

    (177) TIPO_CAMPO -> REAL .

    NOT             reduce using rule 177 (TIPO_CAMPO -> REAL .)
    PRIMARY         reduce using rule 177 (TIPO_CAMPO -> REAL .)
    DEFAULT         reduce using rule 177 (TIPO_CAMPO -> REAL .)
    NULL            reduce using rule 177 (TIPO_CAMPO -> REAL .)
    CONSTRAINT      reduce using rule 177 (TIPO_CAMPO -> REAL .)
    COMA            reduce using rule 177 (TIPO_CAMPO -> REAL .)
    UNIQUE          reduce using rule 177 (TIPO_CAMPO -> REAL .)
    FOREIGN         reduce using rule 177 (TIPO_CAMPO -> REAL .)
    ID              reduce using rule 177 (TIPO_CAMPO -> REAL .)
    PARDER          reduce using rule 177 (TIPO_CAMPO -> REAL .)
    PUNTOCOMA       reduce using rule 177 (TIPO_CAMPO -> REAL .)


state 277

    (178) TIPO_CAMPO -> MONEY .

    NOT             reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    PRIMARY         reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    DEFAULT         reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    NULL            reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    CONSTRAINT      reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    COMA            reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    UNIQUE          reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    FOREIGN         reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    ID              reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    PARDER          reduce using rule 178 (TIPO_CAMPO -> MONEY .)
    PUNTOCOMA       reduce using rule 178 (TIPO_CAMPO -> MONEY .)


state 278

    (179) TIPO_CAMPO -> FLOAT .

    NOT             reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    PRIMARY         reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    DEFAULT         reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    NULL            reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    CONSTRAINT      reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    COMA            reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    UNIQUE          reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    FOREIGN         reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    ID              reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    PARDER          reduce using rule 179 (TIPO_CAMPO -> FLOAT .)
    PUNTOCOMA       reduce using rule 179 (TIPO_CAMPO -> FLOAT .)


state 279

    (180) TIPO_CAMPO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 353


state 280

    (181) TIPO_CAMPO -> CHARACTER . VARYING PARIZQ EXPNUMERICA PARDER
    (183) TIPO_CAMPO -> CHARACTER . PARIZQ EXPNUMERICA PARDER

    VARYING         shift and go to state 354
    PARIZQ          shift and go to state 355


state 281

    (182) TIPO_CAMPO -> VARCHAR . PARIZQ EXPNUMERICA PARDER

    PARIZQ          shift and go to state 356


state 282

    (184) TIPO_CAMPO -> CHAR . PARIZQ EXPNUMERICA PARDER

    PARIZQ          shift and go to state 357


state 283

    (185) TIPO_CAMPO -> TEXT .

    NOT             reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    PRIMARY         reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    DEFAULT         reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    NULL            reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    CONSTRAINT      reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    COMA            reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    UNIQUE          reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    FOREIGN         reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    ID              reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    PARDER          reduce using rule 185 (TIPO_CAMPO -> TEXT .)
    PUNTOCOMA       reduce using rule 185 (TIPO_CAMPO -> TEXT .)


state 284

    (186) TIPO_CAMPO -> BOOLEAN .

    NOT             reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    PRIMARY         reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    DEFAULT         reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    NULL            reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    CONSTRAINT      reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    COMA            reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    UNIQUE          reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    FOREIGN         reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    ID              reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    PARDER          reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 186 (TIPO_CAMPO -> BOOLEAN .)


state 285

    (156) LISTA2 -> CONSTRAINT ID . UNIQUE
    (157) LISTA2 -> CONSTRAINT ID . UNIQUE COMA
    (158) LISTA2 -> CONSTRAINT ID . CHECK PARIZQ CONDICIONES PARDER
    (159) LISTA2 -> CONSTRAINT ID . CHECK PARIZQ CONDICIONES PARDER COMA
    (162) LISTA2 -> CONSTRAINT ID . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (163) LISTA2 -> CONSTRAINT ID . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA

    UNIQUE          shift and go to state 358
    CHECK           shift and go to state 359
    PRIMARY         shift and go to state 360


state 286

    (160) LISTA2 -> UNIQUE PARIZQ . LISTA_DE_IDS PARDER COMA
    (161) LISTA2 -> UNIQUE PARIZQ . LISTA_DE_IDS PARDER
    (168) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (169) LISTA_DE_IDS -> . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    ID              shift and go to state 363

    LISTA_DE_IDS                   shift and go to state 361
    LISTA_ID_                      shift and go to state 362

state 287

    (164) LISTA2 -> PRIMARY KEY . PARIZQ LISTA_DE_IDS PARDER COMA
    (166) LISTA2 -> PRIMARY KEY . PARIZQ LISTA_DE_IDS PARDER

    PARIZQ          shift and go to state 364


state 288

    (165) LISTA2 -> FOREIGN KEY . PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (167) LISTA2 -> FOREIGN KEY . PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER

    PARIZQ          shift and go to state 365


state 289

    (238) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE . MODE_DATABASE
    (245) MODE_DATABASE -> . MODE IGUAL ENTERO
    (246) MODE_DATABASE -> .

    MODE            shift and go to state 367
    SELECT          reduce using rule 246 (MODE_DATABASE -> .)
    CREATE          reduce using rule 246 (MODE_DATABASE -> .)
    INSERT          reduce using rule 246 (MODE_DATABASE -> .)
    UPDATE          reduce using rule 246 (MODE_DATABASE -> .)
    DELETE          reduce using rule 246 (MODE_DATABASE -> .)
    DROP            reduce using rule 246 (MODE_DATABASE -> .)
    ALTER           reduce using rule 246 (MODE_DATABASE -> .)
    SHOW            reduce using rule 246 (MODE_DATABASE -> .)
    $end            reduce using rule 246 (MODE_DATABASE -> .)

    MODE_DATABASE                  shift and go to state 366

state 290

    (243) OWNER_DATABASE -> OWNER . IGUAL ID

    IGUAL           shift and go to state 368


state 291

    (241) IF_NOT_EXISTIS -> IF NOT EXISTS .

    ID              reduce using rule 241 (IF_NOT_EXISTIS -> IF NOT EXISTS .)


state 292

    (203) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .

    SELECT          reduce using rule 203 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    CREATE          reduce using rule 203 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    INSERT          reduce using rule 203 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    UPDATE          reduce using rule 203 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    DELETE          reduce using rule 203 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    DROP            reduce using rule 203 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    ALTER           reduce using rule 203 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    SHOW            reduce using rule 203 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    $end            reduce using rule 203 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)


state 293

    (271) EXPNUMERICA -> PARIZQ . EXPNUMERICA PARDER
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 369

state 294

    (205) DATOS -> VALUES PARIZQ VALORES . PARDER
    (210) VALORES -> VALORES . VALOR
    (212) VALOR -> . EXPRESION_GLOBAL COMA
    (213) VALOR -> . EXPRESION_GLOBAL
    (233) EXPRESION_GLOBAL -> . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARDER          shift and go to state 370
    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    VALOR                          shift and go to state 371
    EXPRESION_GLOBAL               shift and go to state 296
    EXPNUMERICA                    shift and go to state 297

state 295

    (211) VALORES -> VALOR .

    PARDER          reduce using rule 211 (VALORES -> VALOR .)
    PARIZQ          reduce using rule 211 (VALORES -> VALOR .)
    ID              reduce using rule 211 (VALORES -> VALOR .)
    ENTERO          reduce using rule 211 (VALORES -> VALOR .)
    FLOTANTE        reduce using rule 211 (VALORES -> VALOR .)


state 296

    (212) VALOR -> EXPRESION_GLOBAL . COMA
    (213) VALOR -> EXPRESION_GLOBAL .

    COMA            shift and go to state 372
    PARDER          reduce using rule 213 (VALOR -> EXPRESION_GLOBAL .)
    PARIZQ          reduce using rule 213 (VALOR -> EXPRESION_GLOBAL .)
    ID              reduce using rule 213 (VALOR -> EXPRESION_GLOBAL .)
    ENTERO          reduce using rule 213 (VALOR -> EXPRESION_GLOBAL .)
    FLOTANTE        reduce using rule 213 (VALOR -> EXPRESION_GLOBAL .)


state 297

    (233) EXPRESION_GLOBAL -> EXPNUMERICA .
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    COMA            reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    PARDER          reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    PARIZQ          reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    ID              reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    ENTERO          reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    FLOTANTE        reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    WHERE           reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    EXISTS          reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    CADENADOBLE     reduce using rule 233 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    MAS             shift and go to state 373
    MENOS           shift and go to state 374
    ASTERISCO       shift and go to state 375
    DIVISION        shift and go to state 376
    PORCENTAJE      shift and go to state 377


state 298

    (272) EXPNUMERICA -> ID .

    MAS             reduce using rule 272 (EXPNUMERICA -> ID .)
    MENOS           reduce using rule 272 (EXPNUMERICA -> ID .)
    ASTERISCO       reduce using rule 272 (EXPNUMERICA -> ID .)
    DIVISION        reduce using rule 272 (EXPNUMERICA -> ID .)
    PORCENTAJE      reduce using rule 272 (EXPNUMERICA -> ID .)
    COMA            reduce using rule 272 (EXPNUMERICA -> ID .)
    PARDER          reduce using rule 272 (EXPNUMERICA -> ID .)
    PARIZQ          reduce using rule 272 (EXPNUMERICA -> ID .)
    ID              reduce using rule 272 (EXPNUMERICA -> ID .)
    ENTERO          reduce using rule 272 (EXPNUMERICA -> ID .)
    FLOTANTE        reduce using rule 272 (EXPNUMERICA -> ID .)
    WHERE           reduce using rule 272 (EXPNUMERICA -> ID .)
    PUNTOCOMA       reduce using rule 272 (EXPNUMERICA -> ID .)
    EXISTS          reduce using rule 272 (EXPNUMERICA -> ID .)
    CADENASIMPLE    reduce using rule 272 (EXPNUMERICA -> ID .)
    CADENADOBLE     reduce using rule 272 (EXPNUMERICA -> ID .)


state 299

    (273) EXPNUMERICA -> ENTERO .

    MAS             reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    MENOS           reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    ASTERISCO       reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    DIVISION        reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    PORCENTAJE      reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    COMA            reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    PARDER          reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    PARIZQ          reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    ID              reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    ENTERO          reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    FLOTANTE        reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    WHERE           reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    PUNTOCOMA       reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    EXISTS          reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    CADENASIMPLE    reduce using rule 273 (EXPNUMERICA -> ENTERO .)
    CADENADOBLE     reduce using rule 273 (EXPNUMERICA -> ENTERO .)


state 300

    (274) EXPNUMERICA -> FLOTANTE .

    MAS             reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    MENOS           reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    ASTERISCO       reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    DIVISION        reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    PORCENTAJE      reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    COMA            reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    PARDER          reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    PARIZQ          reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    ID              reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    ENTERO          reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    FLOTANTE        reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    WHERE           reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    EXISTS          reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    CADENASIMPLE    reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)
    CADENADOBLE     reduce using rule 274 (EXPNUMERICA -> FLOTANTE .)


state 301

    (204) DATOS -> PARIZQ COLUMNAS PARDER . VALUES PARIZQ VALORES PARDER

    VALUES          shift and go to state 378


state 302

    (206) COLUMNAS -> COLUMNAS COLUMNA .

    PARDER          reduce using rule 206 (COLUMNAS -> COLUMNAS COLUMNA .)
    ID              reduce using rule 206 (COLUMNAS -> COLUMNAS COLUMNA .)


state 303

    (208) COLUMNA -> ID COMA .

    PARDER          reduce using rule 208 (COLUMNA -> ID COMA .)
    ID              reduce using rule 208 (COLUMNA -> ID COMA .)


state 304

    (218) CAMPO -> NOMBRES_TABLAS PUNTO ID . IGUAL EXPRESION_GLOBAL
    (219) CAMPO -> NOMBRES_TABLAS PUNTO ID . IGUAL EXPRESION_GLOBAL C

    IGUAL           shift and go to state 379


state 305

    (214) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES . PUNTOCOMA
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    PUNTOCOMA       shift and go to state 380
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 306

    (220) CAMPO -> ID IGUAL EXPRESION_GLOBAL .
    (221) CAMPO -> ID IGUAL EXPRESION_GLOBAL . C
    (222) C -> . COMA CAMPO

    WHERE           reduce using rule 220 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    PUNTOCOMA       reduce using rule 220 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    ID              reduce using rule 220 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    PARIZQ          reduce using rule 220 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    EXISTS          reduce using rule 220 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    ENTERO          reduce using rule 220 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    FLOTANTE        reduce using rule 220 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    CADENASIMPLE    reduce using rule 220 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    CADENADOBLE     reduce using rule 220 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    COMA            shift and go to state 382

    C                              shift and go to state 381

state 307

    (118) QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .

    PARIZQ          reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    EXISTS          reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    ID              reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    ENTERO          reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    FLOTANTE        reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    CADENASIMPLE    reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    CADENADOBLE     reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    SET             reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    DEFAULT         reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    VALUES          reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    WHERE           reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    PUNTOCOMA       reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    UNION           reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    INTERSECT       reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    EXCEPT          reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    JOIN            reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    GROUP           reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    LIMIT           reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    OFFSET          reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    INNER           reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    LEFT            reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    RIGHT           reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    FULL            reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    PUNTO           reduce using rule 118 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)


state 308

    (121) AS_NO -> COMA QUERY .

    PARIZQ          reduce using rule 121 (AS_NO -> COMA QUERY .)
    EXISTS          reduce using rule 121 (AS_NO -> COMA QUERY .)
    ID              reduce using rule 121 (AS_NO -> COMA QUERY .)
    ENTERO          reduce using rule 121 (AS_NO -> COMA QUERY .)
    FLOTANTE        reduce using rule 121 (AS_NO -> COMA QUERY .)
    CADENASIMPLE    reduce using rule 121 (AS_NO -> COMA QUERY .)
    CADENADOBLE     reduce using rule 121 (AS_NO -> COMA QUERY .)
    SET             reduce using rule 121 (AS_NO -> COMA QUERY .)
    DEFAULT         reduce using rule 121 (AS_NO -> COMA QUERY .)
    VALUES          reduce using rule 121 (AS_NO -> COMA QUERY .)
    WHERE           reduce using rule 121 (AS_NO -> COMA QUERY .)
    PUNTOCOMA       reduce using rule 121 (AS_NO -> COMA QUERY .)
    UNION           reduce using rule 121 (AS_NO -> COMA QUERY .)
    INTERSECT       reduce using rule 121 (AS_NO -> COMA QUERY .)
    EXCEPT          reduce using rule 121 (AS_NO -> COMA QUERY .)
    JOIN            reduce using rule 121 (AS_NO -> COMA QUERY .)
    GROUP           reduce using rule 121 (AS_NO -> COMA QUERY .)
    LIMIT           reduce using rule 121 (AS_NO -> COMA QUERY .)
    OFFSET          reduce using rule 121 (AS_NO -> COMA QUERY .)
    INNER           reduce using rule 121 (AS_NO -> COMA QUERY .)
    LEFT            reduce using rule 121 (AS_NO -> COMA QUERY .)
    RIGHT           reduce using rule 121 (AS_NO -> COMA QUERY .)
    FULL            reduce using rule 121 (AS_NO -> COMA QUERY .)
    PUNTO           reduce using rule 121 (AS_NO -> COMA QUERY .)


state 309

    (122) AS_NO -> AS NO_N .
    (123) AS_NO -> AS NO_N . COMA QUERY

    PARIZQ          reduce using rule 122 (AS_NO -> AS NO_N .)
    EXISTS          reduce using rule 122 (AS_NO -> AS NO_N .)
    ID              reduce using rule 122 (AS_NO -> AS NO_N .)
    ENTERO          reduce using rule 122 (AS_NO -> AS NO_N .)
    FLOTANTE        reduce using rule 122 (AS_NO -> AS NO_N .)
    CADENASIMPLE    reduce using rule 122 (AS_NO -> AS NO_N .)
    CADENADOBLE     reduce using rule 122 (AS_NO -> AS NO_N .)
    SET             reduce using rule 122 (AS_NO -> AS NO_N .)
    DEFAULT         reduce using rule 122 (AS_NO -> AS NO_N .)
    VALUES          reduce using rule 122 (AS_NO -> AS NO_N .)
    WHERE           reduce using rule 122 (AS_NO -> AS NO_N .)
    PUNTOCOMA       reduce using rule 122 (AS_NO -> AS NO_N .)
    UNION           reduce using rule 122 (AS_NO -> AS NO_N .)
    INTERSECT       reduce using rule 122 (AS_NO -> AS NO_N .)
    EXCEPT          reduce using rule 122 (AS_NO -> AS NO_N .)
    JOIN            reduce using rule 122 (AS_NO -> AS NO_N .)
    GROUP           reduce using rule 122 (AS_NO -> AS NO_N .)
    LIMIT           reduce using rule 122 (AS_NO -> AS NO_N .)
    OFFSET          reduce using rule 122 (AS_NO -> AS NO_N .)
    INNER           reduce using rule 122 (AS_NO -> AS NO_N .)
    LEFT            reduce using rule 122 (AS_NO -> AS NO_N .)
    RIGHT           reduce using rule 122 (AS_NO -> AS NO_N .)
    FULL            reduce using rule 122 (AS_NO -> AS NO_N .)
    PUNTO           reduce using rule 122 (AS_NO -> AS NO_N .)
    COMA            shift and go to state 383


state 310

    (124) NO_N -> ID .

    COMA            reduce using rule 124 (NO_N -> ID .)
    PARIZQ          reduce using rule 124 (NO_N -> ID .)
    EXISTS          reduce using rule 124 (NO_N -> ID .)
    ID              reduce using rule 124 (NO_N -> ID .)
    ENTERO          reduce using rule 124 (NO_N -> ID .)
    FLOTANTE        reduce using rule 124 (NO_N -> ID .)
    CADENASIMPLE    reduce using rule 124 (NO_N -> ID .)
    CADENADOBLE     reduce using rule 124 (NO_N -> ID .)
    SET             reduce using rule 124 (NO_N -> ID .)
    DEFAULT         reduce using rule 124 (NO_N -> ID .)
    VALUES          reduce using rule 124 (NO_N -> ID .)
    WHERE           reduce using rule 124 (NO_N -> ID .)
    PUNTOCOMA       reduce using rule 124 (NO_N -> ID .)
    UNION           reduce using rule 124 (NO_N -> ID .)
    INTERSECT       reduce using rule 124 (NO_N -> ID .)
    EXCEPT          reduce using rule 124 (NO_N -> ID .)
    JOIN            reduce using rule 124 (NO_N -> ID .)
    GROUP           reduce using rule 124 (NO_N -> ID .)
    LIMIT           reduce using rule 124 (NO_N -> ID .)
    OFFSET          reduce using rule 124 (NO_N -> ID .)
    INNER           reduce using rule 124 (NO_N -> ID .)
    LEFT            reduce using rule 124 (NO_N -> ID .)
    RIGHT           reduce using rule 124 (NO_N -> ID .)
    FULL            reduce using rule 124 (NO_N -> ID .)
    PUNTO           reduce using rule 124 (NO_N -> ID .)


state 311

    (223) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .

    SELECT          reduce using rule 223 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    CREATE          reduce using rule 223 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    INSERT          reduce using rule 223 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    UPDATE          reduce using rule 223 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    DELETE          reduce using rule 223 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    DROP            reduce using rule 223 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    ALTER           reduce using rule 223 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    SHOW            reduce using rule 223 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    $end            reduce using rule 223 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)


state 312

    (230) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID . SET NOT NULL PUNTOCOMA

    SET             shift and go to state 384


state 313

    (226) DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID . TIPO_CAMPO PUNTOCOMA
    (172) TIPO_CAMPO -> . SMALLINT
    (173) TIPO_CAMPO -> . INTEGER
    (174) TIPO_CAMPO -> . INT
    (175) TIPO_CAMPO -> . BIGINT
    (176) TIPO_CAMPO -> . DECIMAL
    (177) TIPO_CAMPO -> . REAL
    (178) TIPO_CAMPO -> . MONEY
    (179) TIPO_CAMPO -> . FLOAT
    (180) TIPO_CAMPO -> . DOUBLE PRECISION
    (181) TIPO_CAMPO -> . CHARACTER VARYING PARIZQ EXPNUMERICA PARDER
    (182) TIPO_CAMPO -> . VARCHAR PARIZQ EXPNUMERICA PARDER
    (183) TIPO_CAMPO -> . CHARACTER PARIZQ EXPNUMERICA PARDER
    (184) TIPO_CAMPO -> . CHAR PARIZQ EXPNUMERICA PARDER
    (185) TIPO_CAMPO -> . TEXT
    (186) TIPO_CAMPO -> . BOOLEAN

    SMALLINT        shift and go to state 271
    INTEGER         shift and go to state 272
    INT             shift and go to state 273
    BIGINT          shift and go to state 274
    DECIMAL         shift and go to state 275
    REAL            shift and go to state 276
    MONEY           shift and go to state 277
    FLOAT           shift and go to state 278
    DOUBLE          shift and go to state 279
    CHARACTER       shift and go to state 280
    VARCHAR         shift and go to state 281
    CHAR            shift and go to state 282
    TEXT            shift and go to state 283
    BOOLEAN         shift and go to state 284

    TIPO_CAMPO                     shift and go to state 385

state 314

    (231) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY . PARIZQ ID PARDER REFERENCES ID PUNTOCOMA

    PARIZQ          shift and go to state 386


state 315

    (232) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID . UNIQUE PARIZQ ID PARDER PUNTOCOMA

    UNIQUE          shift and go to state 387


state 316

    (227) DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC . PUNTOCOMA

    PUNTOCOMA       shift and go to state 388


state 317

    (229) DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 389


state 318

    (228) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID . TO ID PUNTOCOMA

    TO              shift and go to state 390


state 319

    (251) ALTER_DATABASE_OP -> RENAME TO ID .

    SELECT          reduce using rule 251 (ALTER_DATABASE_OP -> RENAME TO ID .)
    CREATE          reduce using rule 251 (ALTER_DATABASE_OP -> RENAME TO ID .)
    INSERT          reduce using rule 251 (ALTER_DATABASE_OP -> RENAME TO ID .)
    UPDATE          reduce using rule 251 (ALTER_DATABASE_OP -> RENAME TO ID .)
    DELETE          reduce using rule 251 (ALTER_DATABASE_OP -> RENAME TO ID .)
    DROP            reduce using rule 251 (ALTER_DATABASE_OP -> RENAME TO ID .)
    ALTER           reduce using rule 251 (ALTER_DATABASE_OP -> RENAME TO ID .)
    SHOW            reduce using rule 251 (ALTER_DATABASE_OP -> RENAME TO ID .)
    $end            reduce using rule 251 (ALTER_DATABASE_OP -> RENAME TO ID .)


state 320

    (252) ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .

    SELECT          reduce using rule 252 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    CREATE          reduce using rule 252 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    INSERT          reduce using rule 252 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    UPDATE          reduce using rule 252 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    DELETE          reduce using rule 252 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    DROP            reduce using rule 252 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    ALTER           reduce using rule 252 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    SHOW            reduce using rule 252 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    $end            reduce using rule 252 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)


state 321

    (253) ALTER_TABLE_OP_OW -> ID .

    SELECT          reduce using rule 253 (ALTER_TABLE_OP_OW -> ID .)
    CREATE          reduce using rule 253 (ALTER_TABLE_OP_OW -> ID .)
    INSERT          reduce using rule 253 (ALTER_TABLE_OP_OW -> ID .)
    UPDATE          reduce using rule 253 (ALTER_TABLE_OP_OW -> ID .)
    DELETE          reduce using rule 253 (ALTER_TABLE_OP_OW -> ID .)
    DROP            reduce using rule 253 (ALTER_TABLE_OP_OW -> ID .)
    ALTER           reduce using rule 253 (ALTER_TABLE_OP_OW -> ID .)
    SHOW            reduce using rule 253 (ALTER_TABLE_OP_OW -> ID .)
    $end            reduce using rule 253 (ALTER_TABLE_OP_OW -> ID .)


state 322

    (254) ALTER_TABLE_OP_OW -> CURRENT_USER .

    SELECT          reduce using rule 254 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    CREATE          reduce using rule 254 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    INSERT          reduce using rule 254 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    UPDATE          reduce using rule 254 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    DELETE          reduce using rule 254 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    DROP            reduce using rule 254 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    ALTER           reduce using rule 254 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    SHOW            reduce using rule 254 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    $end            reduce using rule 254 (ALTER_TABLE_OP_OW -> CURRENT_USER .)


state 323

    (255) ALTER_TABLE_OP_OW -> SESSION_USER .

    SELECT          reduce using rule 255 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    CREATE          reduce using rule 255 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    INSERT          reduce using rule 255 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    UPDATE          reduce using rule 255 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    DELETE          reduce using rule 255 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    DROP            reduce using rule 255 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    ALTER           reduce using rule 255 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    SHOW            reduce using rule 255 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    $end            reduce using rule 255 (ALTER_TABLE_OP_OW -> SESSION_USER .)


state 324

    (72) INNERR -> WHERE CONDICIONES .
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    JOIN            reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    WHERE           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    INNER           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    LEFT            reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    RIGHT           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    FULL            reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    GROUP           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    LIMIT           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    OFFSET          reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    PUNTOCOMA       reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    UNION           reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    INTERSECT       reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    EXCEPT          reduce using rule 72 (INNERR -> WHERE CONDICIONES .)
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 325

    (137) UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .

    PUNTOCOMA       reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    UNION           reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    INTERSECT       reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    EXCEPT          reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    SELECT          reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    CREATE          reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    INSERT          reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    UPDATE          reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    DELETE          reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    DROP            reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    ALTER           reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    SHOW            reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    $end            reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    PARDER          reduce using rule 137 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)


state 326

    (68) INNERR -> TIPOS_INNER JOIN TABLA_REF . ON CONDICIONES
    (70) INNERR -> TIPOS_INNER JOIN TABLA_REF . USING PARIZQ SUB_COLUMN PARDER

    ON              shift and go to state 391
    USING           shift and go to state 392


state 327

    (69) INNERR -> JOIN TABLA_REF ON . CONDICIONES
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 393
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 328

    (71) INNERR -> JOIN TABLA_REF USING . PARIZQ SUB_COLUMN PARDER

    PARIZQ          shift and go to state 394


state 329

    (84) TABLA_REF -> ID AS . ID

    ID              shift and go to state 395


state 330

    (87) GROUPP -> GROUP BY EXPRE_LIST . MORE_ORDER
    (88) GROUPP -> GROUP BY EXPRE_LIST .
    (89) EXPRE_LIST -> EXPRE_LIST . EXPRES
    (102) MORE_ORDER -> . HAVING CONDICIONES
    (91) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (92) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (93) EXPRES -> . CAMPOS S2
    (94) EXPRES -> . CAMPOS
    (95) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (96) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (97) EXPRES -> . CAMPOS S2 STATE
    (98) EXPRES -> . CAMPOS STATE
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO

    GROUP           reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    JOIN            reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    WHERE           reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    LIMIT           reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    OFFSET          reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    INNER           reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    LEFT            reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    RIGHT           reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    FULL            reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    PUNTOCOMA       reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    UNION           reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    INTERSECT       reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    EXCEPT          reduce using rule 88 (GROUPP -> GROUP BY EXPRE_LIST .)
    HAVING          shift and go to state 398
    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30

    MORE_ORDER                     shift and go to state 396
    EXPRES                         shift and go to state 397
    NOMBRE_T                       shift and go to state 332
    CAMPOS                         shift and go to state 333

state 331

    (90) EXPRE_LIST -> EXPRES .

    HAVING          reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    ID              reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    ASTERISCO       reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    GROUP           reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    JOIN            reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    WHERE           reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    LIMIT           reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    OFFSET          reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    INNER           reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    LEFT            reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    RIGHT           reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    FULL            reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    PUNTOCOMA       reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    UNION           reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    INTERSECT       reduce using rule 90 (EXPRE_LIST -> EXPRES .)
    EXCEPT          reduce using rule 90 (EXPRE_LIST -> EXPRES .)


state 332

    (91) EXPRES -> NOMBRE_T . PUNTO CAMPOS S2
    (92) EXPRES -> NOMBRE_T . PUNTO CAMPOS
    (95) EXPRES -> NOMBRE_T . PUNTO CAMPOS S2 STATE
    (96) EXPRES -> NOMBRE_T . PUNTO CAMPOS STATE

    PUNTO           shift and go to state 399


state 333

    (93) EXPRES -> CAMPOS . S2
    (94) EXPRES -> CAMPOS .
    (97) EXPRES -> CAMPOS . S2 STATE
    (98) EXPRES -> CAMPOS . STATE
    (99) S2 -> . COMA EXPRES
    (100) S2 -> . AS ALIAS
    (101) S2 -> . AS ALIAS COMA EXPRES
    (103) STATE -> . ASC
    (104) STATE -> . ASC NULLS FIRST
    (105) STATE -> . ASC NULLS LAST
    (106) STATE -> . DESC
    (107) STATE -> . DESC NULLS FIRST
    (108) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 94 (EXPRES -> CAMPOS .)
    ID              reduce using rule 94 (EXPRES -> CAMPOS .)
    ASTERISCO       reduce using rule 94 (EXPRES -> CAMPOS .)
    GROUP           reduce using rule 94 (EXPRES -> CAMPOS .)
    JOIN            reduce using rule 94 (EXPRES -> CAMPOS .)
    WHERE           reduce using rule 94 (EXPRES -> CAMPOS .)
    LIMIT           reduce using rule 94 (EXPRES -> CAMPOS .)
    OFFSET          reduce using rule 94 (EXPRES -> CAMPOS .)
    INNER           reduce using rule 94 (EXPRES -> CAMPOS .)
    LEFT            reduce using rule 94 (EXPRES -> CAMPOS .)
    RIGHT           reduce using rule 94 (EXPRES -> CAMPOS .)
    FULL            reduce using rule 94 (EXPRES -> CAMPOS .)
    PUNTOCOMA       reduce using rule 94 (EXPRES -> CAMPOS .)
    UNION           reduce using rule 94 (EXPRES -> CAMPOS .)
    INTERSECT       reduce using rule 94 (EXPRES -> CAMPOS .)
    EXCEPT          reduce using rule 94 (EXPRES -> CAMPOS .)
    COMA            shift and go to state 402
    AS              shift and go to state 403
    ASC             shift and go to state 404
    DESC            shift and go to state 405

  ! ASC             [ reduce using rule 94 (EXPRES -> CAMPOS .) ]
  ! DESC            [ reduce using rule 94 (EXPRES -> CAMPOS .) ]

    S2                             shift and go to state 400
    STATE                          shift and go to state 401

state 334

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .
    (135) UNIONS -> UNIONS . UNIONN
    (137) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (138) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (139) UNIONN -> . PUNTOCOMA
    (140) COMPORTAMIENTO -> . UNION
    (141) COMPORTAMIENTO -> . INTERSECT
    (142) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    CREATE          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    INSERT          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    UPDATE          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DELETE          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DROP            reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    ALTER           reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    SHOW            reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    $end            reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PARDER          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PUNTOCOMA       shift and go to state 169
    UNION           shift and go to state 173
    INTERSECT       shift and go to state 174
    EXCEPT          shift and go to state 175

  ! PUNTOCOMA       [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! UNION           [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! INTERSECT       [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! EXCEPT          [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]

    UNIONN                         shift and go to state 239
    COMPORTAMIENTO                 shift and go to state 168

state 335

    (260) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE . PARDER PUNTOCOMA

    PARDER          shift and go to state 406


state 336

    (265) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE . PARDER PUNTOCOMA

    PARDER          shift and go to state 407


state 337

    (146) CUERPOO -> WHEN . CONDICIONES EXPRESIONNE END
    (147) CUERPOO -> WHEN . CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 408
    EXPRESIONNE                    shift and go to state 119
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 338

    (143) EXPRESIONES_C -> CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO .

    FROM            reduce using rule 143 (EXPRESIONES_C -> CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO .)
    ID              reduce using rule 143 (EXPRESIONES_C -> CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO .)
    ASTERISCO       reduce using rule 143 (EXPRESIONES_C -> CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO .)
    CASE            reduce using rule 143 (EXPRESIONES_C -> CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO .)
    GREATEST        reduce using rule 143 (EXPRESIONES_C -> CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO .)
    LEAST           reduce using rule 143 (EXPRESIONES_C -> CASE WHEN CONDICIONES THEN EXPRESIONNE CUERPOO .)


state 339

    (148) CUERPOO -> END .

    FROM            reduce using rule 148 (CUERPOO -> END .)
    ID              reduce using rule 148 (CUERPOO -> END .)
    ASTERISCO       reduce using rule 148 (CUERPOO -> END .)
    CASE            reduce using rule 148 (CUERPOO -> END .)
    GREATEST        reduce using rule 148 (CUERPOO -> END .)
    LEAST           reduce using rule 148 (CUERPOO -> END .)


state 340

    (48) OTRO_LOGICO -> SIMBOLO_LOGICO . CONDICIONES
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 409
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 341

    (42) CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .

    THEN            reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    NOT             reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    ID              reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    ENTERO          reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    FLOTANTE        reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    CADENASIMPLE    reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    CADENADOBLE     reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    PUNTOCOMA       reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    UNION           reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    INTERSECT       reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    EXCEPT          reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    JOIN            reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    WHERE           reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    INNER           reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    LEFT            reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    RIGHT           reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    FULL            reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    GROUP           reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    LIMIT           reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    OFFSET          reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    PARDER          reduce using rule 42 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)


state 342

    (149) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .

    SELECT          reduce using rule 149 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    CREATE          reduce using rule 149 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    INSERT          reduce using rule 149 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 149 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    DELETE          reduce using rule 149 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    DROP            reduce using rule 149 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    ALTER           reduce using rule 149 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    SHOW            reduce using rule 149 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    $end            reduce using rule 149 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)


state 343

    (150) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS . PARIZQ ID PARDER PUNTOCOMA

    PARIZQ          shift and go to state 410


state 344

    (154) LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE . COMA
    (155) LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .

    COMA            shift and go to state 411
    CONSTRAINT      reduce using rule 155 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    UNIQUE          reduce using rule 155 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    PRIMARY         reduce using rule 155 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    FOREIGN         reduce using rule 155 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    ID              reduce using rule 155 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    PARDER          reduce using rule 155 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)


state 345

    (187) VALIDACIONES_CREATE_TABLE -> LISTA3 .
    (190) LISTA3 -> LISTA3 . VALIDACION_CAMPO_CREATE
    (191) VALIDACION_CAMPO_CREATE -> . NOT NULL
    (192) VALIDACION_CAMPO_CREATE -> . PRIMARY KEY
    (193) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENASIMPLE
    (194) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENADOBLE
    (195) VALIDACION_CAMPO_CREATE -> . DEFAULT DECIMAL
    (196) VALIDACION_CAMPO_CREATE -> . DEFAULT ENTERO
    (197) VALIDACION_CAMPO_CREATE -> . DEFAULT ID
    (199) VALIDACION_CAMPO_CREATE -> . NULL
    (200) VALIDACION_CAMPO_CREATE -> . CONSTRAINT ID UNIQUE
    (201) VALIDACION_CAMPO_CREATE -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER

  ! shift/reduce conflict for PRIMARY resolved as shift
  ! shift/reduce conflict for CONSTRAINT resolved as shift
    COMA            reduce using rule 187 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    UNIQUE          reduce using rule 187 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    FOREIGN         reduce using rule 187 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    ID              reduce using rule 187 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    PARDER          reduce using rule 187 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    NOT             shift and go to state 348
    PRIMARY         shift and go to state 350
    DEFAULT         shift and go to state 351
    NULL            shift and go to state 349
    CONSTRAINT      shift and go to state 352

  ! CONSTRAINT      [ reduce using rule 187 (VALIDACIONES_CREATE_TABLE -> LISTA3 .) ]
  ! PRIMARY         [ reduce using rule 187 (VALIDACIONES_CREATE_TABLE -> LISTA3 .) ]

    VALIDACION_CAMPO_CREATE        shift and go to state 412

state 346

    (188) LISTA3 -> VALIDACION_CAMPO_CREATE .

    NOT             reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    PRIMARY         reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    DEFAULT         reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    NULL            reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    CONSTRAINT      reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    COMA            reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    UNIQUE          reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    FOREIGN         reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    ID              reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    PARDER          reduce using rule 188 (LISTA3 -> VALIDACION_CAMPO_CREATE .)


state 347

    (189) LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .

    NOT             reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    PRIMARY         reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    DEFAULT         reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    NULL            reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    CONSTRAINT      reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    COMA            reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    UNIQUE          reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    FOREIGN         reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    ID              reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    PARDER          reduce using rule 189 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)


state 348

    (191) VALIDACION_CAMPO_CREATE -> NOT . NULL

    NULL            shift and go to state 413


state 349

    (199) VALIDACION_CAMPO_CREATE -> NULL .

    NOT             reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)
    PRIMARY         reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)
    DEFAULT         reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)
    NULL            reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)
    CONSTRAINT      reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)
    COMA            reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)
    UNIQUE          reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)
    FOREIGN         reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)
    ID              reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)
    PARDER          reduce using rule 199 (VALIDACION_CAMPO_CREATE -> NULL .)


state 350

    (192) VALIDACION_CAMPO_CREATE -> PRIMARY . KEY

    KEY             shift and go to state 414


state 351

    (193) VALIDACION_CAMPO_CREATE -> DEFAULT . CADENASIMPLE
    (194) VALIDACION_CAMPO_CREATE -> DEFAULT . CADENADOBLE
    (195) VALIDACION_CAMPO_CREATE -> DEFAULT . DECIMAL
    (196) VALIDACION_CAMPO_CREATE -> DEFAULT . ENTERO
    (197) VALIDACION_CAMPO_CREATE -> DEFAULT . ID

    CADENASIMPLE    shift and go to state 415
    CADENADOBLE     shift and go to state 416
    DECIMAL         shift and go to state 417
    ENTERO          shift and go to state 418
    ID              shift and go to state 419


state 352

    (200) VALIDACION_CAMPO_CREATE -> CONSTRAINT . ID UNIQUE
    (201) VALIDACION_CAMPO_CREATE -> CONSTRAINT . ID CHECK PARIZQ CONDICIONES PARDER

    ID              shift and go to state 420


state 353

    (180) TIPO_CAMPO -> DOUBLE PRECISION .

    NOT             reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    PRIMARY         reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    DEFAULT         reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    NULL            reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    CONSTRAINT      reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    COMA            reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    UNIQUE          reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    FOREIGN         reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    ID              reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    PARDER          reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)
    PUNTOCOMA       reduce using rule 180 (TIPO_CAMPO -> DOUBLE PRECISION .)


state 354

    (181) TIPO_CAMPO -> CHARACTER VARYING . PARIZQ EXPNUMERICA PARDER

    PARIZQ          shift and go to state 421


state 355

    (183) TIPO_CAMPO -> CHARACTER PARIZQ . EXPNUMERICA PARDER
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 422

state 356

    (182) TIPO_CAMPO -> VARCHAR PARIZQ . EXPNUMERICA PARDER
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 423

state 357

    (184) TIPO_CAMPO -> CHAR PARIZQ . EXPNUMERICA PARDER
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 424

state 358

    (156) LISTA2 -> CONSTRAINT ID UNIQUE .
    (157) LISTA2 -> CONSTRAINT ID UNIQUE . COMA

    CONSTRAINT      reduce using rule 156 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 156 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 156 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    FOREIGN         reduce using rule 156 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    ID              reduce using rule 156 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    PARDER          reduce using rule 156 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    COMA            shift and go to state 425


state 359

    (158) LISTA2 -> CONSTRAINT ID CHECK . PARIZQ CONDICIONES PARDER
    (159) LISTA2 -> CONSTRAINT ID CHECK . PARIZQ CONDICIONES PARDER COMA

    PARIZQ          shift and go to state 426


state 360

    (162) LISTA2 -> CONSTRAINT ID PRIMARY . KEY PARIZQ LISTA_DE_IDS PARDER
    (163) LISTA2 -> CONSTRAINT ID PRIMARY . KEY PARIZQ LISTA_DE_IDS PARDER COMA

    KEY             shift and go to state 427


state 361

    (160) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS . PARDER COMA
    (161) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS . PARDER
    (168) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    PARDER          shift and go to state 428
    ID              shift and go to state 363

    LISTA_ID_                      shift and go to state 429

state 362

    (169) LISTA_DE_IDS -> LISTA_ID_ .

    PARDER          reduce using rule 169 (LISTA_DE_IDS -> LISTA_ID_ .)
    ID              reduce using rule 169 (LISTA_DE_IDS -> LISTA_ID_ .)


state 363

    (170) LISTA_ID_ -> ID . COMA
    (171) LISTA_ID_ -> ID .

    COMA            shift and go to state 430
    PARDER          reduce using rule 171 (LISTA_ID_ -> ID .)
    ID              reduce using rule 171 (LISTA_ID_ -> ID .)


state 364

    (164) LISTA2 -> PRIMARY KEY PARIZQ . LISTA_DE_IDS PARDER COMA
    (166) LISTA2 -> PRIMARY KEY PARIZQ . LISTA_DE_IDS PARDER
    (168) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (169) LISTA_DE_IDS -> . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    ID              shift and go to state 363

    LISTA_DE_IDS                   shift and go to state 431
    LISTA_ID_                      shift and go to state 362

state 365

    (165) LISTA2 -> FOREIGN KEY PARIZQ . LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (167) LISTA2 -> FOREIGN KEY PARIZQ . LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
    (168) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (169) LISTA_DE_IDS -> . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    ID              shift and go to state 363

    LISTA_DE_IDS                   shift and go to state 432
    LISTA_ID_                      shift and go to state 362

state 366

    (238) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .

    SELECT          reduce using rule 238 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    CREATE          reduce using rule 238 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    INSERT          reduce using rule 238 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    UPDATE          reduce using rule 238 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    DELETE          reduce using rule 238 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    DROP            reduce using rule 238 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    ALTER           reduce using rule 238 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    SHOW            reduce using rule 238 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    $end            reduce using rule 238 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)


state 367

    (245) MODE_DATABASE -> MODE . IGUAL ENTERO

    IGUAL           shift and go to state 433


state 368

    (243) OWNER_DATABASE -> OWNER IGUAL . ID

    ID              shift and go to state 434


state 369

    (271) EXPNUMERICA -> PARIZQ EXPNUMERICA . PARDER
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 435
    MAS             shift and go to state 373
    MENOS           shift and go to state 374
    ASTERISCO       shift and go to state 375
    DIVISION        shift and go to state 376
    PORCENTAJE      shift and go to state 377


state 370

    (205) DATOS -> VALUES PARIZQ VALORES PARDER .

    PUNTOCOMA       reduce using rule 205 (DATOS -> VALUES PARIZQ VALORES PARDER .)


state 371

    (210) VALORES -> VALORES VALOR .

    PARDER          reduce using rule 210 (VALORES -> VALORES VALOR .)
    PARIZQ          reduce using rule 210 (VALORES -> VALORES VALOR .)
    ID              reduce using rule 210 (VALORES -> VALORES VALOR .)
    ENTERO          reduce using rule 210 (VALORES -> VALORES VALOR .)
    FLOTANTE        reduce using rule 210 (VALORES -> VALORES VALOR .)


state 372

    (212) VALOR -> EXPRESION_GLOBAL COMA .

    PARDER          reduce using rule 212 (VALOR -> EXPRESION_GLOBAL COMA .)
    PARIZQ          reduce using rule 212 (VALOR -> EXPRESION_GLOBAL COMA .)
    ID              reduce using rule 212 (VALOR -> EXPRESION_GLOBAL COMA .)
    ENTERO          reduce using rule 212 (VALOR -> EXPRESION_GLOBAL COMA .)
    FLOTANTE        reduce using rule 212 (VALOR -> EXPRESION_GLOBAL COMA .)


state 373

    (266) EXPNUMERICA -> EXPNUMERICA MAS . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 436

state 374

    (267) EXPNUMERICA -> EXPNUMERICA MENOS . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 437

state 375

    (268) EXPNUMERICA -> EXPNUMERICA ASTERISCO . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 438

state 376

    (269) EXPNUMERICA -> EXPNUMERICA DIVISION . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 439

state 377

    (270) EXPNUMERICA -> EXPNUMERICA PORCENTAJE . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 440

state 378

    (204) DATOS -> PARIZQ COLUMNAS PARDER VALUES . PARIZQ VALORES PARDER

    PARIZQ          shift and go to state 441


state 379

    (218) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL . EXPRESION_GLOBAL
    (219) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL . EXPRESION_GLOBAL C
    (233) EXPRESION_GLOBAL -> . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPRESION_GLOBAL               shift and go to state 442
    EXPNUMERICA                    shift and go to state 297

state 380

    (214) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .

    SELECT          reduce using rule 214 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    CREATE          reduce using rule 214 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    INSERT          reduce using rule 214 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    UPDATE          reduce using rule 214 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    DELETE          reduce using rule 214 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    DROP            reduce using rule 214 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    ALTER           reduce using rule 214 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    SHOW            reduce using rule 214 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    $end            reduce using rule 214 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)


state 381

    (221) CAMPO -> ID IGUAL EXPRESION_GLOBAL C .

    WHERE           reduce using rule 221 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    PUNTOCOMA       reduce using rule 221 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    ID              reduce using rule 221 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    PARIZQ          reduce using rule 221 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    EXISTS          reduce using rule 221 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    ENTERO          reduce using rule 221 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    FLOTANTE        reduce using rule 221 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    CADENASIMPLE    reduce using rule 221 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    CADENADOBLE     reduce using rule 221 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)


state 382

    (222) C -> COMA . CAMPO
    (218) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL
    (219) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C
    (220) CAMPO -> . ID IGUAL EXPRESION_GLOBAL
    (221) CAMPO -> . ID IGUAL EXPRESION_GLOBAL C
    (26) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (27) NOMBRES_TABLAS -> . TABLA
    (28) TABLA -> . NOMBRE_T
    (29) TABLA -> . NOMBRE_T S1
    (30) TABLA -> . SUBQUERYS
    (20) NOMBRE_T -> . ID
    (115) SUBQUERYS -> . SUBQUERYS QUERY
    (116) SUBQUERYS -> . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 137
    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CAMPO                          shift and go to state 443
    NOMBRES_TABLAS                 shift and go to state 134
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 383

    (123) AS_NO -> AS NO_N COMA . QUERY
    (117) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (118) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (119) QUERY -> . PARIZQ QUE PARDER
    (120) QUERY -> . PARIZQ QUE PARDER AS_NO
    (125) ATE_QUE -> . EXISTS
    (126) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (127) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (128) ATE_QUE -> . ID
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    PARIZQ          shift and go to state 45
    EXISTS          shift and go to state 46
    ID              shift and go to state 82
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    QUERY                          shift and go to state 444
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 47
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 384

    (230) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET . NOT NULL PUNTOCOMA

    NOT             shift and go to state 445


state 385

    (226) DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 446


state 386

    (231) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ . ID PARDER REFERENCES ID PUNTOCOMA

    ID              shift and go to state 447


state 387

    (232) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE . PARIZQ ID PARDER PUNTOCOMA

    PARIZQ          shift and go to state 448


state 388

    (227) DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .

    SELECT          reduce using rule 227 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    CREATE          reduce using rule 227 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    INSERT          reduce using rule 227 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    UPDATE          reduce using rule 227 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    DELETE          reduce using rule 227 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    DROP            reduce using rule 227 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    ALTER           reduce using rule 227 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    SHOW            reduce using rule 227 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    $end            reduce using rule 227 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)


state 389

    (229) DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .

    SELECT          reduce using rule 229 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    CREATE          reduce using rule 229 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    INSERT          reduce using rule 229 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    UPDATE          reduce using rule 229 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    DELETE          reduce using rule 229 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    DROP            reduce using rule 229 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    ALTER           reduce using rule 229 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    SHOW            reduce using rule 229 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    $end            reduce using rule 229 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)


state 390

    (228) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO . ID PUNTOCOMA

    ID              shift and go to state 449


state 391

    (68) INNERR -> TIPOS_INNER JOIN TABLA_REF ON . CONDICIONES
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 450
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 392

    (70) INNERR -> TIPOS_INNER JOIN TABLA_REF USING . PARIZQ SUB_COLUMN PARDER

    PARIZQ          shift and go to state 451


state 393

    (69) INNERR -> JOIN TABLA_REF ON CONDICIONES .
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    JOIN            reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    WHERE           reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    INNER           reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    LEFT            reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    RIGHT           reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    FULL            reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    GROUP           reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    LIMIT           reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    OFFSET          reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    PUNTOCOMA       reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    UNION           reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    INTERSECT       reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    EXCEPT          reduce using rule 69 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 394

    (71) INNERR -> JOIN TABLA_REF USING PARIZQ . SUB_COLUMN PARDER
    (73) SUB_COLUMN -> . JOIN EXPRESIONNE
    (74) SUB_COLUMN -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    JOIN            shift and go to state 452
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    SUB_COLUMN                     shift and go to state 453
    EXPRESIONNE                    shift and go to state 454
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 395

    (84) TABLA_REF -> ID AS ID .

    ON              reduce using rule 84 (TABLA_REF -> ID AS ID .)
    USING           reduce using rule 84 (TABLA_REF -> ID AS ID .)


state 396

    (87) GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .

    GROUP           reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    JOIN            reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    WHERE           reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    LIMIT           reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    OFFSET          reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    INNER           reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    LEFT            reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    RIGHT           reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    FULL            reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    PUNTOCOMA       reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    UNION           reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    INTERSECT       reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    EXCEPT          reduce using rule 87 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)


state 397

    (89) EXPRE_LIST -> EXPRE_LIST EXPRES .

    HAVING          reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    ID              reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    ASTERISCO       reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    GROUP           reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    JOIN            reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    WHERE           reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    LIMIT           reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    OFFSET          reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    INNER           reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    LEFT            reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    RIGHT           reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    FULL            reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    PUNTOCOMA       reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    UNION           reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    INTERSECT       reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    EXCEPT          reduce using rule 89 (EXPRE_LIST -> EXPRE_LIST EXPRES .)


state 398

    (102) MORE_ORDER -> HAVING . CONDICIONES
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 455
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 399

    (91) EXPRES -> NOMBRE_T PUNTO . CAMPOS S2
    (92) EXPRES -> NOMBRE_T PUNTO . CAMPOS
    (95) EXPRES -> NOMBRE_T PUNTO . CAMPOS S2 STATE
    (96) EXPRES -> NOMBRE_T PUNTO . CAMPOS STATE
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO

    ID              shift and go to state 114
    ASTERISCO       shift and go to state 30

    CAMPOS                         shift and go to state 456

state 400

    (93) EXPRES -> CAMPOS S2 .
    (97) EXPRES -> CAMPOS S2 . STATE
    (103) STATE -> . ASC
    (104) STATE -> . ASC NULLS FIRST
    (105) STATE -> . ASC NULLS LAST
    (106) STATE -> . DESC
    (107) STATE -> . DESC NULLS FIRST
    (108) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    ID              reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    ASTERISCO       reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    GROUP           reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    JOIN            reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    WHERE           reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    LIMIT           reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    OFFSET          reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    INNER           reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    LEFT            reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    RIGHT           reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    FULL            reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    PUNTOCOMA       reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    UNION           reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    INTERSECT       reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    EXCEPT          reduce using rule 93 (EXPRES -> CAMPOS S2 .)
    ASC             shift and go to state 404
    DESC            shift and go to state 405

  ! ASC             [ reduce using rule 93 (EXPRES -> CAMPOS S2 .) ]
  ! DESC            [ reduce using rule 93 (EXPRES -> CAMPOS S2 .) ]

    STATE                          shift and go to state 457

state 401

    (98) EXPRES -> CAMPOS STATE .

    HAVING          reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    ID              reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    ASTERISCO       reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    GROUP           reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    JOIN            reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    WHERE           reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    LIMIT           reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    OFFSET          reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    INNER           reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    LEFT            reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    RIGHT           reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    FULL            reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    PUNTOCOMA       reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    UNION           reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    INTERSECT       reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    EXCEPT          reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    ASC             reduce using rule 98 (EXPRES -> CAMPOS STATE .)
    DESC            reduce using rule 98 (EXPRES -> CAMPOS STATE .)


state 402

    (99) S2 -> COMA . EXPRES
    (91) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (92) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (93) EXPRES -> . CAMPOS S2
    (94) EXPRES -> . CAMPOS
    (95) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (96) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (97) EXPRES -> . CAMPOS S2 STATE
    (98) EXPRES -> . CAMPOS STATE
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO

    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30

    EXPRES                         shift and go to state 458
    NOMBRE_T                       shift and go to state 332
    CAMPOS                         shift and go to state 333

state 403

    (100) S2 -> AS . ALIAS
    (101) S2 -> AS . ALIAS COMA EXPRES
    (21) ALIAS -> . ID

    ID              shift and go to state 117

    ALIAS                          shift and go to state 459

state 404

    (103) STATE -> ASC .
    (104) STATE -> ASC . NULLS FIRST
    (105) STATE -> ASC . NULLS LAST

    HAVING          reduce using rule 103 (STATE -> ASC .)
    ID              reduce using rule 103 (STATE -> ASC .)
    ASTERISCO       reduce using rule 103 (STATE -> ASC .)
    GROUP           reduce using rule 103 (STATE -> ASC .)
    JOIN            reduce using rule 103 (STATE -> ASC .)
    WHERE           reduce using rule 103 (STATE -> ASC .)
    LIMIT           reduce using rule 103 (STATE -> ASC .)
    OFFSET          reduce using rule 103 (STATE -> ASC .)
    INNER           reduce using rule 103 (STATE -> ASC .)
    LEFT            reduce using rule 103 (STATE -> ASC .)
    RIGHT           reduce using rule 103 (STATE -> ASC .)
    FULL            reduce using rule 103 (STATE -> ASC .)
    PUNTOCOMA       reduce using rule 103 (STATE -> ASC .)
    UNION           reduce using rule 103 (STATE -> ASC .)
    INTERSECT       reduce using rule 103 (STATE -> ASC .)
    EXCEPT          reduce using rule 103 (STATE -> ASC .)
    ASC             reduce using rule 103 (STATE -> ASC .)
    DESC            reduce using rule 103 (STATE -> ASC .)
    NULLS           shift and go to state 460


state 405

    (106) STATE -> DESC .
    (107) STATE -> DESC . NULLS FIRST
    (108) STATE -> DESC . NULLS LAST

    HAVING          reduce using rule 106 (STATE -> DESC .)
    ID              reduce using rule 106 (STATE -> DESC .)
    ASTERISCO       reduce using rule 106 (STATE -> DESC .)
    GROUP           reduce using rule 106 (STATE -> DESC .)
    JOIN            reduce using rule 106 (STATE -> DESC .)
    WHERE           reduce using rule 106 (STATE -> DESC .)
    LIMIT           reduce using rule 106 (STATE -> DESC .)
    OFFSET          reduce using rule 106 (STATE -> DESC .)
    INNER           reduce using rule 106 (STATE -> DESC .)
    LEFT            reduce using rule 106 (STATE -> DESC .)
    RIGHT           reduce using rule 106 (STATE -> DESC .)
    FULL            reduce using rule 106 (STATE -> DESC .)
    PUNTOCOMA       reduce using rule 106 (STATE -> DESC .)
    UNION           reduce using rule 106 (STATE -> DESC .)
    INTERSECT       reduce using rule 106 (STATE -> DESC .)
    EXCEPT          reduce using rule 106 (STATE -> DESC .)
    ASC             reduce using rule 106 (STATE -> DESC .)
    DESC            reduce using rule 106 (STATE -> DESC .)
    NULLS           shift and go to state 461


state 406

    (260) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 462


state 407

    (265) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 463


state 408

    (146) CUERPOO -> WHEN CONDICIONES . EXPRESIONNE END
    (147) CUERPOO -> WHEN CONDICIONES . EXPRESIONNE ELSE EXPRESIONNE END
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (53) SIMBOLO_NEG -> . NOT

    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53
    NOT             shift and go to state 123

    EXPRESIONNE                    shift and go to state 464
    CONDICION                      shift and go to state 194
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49
    CONDICION_REL                  shift and go to state 121
    SIMBOLO_NEG                    shift and go to state 122

state 409

    (48) OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CADENASIMPLE resolved as shift
  ! shift/reduce conflict for CADENADOBLE resolved as shift
    THEN            reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    PUNTOCOMA       reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    UNION           reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    INTERSECT       reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    EXCEPT          reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    JOIN            reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    WHERE           reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    INNER           reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    LEFT            reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    RIGHT           reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    FULL            reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    GROUP           reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    LIMIT           reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    OFFSET          reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    PARDER          reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

  ! NOT             [ reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! ID              [ reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! ENTERO          [ reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! FLOTANTE        [ reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! CADENASIMPLE    [ reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! CADENADOBLE     [ reduce using rule 48 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 410

    (150) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ . ID PARDER PUNTOCOMA

    ID              shift and go to state 465


state 411

    (154) LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .

    CONSTRAINT      reduce using rule 154 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    UNIQUE          reduce using rule 154 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    PRIMARY         reduce using rule 154 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    FOREIGN         reduce using rule 154 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    ID              reduce using rule 154 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    PARDER          reduce using rule 154 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)


state 412

    (190) LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .

    NOT             reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    PRIMARY         reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    DEFAULT         reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    NULL            reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    CONSTRAINT      reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    COMA            reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    UNIQUE          reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    FOREIGN         reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    ID              reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    PARDER          reduce using rule 190 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)


state 413

    (191) VALIDACION_CAMPO_CREATE -> NOT NULL .

    NOT             reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    PRIMARY         reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    DEFAULT         reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    NULL            reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    CONSTRAINT      reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    COMA            reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    UNIQUE          reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    FOREIGN         reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    ID              reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    PARDER          reduce using rule 191 (VALIDACION_CAMPO_CREATE -> NOT NULL .)


state 414

    (192) VALIDACION_CAMPO_CREATE -> PRIMARY KEY .

    NOT             reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    PRIMARY         reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    DEFAULT         reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    NULL            reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    CONSTRAINT      reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    COMA            reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    UNIQUE          reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    FOREIGN         reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    ID              reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    PARDER          reduce using rule 192 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)


state 415

    (193) VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .

    NOT             reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    PRIMARY         reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    DEFAULT         reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    NULL            reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    CONSTRAINT      reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    COMA            reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    UNIQUE          reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    FOREIGN         reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    ID              reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    PARDER          reduce using rule 193 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)


state 416

    (194) VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .

    NOT             reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    PRIMARY         reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    DEFAULT         reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    NULL            reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    CONSTRAINT      reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    COMA            reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    UNIQUE          reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    FOREIGN         reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    ID              reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    PARDER          reduce using rule 194 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)


state 417

    (195) VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .

    NOT             reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    PRIMARY         reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    DEFAULT         reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    NULL            reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    CONSTRAINT      reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    COMA            reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    UNIQUE          reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    FOREIGN         reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    ID              reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    PARDER          reduce using rule 195 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)


state 418

    (196) VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .

    NOT             reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    PRIMARY         reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    DEFAULT         reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    NULL            reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    CONSTRAINT      reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    COMA            reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    UNIQUE          reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    FOREIGN         reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    ID              reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    PARDER          reduce using rule 196 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)


state 419

    (197) VALIDACION_CAMPO_CREATE -> DEFAULT ID .

    NOT             reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    PRIMARY         reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    DEFAULT         reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    NULL            reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    CONSTRAINT      reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    COMA            reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    UNIQUE          reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    FOREIGN         reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    ID              reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    PARDER          reduce using rule 197 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)


state 420

    (200) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID . UNIQUE
    (201) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID . CHECK PARIZQ CONDICIONES PARDER

    UNIQUE          shift and go to state 466
    CHECK           shift and go to state 467


state 421

    (181) TIPO_CAMPO -> CHARACTER VARYING PARIZQ . EXPNUMERICA PARDER
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    EXPNUMERICA                    shift and go to state 468

state 422

    (183) TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA . PARDER
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 469
    MAS             shift and go to state 373
    MENOS           shift and go to state 374
    ASTERISCO       shift and go to state 375
    DIVISION        shift and go to state 376
    PORCENTAJE      shift and go to state 377


state 423

    (182) TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA . PARDER
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 470
    MAS             shift and go to state 373
    MENOS           shift and go to state 374
    ASTERISCO       shift and go to state 375
    DIVISION        shift and go to state 376
    PORCENTAJE      shift and go to state 377


state 424

    (184) TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA . PARDER
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 471
    MAS             shift and go to state 373
    MENOS           shift and go to state 374
    ASTERISCO       shift and go to state 375
    DIVISION        shift and go to state 376
    PORCENTAJE      shift and go to state 377


state 425

    (157) LISTA2 -> CONSTRAINT ID UNIQUE COMA .

    CONSTRAINT      reduce using rule 157 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    UNIQUE          reduce using rule 157 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    PRIMARY         reduce using rule 157 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    FOREIGN         reduce using rule 157 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    ID              reduce using rule 157 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    PARDER          reduce using rule 157 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)


state 426

    (158) LISTA2 -> CONSTRAINT ID CHECK PARIZQ . CONDICIONES PARDER
    (159) LISTA2 -> CONSTRAINT ID CHECK PARIZQ . CONDICIONES PARDER COMA
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 472
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 427

    (162) LISTA2 -> CONSTRAINT ID PRIMARY KEY . PARIZQ LISTA_DE_IDS PARDER
    (163) LISTA2 -> CONSTRAINT ID PRIMARY KEY . PARIZQ LISTA_DE_IDS PARDER COMA

    PARIZQ          shift and go to state 473


state 428

    (160) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER . COMA
    (161) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .

    COMA            shift and go to state 474
    CONSTRAINT      reduce using rule 161 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    UNIQUE          reduce using rule 161 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    PRIMARY         reduce using rule 161 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    FOREIGN         reduce using rule 161 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    ID              reduce using rule 161 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    PARDER          reduce using rule 161 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)


state 429

    (168) LISTA_DE_IDS -> LISTA_DE_IDS LISTA_ID_ .

    PARDER          reduce using rule 168 (LISTA_DE_IDS -> LISTA_DE_IDS LISTA_ID_ .)
    ID              reduce using rule 168 (LISTA_DE_IDS -> LISTA_DE_IDS LISTA_ID_ .)


state 430

    (170) LISTA_ID_ -> ID COMA .

    PARDER          reduce using rule 170 (LISTA_ID_ -> ID COMA .)
    ID              reduce using rule 170 (LISTA_ID_ -> ID COMA .)


state 431

    (164) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS . PARDER COMA
    (166) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS . PARDER
    (168) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    PARDER          shift and go to state 475
    ID              shift and go to state 363

    LISTA_ID_                      shift and go to state 429

state 432

    (165) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS . PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (167) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS . PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
    (168) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    PARDER          shift and go to state 476
    ID              shift and go to state 363

    LISTA_ID_                      shift and go to state 429

state 433

    (245) MODE_DATABASE -> MODE IGUAL . ENTERO

    ENTERO          shift and go to state 477


state 434

    (243) OWNER_DATABASE -> OWNER IGUAL ID .

    MODE            reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)
    SELECT          reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)
    CREATE          reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)
    INSERT          reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)
    UPDATE          reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)
    DELETE          reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)
    DROP            reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)
    ALTER           reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)
    SHOW            reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)
    $end            reduce using rule 243 (OWNER_DATABASE -> OWNER IGUAL ID .)


state 435

    (271) EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .

    MAS             reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    MENOS           reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    ASTERISCO       reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    DIVISION        reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    PORCENTAJE      reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    PARIZQ          reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    ENTERO          reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    FLOTANTE        reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    WHERE           reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    EXISTS          reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    CADENASIMPLE    reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    CADENADOBLE     reduce using rule 271 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)


state 436

    (266) EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    MAS             reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    MENOS           reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    PORCENTAJE      reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    COMA            reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    PARDER          reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    PARIZQ          reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    ID              reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    ENTERO          reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    FLOTANTE        reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    WHERE           reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    EXISTS          reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    CADENADOBLE     reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    ASTERISCO       shift and go to state 375
    DIVISION        shift and go to state 376

  ! ASTERISCO       [ reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .) ]
  ! DIVISION        [ reduce using rule 266 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .) ]
  ! MAS             [ shift and go to state 373 ]
  ! MENOS           [ shift and go to state 374 ]
  ! PORCENTAJE      [ shift and go to state 377 ]


state 437

    (267) EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    MAS             reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    MENOS           reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    PORCENTAJE      reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    COMA            reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    PARDER          reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    PARIZQ          reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    ID              reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    ENTERO          reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    FLOTANTE        reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    WHERE           reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    EXISTS          reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    CADENADOBLE     reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    ASTERISCO       shift and go to state 375
    DIVISION        shift and go to state 376

  ! ASTERISCO       [ reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .) ]
  ! DIVISION        [ reduce using rule 267 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .) ]
  ! MAS             [ shift and go to state 373 ]
  ! MENOS           [ shift and go to state 374 ]
  ! PORCENTAJE      [ shift and go to state 377 ]


state 438

    (268) EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    MAS             reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    MENOS           reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    ASTERISCO       reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    DIVISION        reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    PORCENTAJE      reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    COMA            reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    PARDER          reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    PARIZQ          reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    ID              reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    ENTERO          reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    FLOTANTE        reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    WHERE           reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    EXISTS          reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    CADENADOBLE     reduce using rule 268 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)

  ! MAS             [ shift and go to state 373 ]
  ! MENOS           [ shift and go to state 374 ]
  ! ASTERISCO       [ shift and go to state 375 ]
  ! DIVISION        [ shift and go to state 376 ]
  ! PORCENTAJE      [ shift and go to state 377 ]


state 439

    (269) EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    MAS             reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    MENOS           reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    ASTERISCO       reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    DIVISION        reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    PORCENTAJE      reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    COMA            reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    PARDER          reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    PARIZQ          reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    ID              reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    ENTERO          reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    FLOTANTE        reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    WHERE           reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    EXISTS          reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    CADENADOBLE     reduce using rule 269 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)

  ! MAS             [ shift and go to state 373 ]
  ! MENOS           [ shift and go to state 374 ]
  ! ASTERISCO       [ shift and go to state 375 ]
  ! DIVISION        [ shift and go to state 376 ]
  ! PORCENTAJE      [ shift and go to state 377 ]


state 440

    (270) EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ASTERISCO resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for PORCENTAJE resolved as shift
    COMA            reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    PARDER          reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    PARIZQ          reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    ID              reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    ENTERO          reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    FLOTANTE        reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    WHERE           reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    EXISTS          reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    CADENADOBLE     reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    MAS             shift and go to state 373
    MENOS           shift and go to state 374
    ASTERISCO       shift and go to state 375
    DIVISION        shift and go to state 376
    PORCENTAJE      shift and go to state 377

  ! MAS             [ reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]
  ! MENOS           [ reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]
  ! ASTERISCO       [ reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]
  ! DIVISION        [ reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]
  ! PORCENTAJE      [ reduce using rule 270 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]


state 441

    (204) DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ . VALORES PARDER
    (210) VALORES -> . VALORES VALOR
    (211) VALORES -> . VALOR
    (212) VALOR -> . EXPRESION_GLOBAL COMA
    (213) VALOR -> . EXPRESION_GLOBAL
    (233) EXPRESION_GLOBAL -> . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    VALORES                        shift and go to state 478
    VALOR                          shift and go to state 295
    EXPRESION_GLOBAL               shift and go to state 296
    EXPNUMERICA                    shift and go to state 297

state 442

    (218) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .
    (219) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL . C
    (222) C -> . COMA CAMPO

    WHERE           reduce using rule 218 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    PUNTOCOMA       reduce using rule 218 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    ID              reduce using rule 218 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    PARIZQ          reduce using rule 218 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    EXISTS          reduce using rule 218 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    ENTERO          reduce using rule 218 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    FLOTANTE        reduce using rule 218 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    CADENASIMPLE    reduce using rule 218 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    CADENADOBLE     reduce using rule 218 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    COMA            shift and go to state 382

    C                              shift and go to state 479

state 443

    (222) C -> COMA CAMPO .

    WHERE           reduce using rule 222 (C -> COMA CAMPO .)
    PUNTOCOMA       reduce using rule 222 (C -> COMA CAMPO .)
    ID              reduce using rule 222 (C -> COMA CAMPO .)
    PARIZQ          reduce using rule 222 (C -> COMA CAMPO .)
    EXISTS          reduce using rule 222 (C -> COMA CAMPO .)
    ENTERO          reduce using rule 222 (C -> COMA CAMPO .)
    FLOTANTE        reduce using rule 222 (C -> COMA CAMPO .)
    CADENASIMPLE    reduce using rule 222 (C -> COMA CAMPO .)
    CADENADOBLE     reduce using rule 222 (C -> COMA CAMPO .)


state 444

    (123) AS_NO -> AS NO_N COMA QUERY .

    PARIZQ          reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    EXISTS          reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    ID              reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    ENTERO          reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    FLOTANTE        reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    CADENASIMPLE    reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    CADENADOBLE     reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    SET             reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    DEFAULT         reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    VALUES          reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    WHERE           reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    PUNTOCOMA       reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    UNION           reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    INTERSECT       reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    EXCEPT          reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    JOIN            reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    GROUP           reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    LIMIT           reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    OFFSET          reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    INNER           reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    LEFT            reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    RIGHT           reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    FULL            reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)
    PUNTO           reduce using rule 123 (AS_NO -> AS NO_N COMA QUERY .)


state 445

    (230) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT . NULL PUNTOCOMA

    NULL            shift and go to state 480


state 446

    (226) DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .

    SELECT          reduce using rule 226 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    CREATE          reduce using rule 226 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    INSERT          reduce using rule 226 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    UPDATE          reduce using rule 226 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    DELETE          reduce using rule 226 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    DROP            reduce using rule 226 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    ALTER           reduce using rule 226 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    SHOW            reduce using rule 226 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    $end            reduce using rule 226 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)


state 447

    (231) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID . PARDER REFERENCES ID PUNTOCOMA

    PARDER          shift and go to state 481


state 448

    (232) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ . ID PARDER PUNTOCOMA

    ID              shift and go to state 482


state 449

    (228) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 483


state 450

    (68) INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    JOIN            reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    WHERE           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    INNER           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    LEFT            reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    RIGHT           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    FULL            reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    GROUP           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    LIMIT           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    OFFSET          reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    PUNTOCOMA       reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    UNION           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    INTERSECT       reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    EXCEPT          reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 451

    (70) INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ . SUB_COLUMN PARDER
    (73) SUB_COLUMN -> . JOIN EXPRESIONNE
    (74) SUB_COLUMN -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    JOIN            shift and go to state 452
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    SUB_COLUMN                     shift and go to state 484
    EXPRESIONNE                    shift and go to state 454
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 452

    (73) SUB_COLUMN -> JOIN . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    EXPRESIONNE                    shift and go to state 485
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 453

    (71) INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN . PARDER

    PARDER          shift and go to state 486


state 454

    (74) SUB_COLUMN -> EXPRESIONNE .

    PARDER          reduce using rule 74 (SUB_COLUMN -> EXPRESIONNE .)


state 455

    (102) MORE_ORDER -> HAVING CONDICIONES .
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    GROUP           reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    JOIN            reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    WHERE           reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    LIMIT           reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    OFFSET          reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    INNER           reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    LEFT            reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    RIGHT           reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    FULL            reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    PUNTOCOMA       reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    UNION           reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    INTERSECT       reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    EXCEPT          reduce using rule 102 (MORE_ORDER -> HAVING CONDICIONES .)
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 456

    (91) EXPRES -> NOMBRE_T PUNTO CAMPOS . S2
    (92) EXPRES -> NOMBRE_T PUNTO CAMPOS .
    (95) EXPRES -> NOMBRE_T PUNTO CAMPOS . S2 STATE
    (96) EXPRES -> NOMBRE_T PUNTO CAMPOS . STATE
    (99) S2 -> . COMA EXPRES
    (100) S2 -> . AS ALIAS
    (101) S2 -> . AS ALIAS COMA EXPRES
    (103) STATE -> . ASC
    (104) STATE -> . ASC NULLS FIRST
    (105) STATE -> . ASC NULLS LAST
    (106) STATE -> . DESC
    (107) STATE -> . DESC NULLS FIRST
    (108) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    ID              reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    ASTERISCO       reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    GROUP           reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    JOIN            reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    WHERE           reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    LIMIT           reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    OFFSET          reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    INNER           reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    LEFT            reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    RIGHT           reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    FULL            reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    PUNTOCOMA       reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    UNION           reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    INTERSECT       reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    EXCEPT          reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    COMA            shift and go to state 402
    AS              shift and go to state 403
    ASC             shift and go to state 404
    DESC            shift and go to state 405

  ! ASC             [ reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .) ]
  ! DESC            [ reduce using rule 92 (EXPRES -> NOMBRE_T PUNTO CAMPOS .) ]

    S2                             shift and go to state 487
    STATE                          shift and go to state 488

state 457

    (97) EXPRES -> CAMPOS S2 STATE .

    HAVING          reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    ID              reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    ASTERISCO       reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    GROUP           reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    JOIN            reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    WHERE           reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    LIMIT           reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    OFFSET          reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    INNER           reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    LEFT            reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    RIGHT           reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    FULL            reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    PUNTOCOMA       reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    UNION           reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    INTERSECT       reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    EXCEPT          reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    ASC             reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)
    DESC            reduce using rule 97 (EXPRES -> CAMPOS S2 STATE .)


state 458

    (99) S2 -> COMA EXPRES .

    ASC             reduce using rule 99 (S2 -> COMA EXPRES .)
    DESC            reduce using rule 99 (S2 -> COMA EXPRES .)
    HAVING          reduce using rule 99 (S2 -> COMA EXPRES .)
    ID              reduce using rule 99 (S2 -> COMA EXPRES .)
    ASTERISCO       reduce using rule 99 (S2 -> COMA EXPRES .)
    GROUP           reduce using rule 99 (S2 -> COMA EXPRES .)
    JOIN            reduce using rule 99 (S2 -> COMA EXPRES .)
    WHERE           reduce using rule 99 (S2 -> COMA EXPRES .)
    LIMIT           reduce using rule 99 (S2 -> COMA EXPRES .)
    OFFSET          reduce using rule 99 (S2 -> COMA EXPRES .)
    INNER           reduce using rule 99 (S2 -> COMA EXPRES .)
    LEFT            reduce using rule 99 (S2 -> COMA EXPRES .)
    RIGHT           reduce using rule 99 (S2 -> COMA EXPRES .)
    FULL            reduce using rule 99 (S2 -> COMA EXPRES .)
    PUNTOCOMA       reduce using rule 99 (S2 -> COMA EXPRES .)
    UNION           reduce using rule 99 (S2 -> COMA EXPRES .)
    INTERSECT       reduce using rule 99 (S2 -> COMA EXPRES .)
    EXCEPT          reduce using rule 99 (S2 -> COMA EXPRES .)


state 459

    (100) S2 -> AS ALIAS .
    (101) S2 -> AS ALIAS . COMA EXPRES

    ASC             reduce using rule 100 (S2 -> AS ALIAS .)
    DESC            reduce using rule 100 (S2 -> AS ALIAS .)
    HAVING          reduce using rule 100 (S2 -> AS ALIAS .)
    ID              reduce using rule 100 (S2 -> AS ALIAS .)
    ASTERISCO       reduce using rule 100 (S2 -> AS ALIAS .)
    GROUP           reduce using rule 100 (S2 -> AS ALIAS .)
    JOIN            reduce using rule 100 (S2 -> AS ALIAS .)
    WHERE           reduce using rule 100 (S2 -> AS ALIAS .)
    LIMIT           reduce using rule 100 (S2 -> AS ALIAS .)
    OFFSET          reduce using rule 100 (S2 -> AS ALIAS .)
    INNER           reduce using rule 100 (S2 -> AS ALIAS .)
    LEFT            reduce using rule 100 (S2 -> AS ALIAS .)
    RIGHT           reduce using rule 100 (S2 -> AS ALIAS .)
    FULL            reduce using rule 100 (S2 -> AS ALIAS .)
    PUNTOCOMA       reduce using rule 100 (S2 -> AS ALIAS .)
    UNION           reduce using rule 100 (S2 -> AS ALIAS .)
    INTERSECT       reduce using rule 100 (S2 -> AS ALIAS .)
    EXCEPT          reduce using rule 100 (S2 -> AS ALIAS .)
    COMA            shift and go to state 489


state 460

    (104) STATE -> ASC NULLS . FIRST
    (105) STATE -> ASC NULLS . LAST

    FIRST           shift and go to state 490
    LAST            shift and go to state 491


state 461

    (107) STATE -> DESC NULLS . FIRST
    (108) STATE -> DESC NULLS . LAST

    FIRST           shift and go to state 492
    LAST            shift and go to state 493


state 462

    (260) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .

    SELECT          reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    CREATE          reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    INSERT          reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    DELETE          reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    DROP            reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    ALTER           reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    SHOW            reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    $end            reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    PARDER          reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    UNION           reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    INTERSECT       reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    EXCEPT          reduce using rule 260 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)


state 463

    (265) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .

    SELECT          reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    CREATE          reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    INSERT          reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    DELETE          reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    DROP            reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    ALTER           reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    SHOW            reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    $end            reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    PARDER          reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    UNION           reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    INTERSECT       reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    EXCEPT          reduce using rule 265 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)


state 464

    (146) CUERPOO -> WHEN CONDICIONES EXPRESIONNE . END
    (147) CUERPOO -> WHEN CONDICIONES EXPRESIONNE . ELSE EXPRESIONNE END
    (45) CONDICION_REL -> EXPRESIONNE . OPERADOR EXPRESIONNE
    (47) CONDICION_REL -> EXPRESIONNE .
    (60) OPERADOR -> . IGUAL
    (61) OPERADOR -> . DIFERENTE
    (62) OPERADOR -> . MAYOR
    (63) OPERADOR -> . MENOR
    (64) OPERADOR -> . MENORIGUAL
    (65) OPERADOR -> . MAYORIGUAL

    END             shift and go to state 494
    ELSE            shift and go to state 495
    AND             reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    OR              reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    ID              reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    ENTERO          reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    FLOTANTE        reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    CADENADOBLE     reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    NOT             reduce using rule 47 (CONDICION_REL -> EXPRESIONNE .)
    IGUAL           shift and go to state 90
    DIFERENTE       shift and go to state 91
    MAYOR           shift and go to state 92
    MENOR           shift and go to state 93
    MENORIGUAL      shift and go to state 94
    MAYORIGUAL      shift and go to state 95

    OPERADOR                       shift and go to state 195

state 465

    (150) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID . PARDER PUNTOCOMA

    PARDER          shift and go to state 496


state 466

    (200) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .

    NOT             reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    DEFAULT         reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    NULL            reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    CONSTRAINT      reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    COMA            reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    FOREIGN         reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    ID              reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    PARDER          reduce using rule 200 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)


state 467

    (201) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK . PARIZQ CONDICIONES PARDER

    PARIZQ          shift and go to state 497


state 468

    (181) TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA . PARDER
    (266) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (267) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (268) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 498
    MAS             shift and go to state 373
    MENOS           shift and go to state 374
    ASTERISCO       shift and go to state 375
    DIVISION        shift and go to state 376
    PORCENTAJE      shift and go to state 377


state 469

    (183) TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .

    NOT             reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    PRIMARY         reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    DEFAULT         reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    NULL            reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    CONSTRAINT      reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    UNIQUE          reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    FOREIGN         reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 183 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)


state 470

    (182) TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .

    NOT             reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    PRIMARY         reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    DEFAULT         reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    NULL            reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    CONSTRAINT      reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    UNIQUE          reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    FOREIGN         reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 182 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)


state 471

    (184) TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .

    NOT             reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    PRIMARY         reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    DEFAULT         reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    NULL            reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    CONSTRAINT      reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    UNIQUE          reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    FOREIGN         reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 184 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)


state 472

    (158) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES . PARDER
    (159) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES . PARDER COMA
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    PARDER          shift and go to state 499
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 473

    (162) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ . LISTA_DE_IDS PARDER
    (163) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ . LISTA_DE_IDS PARDER COMA
    (168) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (169) LISTA_DE_IDS -> . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    ID              shift and go to state 363

    LISTA_DE_IDS                   shift and go to state 500
    LISTA_ID_                      shift and go to state 362

state 474

    (160) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .

    CONSTRAINT      reduce using rule 160 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    UNIQUE          reduce using rule 160 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    PRIMARY         reduce using rule 160 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    FOREIGN         reduce using rule 160 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    ID              reduce using rule 160 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    PARDER          reduce using rule 160 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)


state 475

    (164) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER . COMA
    (166) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .

    COMA            shift and go to state 501
    CONSTRAINT      reduce using rule 166 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    UNIQUE          reduce using rule 166 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    PRIMARY         reduce using rule 166 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    FOREIGN         reduce using rule 166 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    ID              reduce using rule 166 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    PARDER          reduce using rule 166 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)


state 476

    (165) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER . REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (167) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER . REFERENCES ID PARIZQ LISTA_DE_IDS PARDER

    REFERENCES      shift and go to state 502


state 477

    (245) MODE_DATABASE -> MODE IGUAL ENTERO .

    SELECT          reduce using rule 245 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    CREATE          reduce using rule 245 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    INSERT          reduce using rule 245 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    UPDATE          reduce using rule 245 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    DELETE          reduce using rule 245 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    DROP            reduce using rule 245 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    ALTER           reduce using rule 245 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    SHOW            reduce using rule 245 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    $end            reduce using rule 245 (MODE_DATABASE -> MODE IGUAL ENTERO .)


state 478

    (204) DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES . PARDER
    (210) VALORES -> VALORES . VALOR
    (212) VALOR -> . EXPRESION_GLOBAL COMA
    (213) VALOR -> . EXPRESION_GLOBAL
    (233) EXPRESION_GLOBAL -> . EXPNUMERICA
    (266) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (267) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (268) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (269) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (270) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (271) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (272) EXPNUMERICA -> . ID
    (273) EXPNUMERICA -> . ENTERO
    (274) EXPNUMERICA -> . FLOTANTE

    PARDER          shift and go to state 503
    PARIZQ          shift and go to state 293
    ID              shift and go to state 298
    ENTERO          shift and go to state 299
    FLOTANTE        shift and go to state 300

    VALOR                          shift and go to state 371
    EXPRESION_GLOBAL               shift and go to state 296
    EXPNUMERICA                    shift and go to state 297

state 479

    (219) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .

    WHERE           reduce using rule 219 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    PUNTOCOMA       reduce using rule 219 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    ID              reduce using rule 219 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    PARIZQ          reduce using rule 219 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    EXISTS          reduce using rule 219 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    ENTERO          reduce using rule 219 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    FLOTANTE        reduce using rule 219 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    CADENASIMPLE    reduce using rule 219 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    CADENADOBLE     reduce using rule 219 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)


state 480

    (230) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL . PUNTOCOMA

    PUNTOCOMA       shift and go to state 504


state 481

    (231) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER . REFERENCES ID PUNTOCOMA

    REFERENCES      shift and go to state 505


state 482

    (232) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID . PARDER PUNTOCOMA

    PARDER          shift and go to state 506


state 483

    (228) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .

    SELECT          reduce using rule 228 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    CREATE          reduce using rule 228 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    INSERT          reduce using rule 228 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    UPDATE          reduce using rule 228 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    DELETE          reduce using rule 228 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    DROP            reduce using rule 228 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    ALTER           reduce using rule 228 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    SHOW            reduce using rule 228 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    $end            reduce using rule 228 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)


state 484

    (70) INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN . PARDER

    PARDER          shift and go to state 507


state 485

    (73) SUB_COLUMN -> JOIN EXPRESIONNE .

    PARDER          reduce using rule 73 (SUB_COLUMN -> JOIN EXPRESIONNE .)


state 486

    (71) INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .

    JOIN            reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    WHERE           reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INNER           reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LEFT            reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    RIGHT           reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    FULL            reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    GROUP           reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LIMIT           reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    OFFSET          reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    PUNTOCOMA       reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    UNION           reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INTERSECT       reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    EXCEPT          reduce using rule 71 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)


state 487

    (91) EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .
    (95) EXPRES -> NOMBRE_T PUNTO CAMPOS S2 . STATE
    (103) STATE -> . ASC
    (104) STATE -> . ASC NULLS FIRST
    (105) STATE -> . ASC NULLS LAST
    (106) STATE -> . DESC
    (107) STATE -> . DESC NULLS FIRST
    (108) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    ID              reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    ASTERISCO       reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    GROUP           reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    JOIN            reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    WHERE           reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    LIMIT           reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    OFFSET          reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    INNER           reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    LEFT            reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    RIGHT           reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    FULL            reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    PUNTOCOMA       reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    UNION           reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    INTERSECT       reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    EXCEPT          reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    ASC             shift and go to state 404
    DESC            shift and go to state 405

  ! ASC             [ reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .) ]
  ! DESC            [ reduce using rule 91 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .) ]

    STATE                          shift and go to state 508

state 488

    (96) EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .

    HAVING          reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    ID              reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    ASTERISCO       reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    GROUP           reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    JOIN            reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    WHERE           reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    LIMIT           reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    OFFSET          reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    INNER           reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    LEFT            reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    RIGHT           reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    FULL            reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    PUNTOCOMA       reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    UNION           reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    INTERSECT       reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    EXCEPT          reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    ASC             reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    DESC            reduce using rule 96 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)


state 489

    (101) S2 -> AS ALIAS COMA . EXPRES
    (91) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (92) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (93) EXPRES -> . CAMPOS S2
    (94) EXPRES -> . CAMPOS
    (95) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (96) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (97) EXPRES -> . CAMPOS S2 STATE
    (98) EXPRES -> . CAMPOS STATE
    (20) NOMBRE_T -> . ID
    (18) CAMPOS -> . ID
    (19) CAMPOS -> . ASTERISCO

    ID              shift and go to state 29
    ASTERISCO       shift and go to state 30

    EXPRES                         shift and go to state 509
    NOMBRE_T                       shift and go to state 332
    CAMPOS                         shift and go to state 333

state 490

    (104) STATE -> ASC NULLS FIRST .

    HAVING          reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    ID              reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    ASTERISCO       reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    GROUP           reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    JOIN            reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    WHERE           reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    LIMIT           reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    OFFSET          reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    INNER           reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    LEFT            reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    RIGHT           reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    FULL            reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    PUNTOCOMA       reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    UNION           reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    INTERSECT       reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    EXCEPT          reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    ASC             reduce using rule 104 (STATE -> ASC NULLS FIRST .)
    DESC            reduce using rule 104 (STATE -> ASC NULLS FIRST .)


state 491

    (105) STATE -> ASC NULLS LAST .

    HAVING          reduce using rule 105 (STATE -> ASC NULLS LAST .)
    ID              reduce using rule 105 (STATE -> ASC NULLS LAST .)
    ASTERISCO       reduce using rule 105 (STATE -> ASC NULLS LAST .)
    GROUP           reduce using rule 105 (STATE -> ASC NULLS LAST .)
    JOIN            reduce using rule 105 (STATE -> ASC NULLS LAST .)
    WHERE           reduce using rule 105 (STATE -> ASC NULLS LAST .)
    LIMIT           reduce using rule 105 (STATE -> ASC NULLS LAST .)
    OFFSET          reduce using rule 105 (STATE -> ASC NULLS LAST .)
    INNER           reduce using rule 105 (STATE -> ASC NULLS LAST .)
    LEFT            reduce using rule 105 (STATE -> ASC NULLS LAST .)
    RIGHT           reduce using rule 105 (STATE -> ASC NULLS LAST .)
    FULL            reduce using rule 105 (STATE -> ASC NULLS LAST .)
    PUNTOCOMA       reduce using rule 105 (STATE -> ASC NULLS LAST .)
    UNION           reduce using rule 105 (STATE -> ASC NULLS LAST .)
    INTERSECT       reduce using rule 105 (STATE -> ASC NULLS LAST .)
    EXCEPT          reduce using rule 105 (STATE -> ASC NULLS LAST .)
    ASC             reduce using rule 105 (STATE -> ASC NULLS LAST .)
    DESC            reduce using rule 105 (STATE -> ASC NULLS LAST .)


state 492

    (107) STATE -> DESC NULLS FIRST .

    HAVING          reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    ID              reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    ASTERISCO       reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    GROUP           reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    JOIN            reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    WHERE           reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    LIMIT           reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    OFFSET          reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    INNER           reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    LEFT            reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    RIGHT           reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    FULL            reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    PUNTOCOMA       reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    UNION           reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    INTERSECT       reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    EXCEPT          reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    ASC             reduce using rule 107 (STATE -> DESC NULLS FIRST .)
    DESC            reduce using rule 107 (STATE -> DESC NULLS FIRST .)


state 493

    (108) STATE -> DESC NULLS LAST .

    HAVING          reduce using rule 108 (STATE -> DESC NULLS LAST .)
    ID              reduce using rule 108 (STATE -> DESC NULLS LAST .)
    ASTERISCO       reduce using rule 108 (STATE -> DESC NULLS LAST .)
    GROUP           reduce using rule 108 (STATE -> DESC NULLS LAST .)
    JOIN            reduce using rule 108 (STATE -> DESC NULLS LAST .)
    WHERE           reduce using rule 108 (STATE -> DESC NULLS LAST .)
    LIMIT           reduce using rule 108 (STATE -> DESC NULLS LAST .)
    OFFSET          reduce using rule 108 (STATE -> DESC NULLS LAST .)
    INNER           reduce using rule 108 (STATE -> DESC NULLS LAST .)
    LEFT            reduce using rule 108 (STATE -> DESC NULLS LAST .)
    RIGHT           reduce using rule 108 (STATE -> DESC NULLS LAST .)
    FULL            reduce using rule 108 (STATE -> DESC NULLS LAST .)
    PUNTOCOMA       reduce using rule 108 (STATE -> DESC NULLS LAST .)
    UNION           reduce using rule 108 (STATE -> DESC NULLS LAST .)
    INTERSECT       reduce using rule 108 (STATE -> DESC NULLS LAST .)
    EXCEPT          reduce using rule 108 (STATE -> DESC NULLS LAST .)
    ASC             reduce using rule 108 (STATE -> DESC NULLS LAST .)
    DESC            reduce using rule 108 (STATE -> DESC NULLS LAST .)


state 494

    (146) CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .

    FROM            reduce using rule 146 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    ID              reduce using rule 146 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    ASTERISCO       reduce using rule 146 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    CASE            reduce using rule 146 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    GREATEST        reduce using rule 146 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    LEAST           reduce using rule 146 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)


state 495

    (147) CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE . EXPRESIONNE END
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    EXPRESIONNE                    shift and go to state 510
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 496

    (150) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 511


state 497

    (201) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ . CONDICIONES PARDER
    (40) CONDICIONES -> . CONDICIONES CONDICION
    (41) CONDICIONES -> . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICIONES                    shift and go to state 512
    CONDICION                      shift and go to state 120
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 498

    (181) TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .

    NOT             reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    PRIMARY         reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    DEFAULT         reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    NULL            reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    CONSTRAINT      reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    UNIQUE          reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    FOREIGN         reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 181 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)


state 499

    (158) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .
    (159) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER . COMA

    CONSTRAINT      reduce using rule 158 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    UNIQUE          reduce using rule 158 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    PRIMARY         reduce using rule 158 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    FOREIGN         reduce using rule 158 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    ID              reduce using rule 158 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    PARDER          reduce using rule 158 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    COMA            shift and go to state 513


state 500

    (162) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS . PARDER
    (163) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS . PARDER COMA
    (168) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    PARDER          shift and go to state 514
    ID              shift and go to state 363

    LISTA_ID_                      shift and go to state 429

state 501

    (164) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .

    CONSTRAINT      reduce using rule 164 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    UNIQUE          reduce using rule 164 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    PRIMARY         reduce using rule 164 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    FOREIGN         reduce using rule 164 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    ID              reduce using rule 164 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    PARDER          reduce using rule 164 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)


state 502

    (165) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES . ID PARIZQ LISTA_DE_IDS PARDER COMA
    (167) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES . ID PARIZQ LISTA_DE_IDS PARDER

    ID              shift and go to state 515


state 503

    (204) DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES PARDER .

    PUNTOCOMA       reduce using rule 204 (DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES PARDER .)


state 504

    (230) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .

    SELECT          reduce using rule 230 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    CREATE          reduce using rule 230 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    INSERT          reduce using rule 230 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    UPDATE          reduce using rule 230 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    DELETE          reduce using rule 230 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    DROP            reduce using rule 230 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    ALTER           reduce using rule 230 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    SHOW            reduce using rule 230 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    $end            reduce using rule 230 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)


state 505

    (231) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES . ID PUNTOCOMA

    ID              shift and go to state 516


state 506

    (232) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 517


state 507

    (70) INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .

    JOIN            reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    WHERE           reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INNER           reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LEFT            reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    RIGHT           reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    FULL            reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    GROUP           reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LIMIT           reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    OFFSET          reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    PUNTOCOMA       reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    UNION           reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INTERSECT       reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    EXCEPT          reduce using rule 70 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)


state 508

    (95) EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .

    HAVING          reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    ID              reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    ASTERISCO       reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    GROUP           reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    JOIN            reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    WHERE           reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    LIMIT           reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    OFFSET          reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    INNER           reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    LEFT            reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    RIGHT           reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    FULL            reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    PUNTOCOMA       reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    UNION           reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    INTERSECT       reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    EXCEPT          reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    ASC             reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    DESC            reduce using rule 95 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)


state 509

    (101) S2 -> AS ALIAS COMA EXPRES .

    ASC             reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    DESC            reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    HAVING          reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    ID              reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    ASTERISCO       reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    GROUP           reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    JOIN            reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    WHERE           reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    LIMIT           reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    OFFSET          reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    INNER           reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    LEFT            reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    RIGHT           reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    FULL            reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    PUNTOCOMA       reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    UNION           reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    INTERSECT       reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)
    EXCEPT          reduce using rule 101 (S2 -> AS ALIAS COMA EXPRES .)


state 510

    (147) CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE . END

    END             shift and go to state 518


state 511

    (150) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .

    SELECT          reduce using rule 150 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    CREATE          reduce using rule 150 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    INSERT          reduce using rule 150 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 150 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    DELETE          reduce using rule 150 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    DROP            reduce using rule 150 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    ALTER           reduce using rule 150 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    SHOW            reduce using rule 150 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    $end            reduce using rule 150 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)


state 512

    (201) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES . PARDER
    (40) CONDICIONES -> CONDICIONES . CONDICION
    (42) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (43) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (44) CONDICION -> . CONDICION_REL
    (45) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (46) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (47) CONDICION_REL -> . EXPRESIONNE
    (49) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (50) EXPRESIONNE -> . CAMPOSC
    (53) SIMBOLO_NEG -> . NOT
    (54) NOMBRE_C -> . ID
    (55) CAMPOSC -> . ID
    (56) CAMPOSC -> . ENTERO
    (57) CAMPOSC -> . FLOTANTE
    (58) CAMPOSC -> . CADENASIMPLE
    (59) CAMPOSC -> . CADENADOBLE

    PARDER          shift and go to state 519
    NOT             shift and go to state 123
    ID              shift and go to state 124
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 51
    CADENASIMPLE    shift and go to state 52
    CADENADOBLE     shift and go to state 53

    CONDICION                      shift and go to state 194
    CONDICION_REL                  shift and go to state 121
    EXPRESIONNE                    shift and go to state 119
    SIMBOLO_NEG                    shift and go to state 122
    NOMBRE_C                       shift and go to state 48
    CAMPOSC                        shift and go to state 49

state 513

    (159) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .

    CONSTRAINT      reduce using rule 159 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    UNIQUE          reduce using rule 159 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    PRIMARY         reduce using rule 159 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    FOREIGN         reduce using rule 159 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    ID              reduce using rule 159 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    PARDER          reduce using rule 159 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)


state 514

    (162) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .
    (163) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER . COMA

    CONSTRAINT      reduce using rule 162 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    UNIQUE          reduce using rule 162 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    PRIMARY         reduce using rule 162 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    FOREIGN         reduce using rule 162 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    ID              reduce using rule 162 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    PARDER          reduce using rule 162 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    COMA            shift and go to state 520


state 515

    (165) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID . PARIZQ LISTA_DE_IDS PARDER COMA
    (167) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID . PARIZQ LISTA_DE_IDS PARDER

    PARIZQ          shift and go to state 521


state 516

    (231) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 522


state 517

    (232) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .

    SELECT          reduce using rule 232 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    CREATE          reduce using rule 232 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    INSERT          reduce using rule 232 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 232 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    DELETE          reduce using rule 232 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    DROP            reduce using rule 232 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    ALTER           reduce using rule 232 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    SHOW            reduce using rule 232 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    $end            reduce using rule 232 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)


state 518

    (147) CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .

    FROM            reduce using rule 147 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    ID              reduce using rule 147 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    ASTERISCO       reduce using rule 147 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    CASE            reduce using rule 147 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    GREATEST        reduce using rule 147 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    LEAST           reduce using rule 147 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)


state 519

    (201) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .

    NOT             reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    PRIMARY         reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    DEFAULT         reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    NULL            reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    CONSTRAINT      reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    COMA            reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    UNIQUE          reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    FOREIGN         reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    ID              reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    PARDER          reduce using rule 201 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)


state 520

    (163) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .

    CONSTRAINT      reduce using rule 163 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    UNIQUE          reduce using rule 163 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    PRIMARY         reduce using rule 163 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    FOREIGN         reduce using rule 163 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    ID              reduce using rule 163 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    PARDER          reduce using rule 163 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)


state 521

    (165) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ . LISTA_DE_IDS PARDER COMA
    (167) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ . LISTA_DE_IDS PARDER
    (168) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (169) LISTA_DE_IDS -> . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    ID              shift and go to state 363

    LISTA_DE_IDS                   shift and go to state 523
    LISTA_ID_                      shift and go to state 362

state 522

    (231) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .

    SELECT          reduce using rule 231 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    CREATE          reduce using rule 231 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    INSERT          reduce using rule 231 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    UPDATE          reduce using rule 231 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    DELETE          reduce using rule 231 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    DROP            reduce using rule 231 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    ALTER           reduce using rule 231 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    SHOW            reduce using rule 231 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    $end            reduce using rule 231 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)


state 523

    (165) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS . PARDER COMA
    (167) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS . PARDER
    (168) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (170) LISTA_ID_ -> . ID COMA
    (171) LISTA_ID_ -> . ID

    PARDER          shift and go to state 524
    ID              shift and go to state 363

    LISTA_ID_                      shift and go to state 429

state 524

    (165) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER . COMA
    (167) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .

    COMA            shift and go to state 525
    CONSTRAINT      reduce using rule 167 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    UNIQUE          reduce using rule 167 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    PRIMARY         reduce using rule 167 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    FOREIGN         reduce using rule 167 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    ID              reduce using rule 167 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    PARDER          reduce using rule 167 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)


state 525

    (165) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .

    CONSTRAINT      reduce using rule 165 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    UNIQUE          reduce using rule 165 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    PRIMARY         reduce using rule 165 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    FOREIGN         reduce using rule 165 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    ID              reduce using rule 165 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    PARDER          reduce using rule 165 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARIZQ in state 41 resolved as shift
WARNING: shift/reduce conflict for EXISTS in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 41 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 41 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 41 resolved as shift
WARNING: shift/reduce conflict for CADENASIMPLE in state 41 resolved as shift
WARNING: shift/reduce conflict for CADENADOBLE in state 41 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 163 resolved as shift
WARNING: shift/reduce conflict for UNION in state 163 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 163 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 163 resolved as shift
WARNING: shift/reduce conflict for JOIN in state 170 resolved as shift
WARNING: shift/reduce conflict for WHERE in state 170 resolved as shift
WARNING: shift/reduce conflict for INNER in state 170 resolved as shift
WARNING: shift/reduce conflict for LEFT in state 170 resolved as shift
WARNING: shift/reduce conflict for RIGHT in state 170 resolved as shift
WARNING: shift/reduce conflict for FULL in state 170 resolved as shift
WARNING: shift/reduce conflict for GROUP in state 171 resolved as shift
WARNING: shift/reduce conflict for LIMIT in state 172 resolved as shift
WARNING: shift/reduce conflict for OFFSET in state 172 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 238 resolved as shift
WARNING: shift/reduce conflict for UNION in state 238 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 238 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 238 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 261 resolved as shift
WARNING: shift/reduce conflict for UNION in state 261 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 261 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 261 resolved as shift
WARNING: shift/reduce conflict for NOT in state 270 resolved as shift
WARNING: shift/reduce conflict for PRIMARY in state 270 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 270 resolved as shift
WARNING: shift/reduce conflict for NULL in state 270 resolved as shift
WARNING: shift/reduce conflict for CONSTRAINT in state 270 resolved as shift
WARNING: shift/reduce conflict for ASC in state 333 resolved as shift
WARNING: shift/reduce conflict for DESC in state 333 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 334 resolved as shift
WARNING: shift/reduce conflict for UNION in state 334 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 334 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 334 resolved as shift
WARNING: shift/reduce conflict for PRIMARY in state 345 resolved as shift
WARNING: shift/reduce conflict for CONSTRAINT in state 345 resolved as shift
WARNING: shift/reduce conflict for ASC in state 400 resolved as shift
WARNING: shift/reduce conflict for DESC in state 400 resolved as shift
WARNING: shift/reduce conflict for NOT in state 409 resolved as shift
WARNING: shift/reduce conflict for ID in state 409 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 409 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 409 resolved as shift
WARNING: shift/reduce conflict for CADENASIMPLE in state 409 resolved as shift
WARNING: shift/reduce conflict for CADENADOBLE in state 409 resolved as shift
WARNING: shift/reduce conflict for MAS in state 440 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 440 resolved as shift
WARNING: shift/reduce conflict for ASTERISCO in state 440 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 440 resolved as shift
WARNING: shift/reduce conflict for PORCENTAJE in state 440 resolved as shift
WARNING: shift/reduce conflict for ASC in state 456 resolved as shift
WARNING: shift/reduce conflict for DESC in state 456 resolved as shift
WARNING: shift/reduce conflict for ASC in state 487 resolved as shift
WARNING: shift/reduce conflict for DESC in state 487 resolved as shift
WARNING: reduce/reduce conflict in state 42 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (ATE_QUE -> ID) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (NOMBRE_C -> ID) in state 42
WARNING: reduce/reduce conflict in state 137 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (ATE_QUE -> ID) in state 137
WARNING: reduce/reduce conflict in state 137 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (NOMBRE_C -> ID) in state 137
WARNING: reduce/reduce conflict in state 240 resolved using rule (CUERPO -> WHERE CONDICIONES)
WARNING: rejected rule (INNERR -> WHERE CONDICIONES) in state 240
