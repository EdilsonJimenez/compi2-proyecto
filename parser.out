Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIOMULTI
    COMENTARIONORMAL
    CURRENT_DATE
    CURRENT_TIME
    DATE
    DAY
    FECHA
    MONTH
    NEGACION
    NOW
    TIME
    TYPE

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INSTRUCCIONES
Rule 2     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 3     INSTRUCCIONES -> INSTRUCCION
Rule 4     INSTRUCCION -> DQL_COMANDOS
Rule 5     INSTRUCCION -> DDL_COMANDOS
Rule 6     INSTRUCCION -> DML_COMANDOS
Rule 7     DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
Rule 8     DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
Rule 9     DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
Rule 10    DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
Rule 11    LISTA_CAMPOS -> LISTA_CAMPOS LISTAA
Rule 12    LISTA_CAMPOS -> LISTAA
Rule 13    LISTAA -> NOMBRE_T PUNTO CAMPOS S
Rule 14    LISTAA -> NOMBRE_T PUNTO CAMPOS
Rule 15    LISTAA -> CAMPOS S
Rule 16    LISTAA -> CAMPOS
Rule 17    LISTAA -> EXPRESIONES_C
Rule 18    LISTAA -> SUBQUERYS
Rule 19    CAMPOS -> ID
Rule 20    CAMPOS -> ASTERISCO
Rule 21    NOMBRE_T -> ID
Rule 22    ALIAS -> ID
Rule 23    S -> COMA LISTAA
Rule 24    S -> AS ALIAS
Rule 25    S -> AS ALIAS COMA LISTAA
Rule 26    S -> ALIAS COMA LISTAA
Rule 27    S -> ALIAS
Rule 28    DISTINCTNT -> DISTINCT
Rule 29    NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA
Rule 30    NOMBRES_TABLAS -> TABLA
Rule 31    TABLA -> NOMBRE_T
Rule 32    TABLA -> NOMBRE_T S1
Rule 33    TABLA -> SUBQUERYS
Rule 34    S1 -> COMA TABLA
Rule 35    S1 -> AS ALIAS
Rule 36    S1 -> ALIAS COMA TABLA
Rule 37    S1 -> ALIAS
Rule 38    CUERPO -> WHERE CONDICIONES
Rule 39    CUERPO -> MORES
Rule 40    MORES -> MORES MOREE
Rule 41    MORES -> MOREE
Rule 42    MOREE -> INNERS
Rule 43    MOREE -> GROUPS
Rule 44    MOREE -> LIMITS
Rule 45    CONDICIONES -> CONDICIONES CONDICION
Rule 46    CONDICIONES -> CONDICION
Rule 47    CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
Rule 48    CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
Rule 49    CONDICION -> CONDICION_REL
Rule 50    CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE
Rule 51    CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE
Rule 52    CONDICION_REL -> EXPRESIONNE
Rule 53    OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES
Rule 54    EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC
Rule 55    EXPRESIONNE -> CAMPOSC
Rule 56    EXPRESIONNE -> SUBQUERYS
Rule 57    SIMBOLO_LOGICO -> AND
Rule 58    SIMBOLO_LOGICO -> OR
Rule 59    SIMBOLO_NEG -> NOT
Rule 60    NOMBRE_C -> ID
Rule 61    CAMPOSC -> ID
Rule 62    CAMPOSC -> ENTERO
Rule 63    CAMPOSC -> FLOTANTE
Rule 64    CAMPOSC -> CADENASIMPLE
Rule 65    CAMPOSC -> CADENADOBLE
Rule 66    OPERADOR -> IGUAL
Rule 67    OPERADOR -> DIFERENTE
Rule 68    OPERADOR -> MAYOR
Rule 69    OPERADOR -> MENOR
Rule 70    OPERADOR -> MENORIGUAL
Rule 71    OPERADOR -> MAYORIGUAL
Rule 72    INNERS -> INNERS INNERR
Rule 73    INNERS -> INNERR
Rule 74    INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
Rule 75    INNERR -> JOIN TABLA_REF ON CONDICIONES
Rule 76    INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
Rule 77    INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
Rule 78    INNERR -> WHERE CONDICIONES
Rule 79    SUB_COLUMN -> JOIN EXPRESIONNE
Rule 80    SUB_COLUMN -> EXPRESIONNE
Rule 81    TIPOS_INNER -> INNER OUTER
Rule 82    TIPOS_INNER -> INNER
Rule 83    TIPOS_INNER -> LEFT OUTER
Rule 84    TIPOS_INNER -> LEFT
Rule 85    TIPOS_INNER -> RIGHT OUTER
Rule 86    TIPOS_INNER -> RIGHT
Rule 87    TIPOS_INNER -> FULL OUTER
Rule 88    TIPOS_INNER -> FULL
Rule 89    TABLA_REF -> ID
Rule 90    TABLA_REF -> ID AS ID
Rule 91    TABLA_REF -> ID ID
Rule 92    GROUPS -> GROUPS GROUPP
Rule 93    GROUPS -> GROUPP
Rule 94    GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER
Rule 95    GROUPP -> GROUP BY EXPRE_LIST
Rule 96    EXPRE_LIST -> EXPRE_LIST EXPRES
Rule 97    EXPRE_LIST -> EXPRES
Rule 98    EXPRES -> NOMBRE_T PUNTO CAMPOS S2
Rule 99    EXPRES -> NOMBRE_T PUNTO CAMPOS
Rule 100   EXPRES -> CAMPOS S2
Rule 101   EXPRES -> CAMPOS
Rule 102   EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE
Rule 103   EXPRES -> NOMBRE_T PUNTO CAMPOS STATE
Rule 104   EXPRES -> CAMPOS S2 STATE
Rule 105   EXPRES -> CAMPOS STATE
Rule 106   S2 -> COMA EXPRES
Rule 107   S2 -> AS ALIAS
Rule 108   S2 -> AS ALIAS COMA EXPRES
Rule 109   S2 -> ALIAS
Rule 110   S2 -> ALIAS COMA EXPRES
Rule 111   MORE_ORDER -> HAVING CONDICIONES
Rule 112   STATE -> ASC
Rule 113   STATE -> ASC NULLS FIRST
Rule 114   STATE -> ASC NULLS LAST
Rule 115   STATE -> DESC
Rule 116   STATE -> DESC NULLS FIRST
Rule 117   STATE -> DESC NULLS LAST
Rule 118   LIMITS -> LIMITS LIMITT
Rule 119   LIMITS -> LIMITT
Rule 120   LIMITT -> LIMIT EXPRE_NUM
Rule 121   LIMITT -> OFFSET EXPRE_NUM
Rule 122   EXPRE_NUM -> ENTERO
Rule 123   EXPRE_NUM -> ALL
Rule 124   SUBQUERYS -> SUBQUERYS QUERY
Rule 125   SUBQUERYS -> QUERY
Rule 126   QUERY -> ATE_QUE PARIZQ QUE PARDER
Rule 127   QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO
Rule 128   QUERY -> PARIZQ QUE PARDER
Rule 129   QUERY -> PARIZQ QUE PARDER AS_NO
Rule 130   AS_NO -> COMA QUERY
Rule 131   AS_NO -> AS NO_N
Rule 132   AS_NO -> AS NO_N COMA QUERY
Rule 133   AS_NO -> NO_N
Rule 134   AS_NO -> NO_N COMA QUERY
Rule 135   NO_N -> ID
Rule 136   ATE_QUE -> EXISTS
Rule 137   ATE_QUE -> EXPRESIONNE OPCIONALESS
Rule 138   ATE_QUE -> EXPRESIONNE OPERADOR OPCIONALESS2
Rule 139   ATE_QUE -> ID
Rule 140   OPCIONALESS -> IN
Rule 141   OPCIONALESS -> NOT IN
Rule 142   OPCIONALESS2 -> ANY
Rule 143   OPCIONALESS2 -> ALL
Rule 144   OPCIONALESS2 -> SOME
Rule 145   QUE -> QUE_SUBS
Rule 146   QUE_SUBS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
Rule 147   QUE_SUBS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS
Rule 148   QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
Rule 149   QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS
Rule 150   UNIONS -> UNIONS UNIONN
Rule 151   UNIONS -> UNIONN
Rule 152   UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS
Rule 153   UNIONN -> COMPORTAMIENTO DQL_COMANDOS
Rule 154   UNIONN -> PUNTOCOMA
Rule 155   COMPORTAMIENTO -> UNION
Rule 156   COMPORTAMIENTO -> INTERSECT
Rule 157   COMPORTAMIENTO -> EXCEPT
Rule 158   EXPRESIONES_C -> CASE WHEN_LIST CUERPOO
Rule 159   EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER
Rule 160   EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER
Rule 161   CUERPOO -> WHEN CONDICIONES EXPRESIONNE END
Rule 162   CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END
Rule 163   CUERPOO -> END
Rule 164   CUERPOO -> END ID
Rule 165   WHEN_LIST -> WHEN_LIST WHEN_UNI
Rule 166   WHEN_LIST -> WHEN_UNI
Rule 167   WHEN_UNI -> WHEN CONDICIONES THEN EXPRESIONNE
Rule 168   WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE THEN EXPRESIONNE
Rule 169   WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE
Rule 170   DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
Rule 171   DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
Rule 172   CUERPO_CREATE_TABLE -> LISTA_DE_COLUMNAS
Rule 173   LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2
Rule 174   LISTA_DE_COLUMNAS -> LISTA2
Rule 175   LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
Rule 176   LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE
Rule 177   LISTA2 -> CONSTRAINT ID UNIQUE
Rule 178   LISTA2 -> CONSTRAINT ID UNIQUE COMA
Rule 179   LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
Rule 180   LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA
Rule 181   LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA
Rule 182   LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER
Rule 183   LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
Rule 184   LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
Rule 185   LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
Rule 186   LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
Rule 187   LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
Rule 188   LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
Rule 189   LISTA_DE_IDS -> LISTA_DE_IDS LISTA_ID_
Rule 190   LISTA_DE_IDS -> LISTA_ID_
Rule 191   LISTA_ID_ -> ID COMA
Rule 192   LISTA_ID_ -> ID
Rule 193   TIPO_CAMPO -> SMALLINT
Rule 194   TIPO_CAMPO -> INTEGER
Rule 195   TIPO_CAMPO -> INT
Rule 196   TIPO_CAMPO -> BIGINT
Rule 197   TIPO_CAMPO -> DECIMAL
Rule 198   TIPO_CAMPO -> REAL
Rule 199   TIPO_CAMPO -> MONEY
Rule 200   TIPO_CAMPO -> FLOAT
Rule 201   TIPO_CAMPO -> DOUBLE PRECISION
Rule 202   TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER
Rule 203   TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER
Rule 204   TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER
Rule 205   TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER
Rule 206   TIPO_CAMPO -> TEXT
Rule 207   TIPO_CAMPO -> BOOLEAN
Rule 208   VALIDACIONES_CREATE_TABLE -> LISTA3
Rule 209   LISTA3 -> VALIDACION_CAMPO_CREATE
Rule 210   LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO
Rule 211   LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE
Rule 212   VALIDACION_CAMPO_CREATE -> NOT NULL
Rule 213   VALIDACION_CAMPO_CREATE -> PRIMARY KEY
Rule 214   VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE
Rule 215   VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE
Rule 216   VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL
Rule 217   VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO
Rule 218   VALIDACION_CAMPO_CREATE -> DEFAULT ID
Rule 219   VALIDACION_CAMPO_CREATE_VACIO -> <empty>
Rule 220   VALIDACION_CAMPO_CREATE -> NULL
Rule 221   VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE
Rule 222   VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
Rule 223   DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA
Rule 224   DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA
Rule 225   DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES PARDER
Rule 226   DATOS -> VALUES PARIZQ VALORES PARDER
Rule 227   COLUMNAS -> COLUMNAS COLUMNA
Rule 228   COLUMNAS -> COLUMNA
Rule 229   COLUMNA -> ID COMA
Rule 230   COLUMNA -> ID
Rule 231   VALORES -> VALORES VALOR
Rule 232   VALORES -> VALOR
Rule 233   VALOR -> EXPRESION_GLOBAL COMA
Rule 234   VALOR -> EXPRESION_GLOBAL
Rule 235   DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
Rule 236   DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA
Rule 237   CAMPOSN -> CAMPOSN CAMPO
Rule 238   CAMPOSN -> CAMPO
Rule 239   CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL
Rule 240   CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C
Rule 241   CAMPO -> ID IGUAL EXPRESION_GLOBAL
Rule 242   CAMPO -> ID IGUAL EXPRESION_GLOBAL C
Rule 243   C -> COMA CAMPO
Rule 244   DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
Rule 245   DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA
Rule 246   DML_COMANDOS -> DROP TABLE ID PUNTOCOMA
Rule 247   DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
Rule 248   DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA
Rule 249   DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA
Rule 250   DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA
Rule 251   DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
Rule 252   DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
Rule 253   DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA
Rule 254   EXPRESION_GLOBAL -> EXPNUMERICA
Rule 255   DDL_COMANDOS -> CREATE_DATABASE
Rule 256   DDL_COMANDOS -> SHOW_DATABASES
Rule 257   DDL_COMANDOS -> ALTER_DATABASE
Rule 258   DDL_COMANDOS -> DROP_DATABASE
Rule 259   CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
Rule 260   REPLACE_OP -> OR REPLACE
Rule 261   REPLACE_OP -> <empty>
Rule 262   IF_NOT_EXISTIS -> IF NOT EXISTS
Rule 263   IF_NOT_EXISTIS -> <empty>
Rule 264   OWNER_DATABASE -> OWNER IGUAL ID
Rule 265   OWNER_DATABASE -> <empty>
Rule 266   MODE_DATABASE -> MODE IGUAL ENTERO
Rule 267   MODE_DATABASE -> <empty>
Rule 268   SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE
Rule 269   SHOW_DATABASES_LIKE -> LIKE CADENADOBLE
Rule 270   SHOW_DATABASES_LIKE -> <empty>
Rule 271   ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP
Rule 272   ALTER_DATABASE_OP -> RENAME TO ID
Rule 273   ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW
Rule 274   ALTER_TABLE_OP_OW -> ID
Rule 275   ALTER_TABLE_OP_OW -> CURRENT_USER
Rule 276   ALTER_TABLE_OP_OW -> SESSION_USER
Rule 277   ALTER_DATABASE_OP -> <empty>
Rule 278   DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID
Rule 279   IF_EXISTS_DATABASE -> IF EXISTS
Rule 280   IF_EXISTS_DATABASE -> <empty>
Rule 281   DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
Rule 282   TIPO_TIEMPO -> YEAR
Rule 283   TIPO_TIEMPO -> HOUR
Rule 284   TIPO_TIEMPO -> MINUTE
Rule 285   TIPO_TIEMPO -> SECOND
Rule 286   DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA
Rule 287   EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA
Rule 288   EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA
Rule 289   EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA
Rule 290   EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA
Rule 291   EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA
Rule 292   EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER
Rule 293   EXPNUMERICA -> ID
Rule 294   EXPNUMERICA -> ENTERO
Rule 295   EXPNUMERICA -> FLOTANTE

Terminals, with rules where they appear

ADD                  : 247 252 253
ALL                  : 123 143 152
ALTER                : 247 248 249 250 251 251 252 253 271
AND                  : 57
ANY                  : 142
AS                   : 24 25 35 90 107 108 131 132
ASC                  : 112 113 114
ASTERISCO            : 20 289
BIGINT               : 196
BOOLEAN              : 207
BY                   : 94 95
CADENADOBLE          : 65 215 269
CADENASIMPLE         : 64 214 281 286 286
CASE                 : 158
CHAR                 : 205
CHARACTER            : 202 204
CHECK                : 179 180 222
COLUMN               : 247 248 249 251
COMA                 : 23 25 26 34 36 106 108 110 130 132 134 175 178 180 181 184 185 186 191 229 233 243 286
COMENTARIOMULTI      : 
COMENTARIONORMAL     : 
CONSTRAINT           : 177 178 179 180 183 184 221 222 250 253
CREATE               : 170 171 259
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 275
DATABASE             : 259 271 278
DATABASES            : 268
DATE                 : 
DATE_PART            : 286
DAY                  : 
DECIMAL              : 197 216
DEFAULT              : 214 215 216 217 218 224
DELETE               : 244 245
DESC                 : 115 116 117
DIFERENTE            : 67
DISTINCT             : 28
DIVISION             : 290
DOUBLE               : 201
DROP                 : 246 248 250 278
ELSE                 : 162 169
END                  : 161 162 163 164
ENTERO               : 62 122 217 266 294
EXCEPT               : 157
EXISTS               : 136 262 279
EXTRACT              : 281
FECHA                : 
FIRST                : 113 116
FLOAT                : 200
FLOTANTE             : 63 295
FOREIGN              : 186 188 252
FROM                 : 7 8 9 10 146 147 148 149 244 245 281
FULL                 : 87 88
GREATEST             : 159
GROUP                : 94 95
HAVING               : 111
HOUR                 : 283
ID                   : 19 21 22 60 61 89 90 90 91 91 135 139 164 170 171 171 177 178 179 180 183 184 186 188 191 192 218 221 222 229 230 239 240 241 242 246 247 247 248 249 249 249 250 250 251 251 252 252 252 253 253 253 259 264 271 272 274 278 293
IF                   : 262 279
IGUAL                : 66 239 240 241 242 264 266
IN                   : 140 141
INHERITS             : 171
INNER                : 81 82
INSERT               : 223 224
INT                  : 195
INTEGER              : 194
INTERSECT            : 156
INTERVAL             : 286
INTO                 : 223 224
JOIN                 : 74 75 76 77 79
KEY                  : 183 184 185 186 187 188 213 252
LAST                 : 114 117
LEAST                : 160
LEFT                 : 83 84
LIKE                 : 269
LIMIT                : 120
MAS                  : 287
MAYOR                : 68
MAYORIGUAL           : 71
MENOR                : 69
MENORIGUAL           : 70
MENOS                : 288
MINUTE               : 284
MODE                 : 266
MONEY                : 199
MONTH                : 
NEGACION             : 
NOT                  : 59 141 212 251 262
NOW                  : 
NULL                 : 212 220 251
NULLS                : 113 114 116 117
OFFSET               : 121
ON                   : 74 75
OR                   : 58 260
OUTER                : 81 83 85 87
OWNER                : 264 273
PARDER               : 76 77 126 127 128 129 159 160 170 171 171 179 180 181 182 183 184 185 186 186 187 188 188 202 203 204 205 222 225 225 226 252 253 281 286 292
PARIZQ               : 76 77 126 127 128 129 159 160 170 171 171 179 180 181 182 183 184 185 186 186 187 188 188 202 203 204 205 222 225 225 226 252 253 281 286 292
PORCENTAJE           : 291
PRECISION            : 201
PRIMARY              : 183 184 185 187 213
PUNTO                : 13 14 54 98 99 102 103 239 240
PUNTOCOMA            : 154 170 171 223 224 235 236 244 245 246 247 248 249 250 251 252 253 281 286
REAL                 : 198
REFERENCES           : 186 188 252
RENAME               : 249 272
REPLACE              : 260
RIGHT                : 85 86
SECOND               : 285
SELECT               : 7 8 9 10 146 147 148 149 281 286
SESSION_USER         : 276
SET                  : 235 236 251
SHOW                 : 268
SMALLINT             : 193
SOME                 : 144
TABLE                : 170 171 246 247 248 249 250 251 252 253
TEXT                 : 206
THEN                 : 167 168 169
TIME                 : 
TIMESTAMP            : 281
TO                   : 249 272 273
TYPE                 : 
UNION                : 155
UNIQUE               : 177 178 181 182 221 253
UPDATE               : 235 236
USING                : 76 77
VALUES               : 224 225 226
VARCHAR              : 203
VARYING              : 202
WHEN                 : 161 162 167 168 169
WHERE                : 38 78 235 244
YEAR                 : 282
error                : 

Nonterminals, with rules where they appear

ALIAS                : 24 25 26 27 35 36 37 107 108 109 110
ALTER_DATABASE       : 257
ALTER_DATABASE_OP    : 271
ALTER_TABLE_OP_OW    : 273
AS_NO                : 127 129
ATE_QUE              : 126 127
C                    : 240 242
CAMPO                : 237 238 243
CAMPOS               : 13 14 15 16 98 99 100 101 102 103 104 105
CAMPOSC              : 54 55 248
CAMPOSN              : 235 236 237
COLUMNA              : 227 228
COLUMNAS             : 225 227
COMPORTAMIENTO       : 152 153
CONDICION            : 45 46
CONDICIONES          : 38 45 53 74 75 78 111 161 162 167 168 169 179 180 222 235 244
CONDICION_REL        : 47 47 48 48 49
CREATE_DATABASE      : 255
CUERPO               : 7 9 146 148
CUERPOO              : 158
CUERPO_CREATE_TABLE  : 170 171
DATOS                : 223
DDL_COMANDOS         : 5
DISTINCTNT           : 9 10 148 149
DML_COMANDOS         : 6
DQL_COMANDOS         : 4 152 153
DROP_DATABASE        : 258
EXPNUMERICA          : 202 203 204 205 254 287 287 288 288 289 289 290 290 291 291 292
EXPRES               : 96 97 106 108 110
EXPRESIONES_C        : 17
EXPRESIONNE          : 50 50 51 52 79 80 137 138 159 160 161 162 162 167 168 168 169 169 169
EXPRESION_GLOBAL     : 233 234 239 240 241 242
EXPRE_LIST           : 94 95 96
EXPRE_NUM            : 120 121
GROUPP               : 92 93
GROUPS               : 43 92
IF_EXISTS_DATABASE   : 278
IF_NOT_EXISTIS       : 259
INICIO               : 0
INNERR               : 72 73
INNERS               : 42 72
INSTRUCCION          : 2 3
INSTRUCCIONES        : 1 2
LIMITS               : 44 118
LIMITT               : 118 119
LISTA2               : 173 174
LISTA3               : 208 211
LISTAA               : 11 12 23 25 26
LISTA_CAMPOS         : 7 8 9 10 11 146 147 148 149
LISTA_DE_COLUMNAS    : 172 173
LISTA_DE_IDS         : 181 182 183 184 185 186 186 187 188 188 189
LISTA_ID_            : 189 190
MODE_DATABASE        : 259
MOREE                : 40 41
MORES                : 39 40
MORE_ORDER           : 94
NOMBRES_TABLAS       : 7 8 9 10 29 146 147 148 149 223 224 235 236 239 240 244 245
NOMBRE_C             : 54
NOMBRE_T             : 13 14 31 32 98 99 102 103 175 176
NO_N                 : 131 132 133 134
OPCIONALESS          : 137
OPCIONALESS2         : 138
OPERADOR             : 50 138
OTRO_LOGICO          : 47
OWNER_DATABASE       : 259
QUE                  : 126 127 128 129
QUERY                : 124 125 130 132 134
QUE_SUBS             : 145
REPLACE_OP           : 259
S                    : 13 15
S1                   : 32
S2                   : 98 100 102 104
SHOW_DATABASES       : 256
SHOW_DATABASES_LIKE  : 268
SIMBOLO_LOGICO       : 47 48 53
SIMBOLO_NEG          : 51
STATE                : 102 103 104 105
SUBQUERYS            : 18 33 56 124
SUB_COLUMN           : 76 77
TABLA                : 29 30 34 36
TABLA_REF            : 74 75 76 77
TIPOS_INNER          : 74 76
TIPO_CAMPO           : 175 176 247
TIPO_TIEMPO          : 281
UNIONN               : 150 151
UNIONS               : 7 8 9 10 150
VALIDACIONES_CREATE_TABLE : 175 176
VALIDACION_CAMPO_CREATE : 209 211
VALIDACION_CAMPO_CREATE_VACIO : 210
VALOR                : 231 232
VALORES              : 225 226 231
WHEN_LIST            : 158 165
WHEN_UNI             : 165 166

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . DQL_COMANDOS
    (5) INSTRUCCION -> . DDL_COMANDOS
    (6) INSTRUCCION -> . DML_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (281) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (286) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA
    (255) DDL_COMANDOS -> . CREATE_DATABASE
    (256) DDL_COMANDOS -> . SHOW_DATABASES
    (257) DDL_COMANDOS -> . ALTER_DATABASE
    (258) DDL_COMANDOS -> . DROP_DATABASE
    (170) DML_COMANDOS -> . CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (171) DML_COMANDOS -> . CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
    (223) DML_COMANDOS -> . INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA
    (224) DML_COMANDOS -> . INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA
    (235) DML_COMANDOS -> . UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (236) DML_COMANDOS -> . UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA
    (244) DML_COMANDOS -> . DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
    (245) DML_COMANDOS -> . DELETE FROM NOMBRES_TABLAS PUNTOCOMA
    (246) DML_COMANDOS -> . DROP TABLE ID PUNTOCOMA
    (247) DML_COMANDOS -> . ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (248) DML_COMANDOS -> . ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA
    (249) DML_COMANDOS -> . ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA
    (250) DML_COMANDOS -> . ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA
    (251) DML_COMANDOS -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (252) DML_COMANDOS -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (253) DML_COMANDOS -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA
    (259) CREATE_DATABASE -> . CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (268) SHOW_DATABASES -> . SHOW DATABASES SHOW_DATABASES_LIKE
    (271) ALTER_DATABASE -> . ALTER DATABASE ID ALTER_DATABASE_OP
    (278) DROP_DATABASE -> . DROP DATABASE IF_EXISTS_DATABASE ID

    SELECT          shift and go to state 7
    CREATE          shift and go to state 12
    INSERT          shift and go to state 13
    UPDATE          shift and go to state 14
    DELETE          shift and go to state 15
    DROP            shift and go to state 16
    ALTER           shift and go to state 17
    SHOW            shift and go to state 18

    INICIO                         shift and go to state 1
    INSTRUCCIONES                  shift and go to state 2
    INSTRUCCION                    shift and go to state 3
    DQL_COMANDOS                   shift and go to state 4
    DDL_COMANDOS                   shift and go to state 5
    DML_COMANDOS                   shift and go to state 6
    CREATE_DATABASE                shift and go to state 8
    SHOW_DATABASES                 shift and go to state 9
    ALTER_DATABASE                 shift and go to state 10
    DROP_DATABASE                  shift and go to state 11

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> INSTRUCCIONES .
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . DQL_COMANDOS
    (5) INSTRUCCION -> . DDL_COMANDOS
    (6) INSTRUCCION -> . DML_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (281) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (286) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA
    (255) DDL_COMANDOS -> . CREATE_DATABASE
    (256) DDL_COMANDOS -> . SHOW_DATABASES
    (257) DDL_COMANDOS -> . ALTER_DATABASE
    (258) DDL_COMANDOS -> . DROP_DATABASE
    (170) DML_COMANDOS -> . CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (171) DML_COMANDOS -> . CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
    (223) DML_COMANDOS -> . INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA
    (224) DML_COMANDOS -> . INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA
    (235) DML_COMANDOS -> . UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (236) DML_COMANDOS -> . UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA
    (244) DML_COMANDOS -> . DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
    (245) DML_COMANDOS -> . DELETE FROM NOMBRES_TABLAS PUNTOCOMA
    (246) DML_COMANDOS -> . DROP TABLE ID PUNTOCOMA
    (247) DML_COMANDOS -> . ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (248) DML_COMANDOS -> . ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA
    (249) DML_COMANDOS -> . ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA
    (250) DML_COMANDOS -> . ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA
    (251) DML_COMANDOS -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (252) DML_COMANDOS -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (253) DML_COMANDOS -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA
    (259) CREATE_DATABASE -> . CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (268) SHOW_DATABASES -> . SHOW DATABASES SHOW_DATABASES_LIKE
    (271) ALTER_DATABASE -> . ALTER DATABASE ID ALTER_DATABASE_OP
    (278) DROP_DATABASE -> . DROP DATABASE IF_EXISTS_DATABASE ID

    $end            reduce using rule 1 (INICIO -> INSTRUCCIONES .)
    SELECT          shift and go to state 7
    CREATE          shift and go to state 12
    INSERT          shift and go to state 13
    UPDATE          shift and go to state 14
    DELETE          shift and go to state 15
    DROP            shift and go to state 16
    ALTER           shift and go to state 17
    SHOW            shift and go to state 18

    INSTRUCCION                    shift and go to state 19
    DQL_COMANDOS                   shift and go to state 4
    DDL_COMANDOS                   shift and go to state 5
    DML_COMANDOS                   shift and go to state 6
    CREATE_DATABASE                shift and go to state 8
    SHOW_DATABASES                 shift and go to state 9
    ALTER_DATABASE                 shift and go to state 10
    DROP_DATABASE                  shift and go to state 11

state 3

    (3) INSTRUCCIONES -> INSTRUCCION .

    SELECT          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    CREATE          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    INSERT          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    UPDATE          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    DELETE          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    DROP            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    ALTER           reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    SHOW            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)


state 4

    (4) INSTRUCCION -> DQL_COMANDOS .

    SELECT          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    CREATE          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    INSERT          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    UPDATE          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    DELETE          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    DROP            reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    ALTER           reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    SHOW            reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    $end            reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)


state 5

    (5) INSTRUCCION -> DDL_COMANDOS .

    SELECT          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    CREATE          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    INSERT          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    UPDATE          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    DELETE          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    DROP            reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    ALTER           reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    SHOW            reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    $end            reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)


state 6

    (6) INSTRUCCION -> DML_COMANDOS .

    SELECT          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    CREATE          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    INSERT          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    UPDATE          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    DELETE          reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    DROP            reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    ALTER           reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    SHOW            reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)
    $end            reduce using rule 6 (INSTRUCCION -> DML_COMANDOS .)


state 7

    (7) DQL_COMANDOS -> SELECT . LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> SELECT . LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> SELECT . DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT . DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (281) DQL_COMANDOS -> SELECT . EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (286) DQL_COMANDOS -> SELECT . DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA
    (11) LISTA_CAMPOS -> . LISTA_CAMPOS LISTAA
    (12) LISTA_CAMPOS -> . LISTAA
    (28) DISTINCTNT -> . DISTINCT
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    EXTRACT         shift and go to state 22
    DATE_PART       shift and go to state 25
    DISTINCT        shift and go to state 27
    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTA_CAMPOS                   shift and go to state 20
    DISTINCTNT                     shift and go to state 21
    LISTAA                         shift and go to state 26
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 8

    (255) DDL_COMANDOS -> CREATE_DATABASE .

    SELECT          reduce using rule 255 (DDL_COMANDOS -> CREATE_DATABASE .)
    CREATE          reduce using rule 255 (DDL_COMANDOS -> CREATE_DATABASE .)
    INSERT          reduce using rule 255 (DDL_COMANDOS -> CREATE_DATABASE .)
    UPDATE          reduce using rule 255 (DDL_COMANDOS -> CREATE_DATABASE .)
    DELETE          reduce using rule 255 (DDL_COMANDOS -> CREATE_DATABASE .)
    DROP            reduce using rule 255 (DDL_COMANDOS -> CREATE_DATABASE .)
    ALTER           reduce using rule 255 (DDL_COMANDOS -> CREATE_DATABASE .)
    SHOW            reduce using rule 255 (DDL_COMANDOS -> CREATE_DATABASE .)
    $end            reduce using rule 255 (DDL_COMANDOS -> CREATE_DATABASE .)


state 9

    (256) DDL_COMANDOS -> SHOW_DATABASES .

    SELECT          reduce using rule 256 (DDL_COMANDOS -> SHOW_DATABASES .)
    CREATE          reduce using rule 256 (DDL_COMANDOS -> SHOW_DATABASES .)
    INSERT          reduce using rule 256 (DDL_COMANDOS -> SHOW_DATABASES .)
    UPDATE          reduce using rule 256 (DDL_COMANDOS -> SHOW_DATABASES .)
    DELETE          reduce using rule 256 (DDL_COMANDOS -> SHOW_DATABASES .)
    DROP            reduce using rule 256 (DDL_COMANDOS -> SHOW_DATABASES .)
    ALTER           reduce using rule 256 (DDL_COMANDOS -> SHOW_DATABASES .)
    SHOW            reduce using rule 256 (DDL_COMANDOS -> SHOW_DATABASES .)
    $end            reduce using rule 256 (DDL_COMANDOS -> SHOW_DATABASES .)


state 10

    (257) DDL_COMANDOS -> ALTER_DATABASE .

    SELECT          reduce using rule 257 (DDL_COMANDOS -> ALTER_DATABASE .)
    CREATE          reduce using rule 257 (DDL_COMANDOS -> ALTER_DATABASE .)
    INSERT          reduce using rule 257 (DDL_COMANDOS -> ALTER_DATABASE .)
    UPDATE          reduce using rule 257 (DDL_COMANDOS -> ALTER_DATABASE .)
    DELETE          reduce using rule 257 (DDL_COMANDOS -> ALTER_DATABASE .)
    DROP            reduce using rule 257 (DDL_COMANDOS -> ALTER_DATABASE .)
    ALTER           reduce using rule 257 (DDL_COMANDOS -> ALTER_DATABASE .)
    SHOW            reduce using rule 257 (DDL_COMANDOS -> ALTER_DATABASE .)
    $end            reduce using rule 257 (DDL_COMANDOS -> ALTER_DATABASE .)


state 11

    (258) DDL_COMANDOS -> DROP_DATABASE .

    SELECT          reduce using rule 258 (DDL_COMANDOS -> DROP_DATABASE .)
    CREATE          reduce using rule 258 (DDL_COMANDOS -> DROP_DATABASE .)
    INSERT          reduce using rule 258 (DDL_COMANDOS -> DROP_DATABASE .)
    UPDATE          reduce using rule 258 (DDL_COMANDOS -> DROP_DATABASE .)
    DELETE          reduce using rule 258 (DDL_COMANDOS -> DROP_DATABASE .)
    DROP            reduce using rule 258 (DDL_COMANDOS -> DROP_DATABASE .)
    ALTER           reduce using rule 258 (DDL_COMANDOS -> DROP_DATABASE .)
    SHOW            reduce using rule 258 (DDL_COMANDOS -> DROP_DATABASE .)
    $end            reduce using rule 258 (DDL_COMANDOS -> DROP_DATABASE .)


state 12

    (170) DML_COMANDOS -> CREATE . TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (171) DML_COMANDOS -> CREATE . TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
    (259) CREATE_DATABASE -> CREATE . REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (260) REPLACE_OP -> . OR REPLACE
    (261) REPLACE_OP -> .

    TABLE           shift and go to state 46
    OR              shift and go to state 48
    DATABASE        reduce using rule 261 (REPLACE_OP -> .)

    REPLACE_OP                     shift and go to state 47

state 13

    (223) DML_COMANDOS -> INSERT . INTO NOMBRES_TABLAS DATOS PUNTOCOMA
    (224) DML_COMANDOS -> INSERT . INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA

    INTO            shift and go to state 49


state 14

    (235) DML_COMANDOS -> UPDATE . NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (236) DML_COMANDOS -> UPDATE . NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    NOMBRES_TABLAS                 shift and go to state 50
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 15

    (244) DML_COMANDOS -> DELETE . FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
    (245) DML_COMANDOS -> DELETE . FROM NOMBRES_TABLAS PUNTOCOMA

    FROM            shift and go to state 55


state 16

    (246) DML_COMANDOS -> DROP . TABLE ID PUNTOCOMA
    (278) DROP_DATABASE -> DROP . DATABASE IF_EXISTS_DATABASE ID

    TABLE           shift and go to state 56
    DATABASE        shift and go to state 57


state 17

    (247) DML_COMANDOS -> ALTER . TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (248) DML_COMANDOS -> ALTER . TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA
    (249) DML_COMANDOS -> ALTER . TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA
    (250) DML_COMANDOS -> ALTER . TABLE ID DROP CONSTRAINT ID PUNTOCOMA
    (251) DML_COMANDOS -> ALTER . TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (252) DML_COMANDOS -> ALTER . TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (253) DML_COMANDOS -> ALTER . TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA
    (271) ALTER_DATABASE -> ALTER . DATABASE ID ALTER_DATABASE_OP

    TABLE           shift and go to state 58
    DATABASE        shift and go to state 59


state 18

    (268) SHOW_DATABASES -> SHOW . DATABASES SHOW_DATABASES_LIKE

    DATABASES       shift and go to state 60


state 19

    (2) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    SELECT          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    CREATE          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    INSERT          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    UPDATE          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    DELETE          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    DROP            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    ALTER           reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    SHOW            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 20

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS . FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> SELECT LISTA_CAMPOS . FROM NOMBRES_TABLAS UNIONS
    (11) LISTA_CAMPOS -> LISTA_CAMPOS . LISTAA
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    FROM            shift and go to state 61
    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTAA                         shift and go to state 62
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 21

    (9) DQL_COMANDOS -> SELECT DISTINCTNT . LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT DISTINCTNT . LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (11) LISTA_CAMPOS -> . LISTA_CAMPOS LISTAA
    (12) LISTA_CAMPOS -> . LISTAA
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTA_CAMPOS                   shift and go to state 63
    LISTAA                         shift and go to state 26
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 22

    (281) DQL_COMANDOS -> SELECT EXTRACT . PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA

    PARIZQ          shift and go to state 64


state 23

    (128) QUERY -> PARIZQ . QUE PARDER
    (129) QUERY -> PARIZQ . QUE PARDER AS_NO
    (145) QUE -> . QUE_SUBS
    (146) QUE_SUBS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
    (147) QUE_SUBS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS
    (148) QUE_SUBS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
    (149) QUE_SUBS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS

    SELECT          shift and go to state 67

    QUE                            shift and go to state 65
    QUE_SUBS                       shift and go to state 66

state 24

    (64) CAMPOSC -> CADENASIMPLE .

    IN              reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    NOT             reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    IGUAL           reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    DIFERENTE       reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    MAYOR           reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    MENOR           reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    MENORIGUAL      reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    MAYORIGUAL      reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    AND             reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    OR              reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    THEN            reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    ID              reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    ENTERO          reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    FLOTANTE        reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    CADENASIMPLE    reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    CADENADOBLE     reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    PARIZQ          reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    EXISTS          reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    PARDER          reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    ELSE            reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    PUNTOCOMA       reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    UNION           reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    INTERSECT       reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    EXCEPT          reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    JOIN            reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    WHERE           reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    INNER           reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    LEFT            reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    RIGHT           reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    FULL            reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    GROUP           reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    LIMIT           reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    OFFSET          reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    END             reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)
    WHEN            reduce using rule 64 (CAMPOSC -> CADENASIMPLE .)


state 25

    (286) DQL_COMANDOS -> SELECT DATE_PART . PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    PARIZQ          shift and go to state 68


state 26

    (12) LISTA_CAMPOS -> LISTAA .

    FROM            reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    ID              reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    ASTERISCO       reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    CASE            reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    GREATEST        reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    LEAST           reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    PARIZQ          reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    EXISTS          reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    ENTERO          reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    FLOTANTE        reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    CADENASIMPLE    reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)
    CADENADOBLE     reduce using rule 12 (LISTA_CAMPOS -> LISTAA .)


state 27

    (28) DISTINCTNT -> DISTINCT .

    ID              reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    ASTERISCO       reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    CASE            reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    GREATEST        reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    LEAST           reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    PARIZQ          reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    EXISTS          reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    ENTERO          reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    FLOTANTE        reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    CADENASIMPLE    reduce using rule 28 (DISTINCTNT -> DISTINCT .)
    CADENADOBLE     reduce using rule 28 (DISTINCTNT -> DISTINCT .)


state 28

    (13) LISTAA -> NOMBRE_T . PUNTO CAMPOS S
    (14) LISTAA -> NOMBRE_T . PUNTO CAMPOS

    PUNTO           shift and go to state 69


state 29

    (15) LISTAA -> CAMPOS . S
    (16) LISTAA -> CAMPOS .
    (23) S -> . COMA LISTAA
    (24) S -> . AS ALIAS
    (25) S -> . AS ALIAS COMA LISTAA
    (26) S -> . ALIAS COMA LISTAA
    (27) S -> . ALIAS
    (22) ALIAS -> . ID

  ! shift/reduce conflict for ID resolved as shift
    FROM            reduce using rule 16 (LISTAA -> CAMPOS .)
    ASTERISCO       reduce using rule 16 (LISTAA -> CAMPOS .)
    CASE            reduce using rule 16 (LISTAA -> CAMPOS .)
    GREATEST        reduce using rule 16 (LISTAA -> CAMPOS .)
    LEAST           reduce using rule 16 (LISTAA -> CAMPOS .)
    PARIZQ          reduce using rule 16 (LISTAA -> CAMPOS .)
    EXISTS          reduce using rule 16 (LISTAA -> CAMPOS .)
    ENTERO          reduce using rule 16 (LISTAA -> CAMPOS .)
    FLOTANTE        reduce using rule 16 (LISTAA -> CAMPOS .)
    CADENASIMPLE    reduce using rule 16 (LISTAA -> CAMPOS .)
    CADENADOBLE     reduce using rule 16 (LISTAA -> CAMPOS .)
    COMA            shift and go to state 71
    AS              shift and go to state 72
    ID              shift and go to state 74

  ! ID              [ reduce using rule 16 (LISTAA -> CAMPOS .) ]

    S                              shift and go to state 70
    ALIAS                          shift and go to state 73

state 30

    (17) LISTAA -> EXPRESIONES_C .

    FROM            reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    ID              reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    ASTERISCO       reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    CASE            reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    GREATEST        reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    LEAST           reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    PARIZQ          reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    EXISTS          reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    ENTERO          reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    FLOTANTE        reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    CADENASIMPLE    reduce using rule 17 (LISTAA -> EXPRESIONES_C .)
    CADENADOBLE     reduce using rule 17 (LISTAA -> EXPRESIONES_C .)


state 31

    (18) LISTAA -> SUBQUERYS .
    (124) SUBQUERYS -> SUBQUERYS . QUERY
    (56) EXPRESIONNE -> SUBQUERYS .
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY

  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for EXISTS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CADENASIMPLE resolved as shift
  ! shift/reduce conflict for CADENADOBLE resolved as shift
    FROM            reduce using rule 18 (LISTAA -> SUBQUERYS .)
    ASTERISCO       reduce using rule 18 (LISTAA -> SUBQUERYS .)
    CASE            reduce using rule 18 (LISTAA -> SUBQUERYS .)
    GREATEST        reduce using rule 18 (LISTAA -> SUBQUERYS .)
    LEAST           reduce using rule 18 (LISTAA -> SUBQUERYS .)
    IN              reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    NOT             reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    IGUAL           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    DIFERENTE       reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MAYOR           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MENOR           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MENORIGUAL      reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MAYORIGUAL      reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ID              shift and go to state 77
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

  ! ID              [ reduce using rule 18 (LISTAA -> SUBQUERYS .) ]
  ! PARIZQ          [ reduce using rule 18 (LISTAA -> SUBQUERYS .) ]
  ! EXISTS          [ reduce using rule 18 (LISTAA -> SUBQUERYS .) ]
  ! ENTERO          [ reduce using rule 18 (LISTAA -> SUBQUERYS .) ]
  ! FLOTANTE        [ reduce using rule 18 (LISTAA -> SUBQUERYS .) ]
  ! CADENASIMPLE    [ reduce using rule 18 (LISTAA -> SUBQUERYS .) ]
  ! CADENADOBLE     [ reduce using rule 18 (LISTAA -> SUBQUERYS .) ]

    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 76
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 32

    (21) NOMBRE_T -> ID .
    (19) CAMPOS -> ID .
    (139) ATE_QUE -> ID .
    (60) NOMBRE_C -> ID .
    (61) CAMPOSC -> ID .

  ! reduce/reduce conflict for PARIZQ resolved using rule 19 (CAMPOS -> ID .)
  ! reduce/reduce conflict for PUNTO resolved using rule 21 (NOMBRE_T -> ID .)
    PUNTO           reduce using rule 21 (NOMBRE_T -> ID .)
    COMA            reduce using rule 19 (CAMPOS -> ID .)
    AS              reduce using rule 19 (CAMPOS -> ID .)
    ID              reduce using rule 19 (CAMPOS -> ID .)
    FROM            reduce using rule 19 (CAMPOS -> ID .)
    ASTERISCO       reduce using rule 19 (CAMPOS -> ID .)
    CASE            reduce using rule 19 (CAMPOS -> ID .)
    GREATEST        reduce using rule 19 (CAMPOS -> ID .)
    LEAST           reduce using rule 19 (CAMPOS -> ID .)
    PARIZQ          reduce using rule 19 (CAMPOS -> ID .)
    EXISTS          reduce using rule 19 (CAMPOS -> ID .)
    ENTERO          reduce using rule 19 (CAMPOS -> ID .)
    FLOTANTE        reduce using rule 19 (CAMPOS -> ID .)
    CADENASIMPLE    reduce using rule 19 (CAMPOS -> ID .)
    CADENADOBLE     reduce using rule 19 (CAMPOS -> ID .)
    IN              reduce using rule 61 (CAMPOSC -> ID .)
    NOT             reduce using rule 61 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 61 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 61 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)

  ! PARIZQ          [ reduce using rule 139 (ATE_QUE -> ID .) ]
  ! PUNTO           [ reduce using rule 60 (NOMBRE_C -> ID .) ]


state 33

    (20) CAMPOS -> ASTERISCO .

    COMA            reduce using rule 20 (CAMPOS -> ASTERISCO .)
    AS              reduce using rule 20 (CAMPOS -> ASTERISCO .)
    ID              reduce using rule 20 (CAMPOS -> ASTERISCO .)
    FROM            reduce using rule 20 (CAMPOS -> ASTERISCO .)
    ASTERISCO       reduce using rule 20 (CAMPOS -> ASTERISCO .)
    CASE            reduce using rule 20 (CAMPOS -> ASTERISCO .)
    GREATEST        reduce using rule 20 (CAMPOS -> ASTERISCO .)
    LEAST           reduce using rule 20 (CAMPOS -> ASTERISCO .)
    PARIZQ          reduce using rule 20 (CAMPOS -> ASTERISCO .)
    EXISTS          reduce using rule 20 (CAMPOS -> ASTERISCO .)
    ENTERO          reduce using rule 20 (CAMPOS -> ASTERISCO .)
    FLOTANTE        reduce using rule 20 (CAMPOS -> ASTERISCO .)
    CADENASIMPLE    reduce using rule 20 (CAMPOS -> ASTERISCO .)
    CADENADOBLE     reduce using rule 20 (CAMPOS -> ASTERISCO .)
    ASC             reduce using rule 20 (CAMPOS -> ASTERISCO .)
    DESC            reduce using rule 20 (CAMPOS -> ASTERISCO .)
    HAVING          reduce using rule 20 (CAMPOS -> ASTERISCO .)
    GROUP           reduce using rule 20 (CAMPOS -> ASTERISCO .)
    JOIN            reduce using rule 20 (CAMPOS -> ASTERISCO .)
    WHERE           reduce using rule 20 (CAMPOS -> ASTERISCO .)
    LIMIT           reduce using rule 20 (CAMPOS -> ASTERISCO .)
    OFFSET          reduce using rule 20 (CAMPOS -> ASTERISCO .)
    INNER           reduce using rule 20 (CAMPOS -> ASTERISCO .)
    LEFT            reduce using rule 20 (CAMPOS -> ASTERISCO .)
    RIGHT           reduce using rule 20 (CAMPOS -> ASTERISCO .)
    FULL            reduce using rule 20 (CAMPOS -> ASTERISCO .)
    PUNTOCOMA       reduce using rule 20 (CAMPOS -> ASTERISCO .)
    UNION           reduce using rule 20 (CAMPOS -> ASTERISCO .)
    INTERSECT       reduce using rule 20 (CAMPOS -> ASTERISCO .)
    EXCEPT          reduce using rule 20 (CAMPOS -> ASTERISCO .)
    PARDER          reduce using rule 20 (CAMPOS -> ASTERISCO .)


state 34

    (158) EXPRESIONES_C -> CASE . WHEN_LIST CUERPOO
    (165) WHEN_LIST -> . WHEN_LIST WHEN_UNI
    (166) WHEN_LIST -> . WHEN_UNI
    (167) WHEN_UNI -> . WHEN CONDICIONES THEN EXPRESIONNE
    (168) WHEN_UNI -> . WHEN CONDICIONES EXPRESIONNE THEN EXPRESIONNE
    (169) WHEN_UNI -> . WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE

    WHEN            shift and go to state 80

    WHEN_LIST                      shift and go to state 78
    WHEN_UNI                       shift and go to state 79

state 35

    (159) EXPRESIONES_C -> GREATEST . PARIZQ EXPRESIONNE PARDER

    PARIZQ          shift and go to state 81


state 36

    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 37

    (160) EXPRESIONES_C -> LEAST . PARIZQ EXPRESIONNE PARDER

    PARIZQ          shift and go to state 92


state 38

    (125) SUBQUERYS -> QUERY .

    PARIZQ          reduce using rule 125 (SUBQUERYS -> QUERY .)
    EXISTS          reduce using rule 125 (SUBQUERYS -> QUERY .)
    ID              reduce using rule 125 (SUBQUERYS -> QUERY .)
    ENTERO          reduce using rule 125 (SUBQUERYS -> QUERY .)
    FLOTANTE        reduce using rule 125 (SUBQUERYS -> QUERY .)
    CADENASIMPLE    reduce using rule 125 (SUBQUERYS -> QUERY .)
    CADENADOBLE     reduce using rule 125 (SUBQUERYS -> QUERY .)
    FROM            reduce using rule 125 (SUBQUERYS -> QUERY .)
    ASTERISCO       reduce using rule 125 (SUBQUERYS -> QUERY .)
    CASE            reduce using rule 125 (SUBQUERYS -> QUERY .)
    GREATEST        reduce using rule 125 (SUBQUERYS -> QUERY .)
    LEAST           reduce using rule 125 (SUBQUERYS -> QUERY .)
    IN              reduce using rule 125 (SUBQUERYS -> QUERY .)
    NOT             reduce using rule 125 (SUBQUERYS -> QUERY .)
    IGUAL           reduce using rule 125 (SUBQUERYS -> QUERY .)
    DIFERENTE       reduce using rule 125 (SUBQUERYS -> QUERY .)
    MAYOR           reduce using rule 125 (SUBQUERYS -> QUERY .)
    MENOR           reduce using rule 125 (SUBQUERYS -> QUERY .)
    MENORIGUAL      reduce using rule 125 (SUBQUERYS -> QUERY .)
    MAYORIGUAL      reduce using rule 125 (SUBQUERYS -> QUERY .)
    SET             reduce using rule 125 (SUBQUERYS -> QUERY .)
    DEFAULT         reduce using rule 125 (SUBQUERYS -> QUERY .)
    VALUES          reduce using rule 125 (SUBQUERYS -> QUERY .)
    WHERE           reduce using rule 125 (SUBQUERYS -> QUERY .)
    PUNTOCOMA       reduce using rule 125 (SUBQUERYS -> QUERY .)
    UNION           reduce using rule 125 (SUBQUERYS -> QUERY .)
    INTERSECT       reduce using rule 125 (SUBQUERYS -> QUERY .)
    EXCEPT          reduce using rule 125 (SUBQUERYS -> QUERY .)
    JOIN            reduce using rule 125 (SUBQUERYS -> QUERY .)
    GROUP           reduce using rule 125 (SUBQUERYS -> QUERY .)
    LIMIT           reduce using rule 125 (SUBQUERYS -> QUERY .)
    OFFSET          reduce using rule 125 (SUBQUERYS -> QUERY .)
    INNER           reduce using rule 125 (SUBQUERYS -> QUERY .)
    LEFT            reduce using rule 125 (SUBQUERYS -> QUERY .)
    RIGHT           reduce using rule 125 (SUBQUERYS -> QUERY .)
    FULL            reduce using rule 125 (SUBQUERYS -> QUERY .)
    AND             reduce using rule 125 (SUBQUERYS -> QUERY .)
    OR              reduce using rule 125 (SUBQUERYS -> QUERY .)
    THEN            reduce using rule 125 (SUBQUERYS -> QUERY .)
    PARDER          reduce using rule 125 (SUBQUERYS -> QUERY .)
    PUNTO           reduce using rule 125 (SUBQUERYS -> QUERY .)
    ELSE            reduce using rule 125 (SUBQUERYS -> QUERY .)
    END             reduce using rule 125 (SUBQUERYS -> QUERY .)
    WHEN            reduce using rule 125 (SUBQUERYS -> QUERY .)


state 39

    (126) QUERY -> ATE_QUE . PARIZQ QUE PARDER
    (127) QUERY -> ATE_QUE . PARIZQ QUE PARDER AS_NO

    PARIZQ          shift and go to state 93


state 40

    (136) ATE_QUE -> EXISTS .

    PARIZQ          reduce using rule 136 (ATE_QUE -> EXISTS .)


state 41

    (54) EXPRESIONNE -> NOMBRE_C . PUNTO CAMPOSC

    PUNTO           shift and go to state 94


state 42

    (55) EXPRESIONNE -> CAMPOSC .

    IN              reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    NOT             reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    IGUAL           reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    DIFERENTE       reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    MAYOR           reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    MENOR           reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    MENORIGUAL      reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    MAYORIGUAL      reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    AND             reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    OR              reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    THEN            reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    ID              reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    ENTERO          reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    FLOTANTE        reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    CADENASIMPLE    reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    CADENADOBLE     reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    PARIZQ          reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    EXISTS          reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    PARDER          reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    ELSE            reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    PUNTOCOMA       reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    UNION           reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    INTERSECT       reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    EXCEPT          reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    JOIN            reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    WHERE           reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    INNER           reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    LEFT            reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    RIGHT           reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    FULL            reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    GROUP           reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    LIMIT           reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    OFFSET          reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    END             reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)
    WHEN            reduce using rule 55 (EXPRESIONNE -> CAMPOSC .)


state 43

    (62) CAMPOSC -> ENTERO .

    IN              reduce using rule 62 (CAMPOSC -> ENTERO .)
    NOT             reduce using rule 62 (CAMPOSC -> ENTERO .)
    IGUAL           reduce using rule 62 (CAMPOSC -> ENTERO .)
    DIFERENTE       reduce using rule 62 (CAMPOSC -> ENTERO .)
    MAYOR           reduce using rule 62 (CAMPOSC -> ENTERO .)
    MENOR           reduce using rule 62 (CAMPOSC -> ENTERO .)
    MENORIGUAL      reduce using rule 62 (CAMPOSC -> ENTERO .)
    MAYORIGUAL      reduce using rule 62 (CAMPOSC -> ENTERO .)
    AND             reduce using rule 62 (CAMPOSC -> ENTERO .)
    OR              reduce using rule 62 (CAMPOSC -> ENTERO .)
    THEN            reduce using rule 62 (CAMPOSC -> ENTERO .)
    ID              reduce using rule 62 (CAMPOSC -> ENTERO .)
    ENTERO          reduce using rule 62 (CAMPOSC -> ENTERO .)
    FLOTANTE        reduce using rule 62 (CAMPOSC -> ENTERO .)
    CADENASIMPLE    reduce using rule 62 (CAMPOSC -> ENTERO .)
    CADENADOBLE     reduce using rule 62 (CAMPOSC -> ENTERO .)
    PARIZQ          reduce using rule 62 (CAMPOSC -> ENTERO .)
    EXISTS          reduce using rule 62 (CAMPOSC -> ENTERO .)
    PARDER          reduce using rule 62 (CAMPOSC -> ENTERO .)
    ELSE            reduce using rule 62 (CAMPOSC -> ENTERO .)
    PUNTOCOMA       reduce using rule 62 (CAMPOSC -> ENTERO .)
    UNION           reduce using rule 62 (CAMPOSC -> ENTERO .)
    INTERSECT       reduce using rule 62 (CAMPOSC -> ENTERO .)
    EXCEPT          reduce using rule 62 (CAMPOSC -> ENTERO .)
    JOIN            reduce using rule 62 (CAMPOSC -> ENTERO .)
    WHERE           reduce using rule 62 (CAMPOSC -> ENTERO .)
    INNER           reduce using rule 62 (CAMPOSC -> ENTERO .)
    LEFT            reduce using rule 62 (CAMPOSC -> ENTERO .)
    RIGHT           reduce using rule 62 (CAMPOSC -> ENTERO .)
    FULL            reduce using rule 62 (CAMPOSC -> ENTERO .)
    GROUP           reduce using rule 62 (CAMPOSC -> ENTERO .)
    LIMIT           reduce using rule 62 (CAMPOSC -> ENTERO .)
    OFFSET          reduce using rule 62 (CAMPOSC -> ENTERO .)
    END             reduce using rule 62 (CAMPOSC -> ENTERO .)
    WHEN            reduce using rule 62 (CAMPOSC -> ENTERO .)


state 44

    (63) CAMPOSC -> FLOTANTE .

    IN              reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    NOT             reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    IGUAL           reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    DIFERENTE       reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    MAYOR           reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    MENOR           reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    MENORIGUAL      reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    AND             reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    OR              reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    THEN            reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    ID              reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    ENTERO          reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    FLOTANTE        reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    CADENASIMPLE    reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    CADENADOBLE     reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    PARIZQ          reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    EXISTS          reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    PARDER          reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    ELSE            reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    UNION           reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    INTERSECT       reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    EXCEPT          reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    JOIN            reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    WHERE           reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    INNER           reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    LEFT            reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    RIGHT           reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    FULL            reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    GROUP           reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    LIMIT           reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    OFFSET          reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    END             reduce using rule 63 (CAMPOSC -> FLOTANTE .)
    WHEN            reduce using rule 63 (CAMPOSC -> FLOTANTE .)


state 45

    (65) CAMPOSC -> CADENADOBLE .

    IN              reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    NOT             reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    IGUAL           reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    DIFERENTE       reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    MAYOR           reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    MENOR           reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    MENORIGUAL      reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    MAYORIGUAL      reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    AND             reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    OR              reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    THEN            reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    ID              reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    ENTERO          reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    FLOTANTE        reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    CADENASIMPLE    reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    CADENADOBLE     reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    PARIZQ          reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    EXISTS          reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    PARDER          reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    ELSE            reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    PUNTOCOMA       reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    UNION           reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    INTERSECT       reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    EXCEPT          reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    JOIN            reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    WHERE           reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    INNER           reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    LEFT            reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    RIGHT           reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    FULL            reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    GROUP           reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    LIMIT           reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    OFFSET          reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    END             reduce using rule 65 (CAMPOSC -> CADENADOBLE .)
    WHEN            reduce using rule 65 (CAMPOSC -> CADENADOBLE .)


state 46

    (170) DML_COMANDOS -> CREATE TABLE . ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (171) DML_COMANDOS -> CREATE TABLE . ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA

    ID              shift and go to state 95


state 47

    (259) CREATE_DATABASE -> CREATE REPLACE_OP . DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE

    DATABASE        shift and go to state 96


state 48

    (260) REPLACE_OP -> OR . REPLACE

    REPLACE         shift and go to state 97


state 49

    (223) DML_COMANDOS -> INSERT INTO . NOMBRES_TABLAS DATOS PUNTOCOMA
    (224) DML_COMANDOS -> INSERT INTO . NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    NOMBRES_TABLAS                 shift and go to state 98
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 50

    (235) DML_COMANDOS -> UPDATE NOMBRES_TABLAS . SET CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (236) DML_COMANDOS -> UPDATE NOMBRES_TABLAS . SET CAMPOSN PUNTOCOMA
    (29) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    SET             shift and go to state 99
    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    TABLA                          shift and go to state 100
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 51

    (30) NOMBRES_TABLAS -> TABLA .

    SET             reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    ID              reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    PARIZQ          reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    EXISTS          reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    ENTERO          reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    FLOTANTE        reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    CADENASIMPLE    reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    CADENADOBLE     reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    DEFAULT         reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    VALUES          reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    WHERE           reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    PUNTOCOMA       reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    UNION           reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    INTERSECT       reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    EXCEPT          reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    JOIN            reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    GROUP           reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    LIMIT           reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    OFFSET          reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    INNER           reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    LEFT            reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    RIGHT           reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    FULL            reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    PUNTO           reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)
    PARDER          reduce using rule 30 (NOMBRES_TABLAS -> TABLA .)


state 52

    (31) TABLA -> NOMBRE_T .
    (32) TABLA -> NOMBRE_T . S1
    (34) S1 -> . COMA TABLA
    (35) S1 -> . AS ALIAS
    (36) S1 -> . ALIAS COMA TABLA
    (37) S1 -> . ALIAS
    (22) ALIAS -> . ID

  ! shift/reduce conflict for ID resolved as shift
    SET             reduce using rule 31 (TABLA -> NOMBRE_T .)
    PARIZQ          reduce using rule 31 (TABLA -> NOMBRE_T .)
    EXISTS          reduce using rule 31 (TABLA -> NOMBRE_T .)
    ENTERO          reduce using rule 31 (TABLA -> NOMBRE_T .)
    FLOTANTE        reduce using rule 31 (TABLA -> NOMBRE_T .)
    CADENASIMPLE    reduce using rule 31 (TABLA -> NOMBRE_T .)
    CADENADOBLE     reduce using rule 31 (TABLA -> NOMBRE_T .)
    DEFAULT         reduce using rule 31 (TABLA -> NOMBRE_T .)
    VALUES          reduce using rule 31 (TABLA -> NOMBRE_T .)
    WHERE           reduce using rule 31 (TABLA -> NOMBRE_T .)
    PUNTOCOMA       reduce using rule 31 (TABLA -> NOMBRE_T .)
    UNION           reduce using rule 31 (TABLA -> NOMBRE_T .)
    INTERSECT       reduce using rule 31 (TABLA -> NOMBRE_T .)
    EXCEPT          reduce using rule 31 (TABLA -> NOMBRE_T .)
    JOIN            reduce using rule 31 (TABLA -> NOMBRE_T .)
    GROUP           reduce using rule 31 (TABLA -> NOMBRE_T .)
    LIMIT           reduce using rule 31 (TABLA -> NOMBRE_T .)
    OFFSET          reduce using rule 31 (TABLA -> NOMBRE_T .)
    INNER           reduce using rule 31 (TABLA -> NOMBRE_T .)
    LEFT            reduce using rule 31 (TABLA -> NOMBRE_T .)
    RIGHT           reduce using rule 31 (TABLA -> NOMBRE_T .)
    FULL            reduce using rule 31 (TABLA -> NOMBRE_T .)
    PUNTO           reduce using rule 31 (TABLA -> NOMBRE_T .)
    PARDER          reduce using rule 31 (TABLA -> NOMBRE_T .)
    COMA            shift and go to state 102
    AS              shift and go to state 103
    ID              shift and go to state 74

  ! ID              [ reduce using rule 31 (TABLA -> NOMBRE_T .) ]

    S1                             shift and go to state 101
    ALIAS                          shift and go to state 104

state 53

    (33) TABLA -> SUBQUERYS .
    (124) SUBQUERYS -> SUBQUERYS . QUERY
    (56) EXPRESIONNE -> SUBQUERYS .
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY

  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for EXISTS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CADENASIMPLE resolved as shift
  ! shift/reduce conflict for CADENADOBLE resolved as shift
    SET             reduce using rule 33 (TABLA -> SUBQUERYS .)
    DEFAULT         reduce using rule 33 (TABLA -> SUBQUERYS .)
    VALUES          reduce using rule 33 (TABLA -> SUBQUERYS .)
    WHERE           reduce using rule 33 (TABLA -> SUBQUERYS .)
    PUNTOCOMA       reduce using rule 33 (TABLA -> SUBQUERYS .)
    UNION           reduce using rule 33 (TABLA -> SUBQUERYS .)
    INTERSECT       reduce using rule 33 (TABLA -> SUBQUERYS .)
    EXCEPT          reduce using rule 33 (TABLA -> SUBQUERYS .)
    JOIN            reduce using rule 33 (TABLA -> SUBQUERYS .)
    GROUP           reduce using rule 33 (TABLA -> SUBQUERYS .)
    LIMIT           reduce using rule 33 (TABLA -> SUBQUERYS .)
    OFFSET          reduce using rule 33 (TABLA -> SUBQUERYS .)
    INNER           reduce using rule 33 (TABLA -> SUBQUERYS .)
    LEFT            reduce using rule 33 (TABLA -> SUBQUERYS .)
    RIGHT           reduce using rule 33 (TABLA -> SUBQUERYS .)
    FULL            reduce using rule 33 (TABLA -> SUBQUERYS .)
    PUNTO           reduce using rule 33 (TABLA -> SUBQUERYS .)
    PARDER          reduce using rule 33 (TABLA -> SUBQUERYS .)
    IN              reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    NOT             reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    IGUAL           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    DIFERENTE       reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MAYOR           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MENOR           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MENORIGUAL      reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MAYORIGUAL      reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ID              shift and go to state 77
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

  ! ID              [ reduce using rule 33 (TABLA -> SUBQUERYS .) ]
  ! PARIZQ          [ reduce using rule 33 (TABLA -> SUBQUERYS .) ]
  ! EXISTS          [ reduce using rule 33 (TABLA -> SUBQUERYS .) ]
  ! ENTERO          [ reduce using rule 33 (TABLA -> SUBQUERYS .) ]
  ! FLOTANTE        [ reduce using rule 33 (TABLA -> SUBQUERYS .) ]
  ! CADENASIMPLE    [ reduce using rule 33 (TABLA -> SUBQUERYS .) ]
  ! CADENADOBLE     [ reduce using rule 33 (TABLA -> SUBQUERYS .) ]

    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 76
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 54

    (21) NOMBRE_T -> ID .
    (139) ATE_QUE -> ID .
    (60) NOMBRE_C -> ID .
    (61) CAMPOSC -> ID .

  ! reduce/reduce conflict for PARIZQ resolved using rule 21 (NOMBRE_T -> ID .)
  ! reduce/reduce conflict for PUNTO resolved using rule 21 (NOMBRE_T -> ID .)
    COMA            reduce using rule 21 (NOMBRE_T -> ID .)
    AS              reduce using rule 21 (NOMBRE_T -> ID .)
    ID              reduce using rule 21 (NOMBRE_T -> ID .)
    SET             reduce using rule 21 (NOMBRE_T -> ID .)
    PARIZQ          reduce using rule 21 (NOMBRE_T -> ID .)
    EXISTS          reduce using rule 21 (NOMBRE_T -> ID .)
    ENTERO          reduce using rule 21 (NOMBRE_T -> ID .)
    FLOTANTE        reduce using rule 21 (NOMBRE_T -> ID .)
    CADENASIMPLE    reduce using rule 21 (NOMBRE_T -> ID .)
    CADENADOBLE     reduce using rule 21 (NOMBRE_T -> ID .)
    DEFAULT         reduce using rule 21 (NOMBRE_T -> ID .)
    VALUES          reduce using rule 21 (NOMBRE_T -> ID .)
    WHERE           reduce using rule 21 (NOMBRE_T -> ID .)
    PUNTOCOMA       reduce using rule 21 (NOMBRE_T -> ID .)
    UNION           reduce using rule 21 (NOMBRE_T -> ID .)
    INTERSECT       reduce using rule 21 (NOMBRE_T -> ID .)
    EXCEPT          reduce using rule 21 (NOMBRE_T -> ID .)
    JOIN            reduce using rule 21 (NOMBRE_T -> ID .)
    GROUP           reduce using rule 21 (NOMBRE_T -> ID .)
    LIMIT           reduce using rule 21 (NOMBRE_T -> ID .)
    OFFSET          reduce using rule 21 (NOMBRE_T -> ID .)
    INNER           reduce using rule 21 (NOMBRE_T -> ID .)
    LEFT            reduce using rule 21 (NOMBRE_T -> ID .)
    RIGHT           reduce using rule 21 (NOMBRE_T -> ID .)
    FULL            reduce using rule 21 (NOMBRE_T -> ID .)
    PUNTO           reduce using rule 21 (NOMBRE_T -> ID .)
    PARDER          reduce using rule 21 (NOMBRE_T -> ID .)
    IN              reduce using rule 61 (CAMPOSC -> ID .)
    NOT             reduce using rule 61 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 61 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 61 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)

  ! PARIZQ          [ reduce using rule 139 (ATE_QUE -> ID .) ]
  ! PUNTO           [ reduce using rule 60 (NOMBRE_C -> ID .) ]


state 55

    (244) DML_COMANDOS -> DELETE FROM . NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA
    (245) DML_COMANDOS -> DELETE FROM . NOMBRES_TABLAS PUNTOCOMA
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    NOMBRES_TABLAS                 shift and go to state 105
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 56

    (246) DML_COMANDOS -> DROP TABLE . ID PUNTOCOMA

    ID              shift and go to state 106


state 57

    (278) DROP_DATABASE -> DROP DATABASE . IF_EXISTS_DATABASE ID
    (279) IF_EXISTS_DATABASE -> . IF EXISTS
    (280) IF_EXISTS_DATABASE -> .

    IF              shift and go to state 108
    ID              reduce using rule 280 (IF_EXISTS_DATABASE -> .)

    IF_EXISTS_DATABASE             shift and go to state 107

state 58

    (247) DML_COMANDOS -> ALTER TABLE . ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (248) DML_COMANDOS -> ALTER TABLE . ID DROP COLUMN CAMPOSC PUNTOCOMA
    (249) DML_COMANDOS -> ALTER TABLE . ID RENAME COLUMN ID TO ID PUNTOCOMA
    (250) DML_COMANDOS -> ALTER TABLE . ID DROP CONSTRAINT ID PUNTOCOMA
    (251) DML_COMANDOS -> ALTER TABLE . ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (252) DML_COMANDOS -> ALTER TABLE . ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (253) DML_COMANDOS -> ALTER TABLE . ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA

    ID              shift and go to state 109


state 59

    (271) ALTER_DATABASE -> ALTER DATABASE . ID ALTER_DATABASE_OP

    ID              shift and go to state 110


state 60

    (268) SHOW_DATABASES -> SHOW DATABASES . SHOW_DATABASES_LIKE
    (269) SHOW_DATABASES_LIKE -> . LIKE CADENADOBLE
    (270) SHOW_DATABASES_LIKE -> .

    LIKE            shift and go to state 112
    SELECT          reduce using rule 270 (SHOW_DATABASES_LIKE -> .)
    CREATE          reduce using rule 270 (SHOW_DATABASES_LIKE -> .)
    INSERT          reduce using rule 270 (SHOW_DATABASES_LIKE -> .)
    UPDATE          reduce using rule 270 (SHOW_DATABASES_LIKE -> .)
    DELETE          reduce using rule 270 (SHOW_DATABASES_LIKE -> .)
    DROP            reduce using rule 270 (SHOW_DATABASES_LIKE -> .)
    ALTER           reduce using rule 270 (SHOW_DATABASES_LIKE -> .)
    SHOW            reduce using rule 270 (SHOW_DATABASES_LIKE -> .)
    $end            reduce using rule 270 (SHOW_DATABASES_LIKE -> .)

    SHOW_DATABASES_LIKE            shift and go to state 111

state 61

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM . NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM . NOMBRES_TABLAS UNIONS
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    NOMBRES_TABLAS                 shift and go to state 113
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 62

    (11) LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .

    FROM            reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    ID              reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    ASTERISCO       reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    CASE            reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    GREATEST        reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    LEAST           reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    PARIZQ          reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    EXISTS          reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    ENTERO          reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    FLOTANTE        reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    CADENASIMPLE    reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)
    CADENADOBLE     reduce using rule 11 (LISTA_CAMPOS -> LISTA_CAMPOS LISTAA .)


state 63

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS . FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS . FROM NOMBRES_TABLAS UNIONS
    (11) LISTA_CAMPOS -> LISTA_CAMPOS . LISTAA
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    FROM            shift and go to state 114
    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTAA                         shift and go to state 62
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 64

    (281) DQL_COMANDOS -> SELECT EXTRACT PARIZQ . TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (282) TIPO_TIEMPO -> . YEAR
    (283) TIPO_TIEMPO -> . HOUR
    (284) TIPO_TIEMPO -> . MINUTE
    (285) TIPO_TIEMPO -> . SECOND

    YEAR            shift and go to state 116
    HOUR            shift and go to state 117
    MINUTE          shift and go to state 118
    SECOND          shift and go to state 119

    TIPO_TIEMPO                    shift and go to state 115

state 65

    (128) QUERY -> PARIZQ QUE . PARDER
    (129) QUERY -> PARIZQ QUE . PARDER AS_NO

    PARDER          shift and go to state 120


state 66

    (145) QUE -> QUE_SUBS .

    PARDER          reduce using rule 145 (QUE -> QUE_SUBS .)


state 67

    (146) QUE_SUBS -> SELECT . LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
    (147) QUE_SUBS -> SELECT . LISTA_CAMPOS FROM NOMBRES_TABLAS
    (148) QUE_SUBS -> SELECT . DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
    (149) QUE_SUBS -> SELECT . DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS
    (11) LISTA_CAMPOS -> . LISTA_CAMPOS LISTAA
    (12) LISTA_CAMPOS -> . LISTAA
    (28) DISTINCTNT -> . DISTINCT
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    DISTINCT        shift and go to state 27
    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTA_CAMPOS                   shift and go to state 121
    DISTINCTNT                     shift and go to state 122
    LISTAA                         shift and go to state 26
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 68

    (286) DQL_COMANDOS -> SELECT DATE_PART PARIZQ . CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    CADENASIMPLE    shift and go to state 123


state 69

    (13) LISTAA -> NOMBRE_T PUNTO . CAMPOS S
    (14) LISTAA -> NOMBRE_T PUNTO . CAMPOS
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO

    ID              shift and go to state 125
    ASTERISCO       shift and go to state 33

    CAMPOS                         shift and go to state 124

state 70

    (15) LISTAA -> CAMPOS S .

    FROM            reduce using rule 15 (LISTAA -> CAMPOS S .)
    ID              reduce using rule 15 (LISTAA -> CAMPOS S .)
    ASTERISCO       reduce using rule 15 (LISTAA -> CAMPOS S .)
    CASE            reduce using rule 15 (LISTAA -> CAMPOS S .)
    GREATEST        reduce using rule 15 (LISTAA -> CAMPOS S .)
    LEAST           reduce using rule 15 (LISTAA -> CAMPOS S .)
    PARIZQ          reduce using rule 15 (LISTAA -> CAMPOS S .)
    EXISTS          reduce using rule 15 (LISTAA -> CAMPOS S .)
    ENTERO          reduce using rule 15 (LISTAA -> CAMPOS S .)
    FLOTANTE        reduce using rule 15 (LISTAA -> CAMPOS S .)
    CADENASIMPLE    reduce using rule 15 (LISTAA -> CAMPOS S .)
    CADENADOBLE     reduce using rule 15 (LISTAA -> CAMPOS S .)


state 71

    (23) S -> COMA . LISTAA
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTAA                         shift and go to state 126
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 72

    (24) S -> AS . ALIAS
    (25) S -> AS . ALIAS COMA LISTAA
    (22) ALIAS -> . ID

    ID              shift and go to state 74

    ALIAS                          shift and go to state 127

state 73

    (26) S -> ALIAS . COMA LISTAA
    (27) S -> ALIAS .

    COMA            shift and go to state 128
    FROM            reduce using rule 27 (S -> ALIAS .)
    ID              reduce using rule 27 (S -> ALIAS .)
    ASTERISCO       reduce using rule 27 (S -> ALIAS .)
    CASE            reduce using rule 27 (S -> ALIAS .)
    GREATEST        reduce using rule 27 (S -> ALIAS .)
    LEAST           reduce using rule 27 (S -> ALIAS .)
    PARIZQ          reduce using rule 27 (S -> ALIAS .)
    EXISTS          reduce using rule 27 (S -> ALIAS .)
    ENTERO          reduce using rule 27 (S -> ALIAS .)
    FLOTANTE        reduce using rule 27 (S -> ALIAS .)
    CADENASIMPLE    reduce using rule 27 (S -> ALIAS .)
    CADENADOBLE     reduce using rule 27 (S -> ALIAS .)


state 74

    (22) ALIAS -> ID .

    COMA            reduce using rule 22 (ALIAS -> ID .)
    FROM            reduce using rule 22 (ALIAS -> ID .)
    ID              reduce using rule 22 (ALIAS -> ID .)
    ASTERISCO       reduce using rule 22 (ALIAS -> ID .)
    CASE            reduce using rule 22 (ALIAS -> ID .)
    GREATEST        reduce using rule 22 (ALIAS -> ID .)
    LEAST           reduce using rule 22 (ALIAS -> ID .)
    PARIZQ          reduce using rule 22 (ALIAS -> ID .)
    EXISTS          reduce using rule 22 (ALIAS -> ID .)
    ENTERO          reduce using rule 22 (ALIAS -> ID .)
    FLOTANTE        reduce using rule 22 (ALIAS -> ID .)
    CADENASIMPLE    reduce using rule 22 (ALIAS -> ID .)
    CADENADOBLE     reduce using rule 22 (ALIAS -> ID .)
    SET             reduce using rule 22 (ALIAS -> ID .)
    DEFAULT         reduce using rule 22 (ALIAS -> ID .)
    VALUES          reduce using rule 22 (ALIAS -> ID .)
    WHERE           reduce using rule 22 (ALIAS -> ID .)
    PUNTOCOMA       reduce using rule 22 (ALIAS -> ID .)
    UNION           reduce using rule 22 (ALIAS -> ID .)
    INTERSECT       reduce using rule 22 (ALIAS -> ID .)
    EXCEPT          reduce using rule 22 (ALIAS -> ID .)
    JOIN            reduce using rule 22 (ALIAS -> ID .)
    GROUP           reduce using rule 22 (ALIAS -> ID .)
    LIMIT           reduce using rule 22 (ALIAS -> ID .)
    OFFSET          reduce using rule 22 (ALIAS -> ID .)
    INNER           reduce using rule 22 (ALIAS -> ID .)
    LEFT            reduce using rule 22 (ALIAS -> ID .)
    RIGHT           reduce using rule 22 (ALIAS -> ID .)
    FULL            reduce using rule 22 (ALIAS -> ID .)
    PUNTO           reduce using rule 22 (ALIAS -> ID .)
    PARDER          reduce using rule 22 (ALIAS -> ID .)
    ASC             reduce using rule 22 (ALIAS -> ID .)
    DESC            reduce using rule 22 (ALIAS -> ID .)
    HAVING          reduce using rule 22 (ALIAS -> ID .)


state 75

    (56) EXPRESIONNE -> SUBQUERYS .
    (124) SUBQUERYS -> SUBQUERYS . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY

  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for EXISTS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CADENASIMPLE resolved as shift
  ! shift/reduce conflict for CADENADOBLE resolved as shift
    IN              reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    NOT             reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    IGUAL           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    DIFERENTE       reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MAYOR           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MENOR           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MENORIGUAL      reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    MAYORIGUAL      reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    AND             reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    OR              reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    THEN            reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    PARDER          reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    ELSE            reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    PUNTOCOMA       reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    UNION           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    INTERSECT       reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    EXCEPT          reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    JOIN            reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    WHERE           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    INNER           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    LEFT            reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    RIGHT           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    FULL            reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    GROUP           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    LIMIT           reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    OFFSET          reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    END             reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    WHEN            reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .)
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ID              shift and go to state 77
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

  ! ID              [ reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .) ]
  ! ENTERO          [ reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .) ]
  ! FLOTANTE        [ reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .) ]
  ! CADENASIMPLE    [ reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .) ]
  ! CADENADOBLE     [ reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .) ]
  ! PARIZQ          [ reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .) ]
  ! EXISTS          [ reduce using rule 56 (EXPRESIONNE -> SUBQUERYS .) ]

    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 76
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 76

    (124) SUBQUERYS -> SUBQUERYS QUERY .
    (125) SUBQUERYS -> QUERY .

  ! reduce/reduce conflict for PARIZQ resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for EXISTS resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for ID resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for ENTERO resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for CADENASIMPLE resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for CADENADOBLE resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for IN resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for NOT resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for IGUAL resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for MAYOR resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for MENOR resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    PARIZQ          reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    EXISTS          reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    ID              reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    ENTERO          reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    FLOTANTE        reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    CADENASIMPLE    reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    CADENADOBLE     reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    FROM            reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    ASTERISCO       reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    CASE            reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    GREATEST        reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    LEAST           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    IN              reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    NOT             reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    IGUAL           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    DIFERENTE       reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    MAYOR           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    MENOR           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    MENORIGUAL      reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    MAYORIGUAL      reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    SET             reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    DEFAULT         reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    VALUES          reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    WHERE           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    PUNTOCOMA       reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    UNION           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    INTERSECT       reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    EXCEPT          reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    JOIN            reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    GROUP           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    LIMIT           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    OFFSET          reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    INNER           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    LEFT            reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    RIGHT           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    FULL            reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    AND             reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    OR              reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    THEN            reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    PARDER          reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    PUNTO           reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    ELSE            reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    END             reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)
    WHEN            reduce using rule 124 (SUBQUERYS -> SUBQUERYS QUERY .)

  ! PARIZQ          [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! EXISTS          [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! ID              [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! ENTERO          [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! FLOTANTE        [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! CADENASIMPLE    [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! CADENADOBLE     [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! IN              [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! NOT             [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! IGUAL           [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! DIFERENTE       [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! MAYOR           [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! MENOR           [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! MENORIGUAL      [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]
  ! MAYORIGUAL      [ reduce using rule 125 (SUBQUERYS -> QUERY .) ]


state 77

    (139) ATE_QUE -> ID .
    (60) NOMBRE_C -> ID .
    (61) CAMPOSC -> ID .

    PARIZQ          reduce using rule 139 (ATE_QUE -> ID .)
    PUNTO           reduce using rule 60 (NOMBRE_C -> ID .)
    IN              reduce using rule 61 (CAMPOSC -> ID .)
    NOT             reduce using rule 61 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 61 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 61 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)


state 78

    (158) EXPRESIONES_C -> CASE WHEN_LIST . CUERPOO
    (165) WHEN_LIST -> WHEN_LIST . WHEN_UNI
    (161) CUERPOO -> . WHEN CONDICIONES EXPRESIONNE END
    (162) CUERPOO -> . WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END
    (163) CUERPOO -> . END
    (164) CUERPOO -> . END ID
    (167) WHEN_UNI -> . WHEN CONDICIONES THEN EXPRESIONNE
    (168) WHEN_UNI -> . WHEN CONDICIONES EXPRESIONNE THEN EXPRESIONNE
    (169) WHEN_UNI -> . WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE

    WHEN            shift and go to state 131
    END             shift and go to state 132

    CUERPOO                        shift and go to state 129
    WHEN_UNI                       shift and go to state 130

state 79

    (166) WHEN_LIST -> WHEN_UNI .

    WHEN            reduce using rule 166 (WHEN_LIST -> WHEN_UNI .)
    END             reduce using rule 166 (WHEN_LIST -> WHEN_UNI .)


state 80

    (167) WHEN_UNI -> WHEN . CONDICIONES THEN EXPRESIONNE
    (168) WHEN_UNI -> WHEN . CONDICIONES EXPRESIONNE THEN EXPRESIONNE
    (169) WHEN_UNI -> WHEN . CONDICIONES EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 133
    EXPRESIONNE                    shift and go to state 134
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 81

    (159) EXPRESIONES_C -> GREATEST PARIZQ . EXPRESIONNE PARDER
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 140
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 82

    (137) ATE_QUE -> EXPRESIONNE OPCIONALESS .

    PARIZQ          reduce using rule 137 (ATE_QUE -> EXPRESIONNE OPCIONALESS .)


state 83

    (138) ATE_QUE -> EXPRESIONNE OPERADOR . OPCIONALESS2
    (142) OPCIONALESS2 -> . ANY
    (143) OPCIONALESS2 -> . ALL
    (144) OPCIONALESS2 -> . SOME

    ANY             shift and go to state 142
    ALL             shift and go to state 143
    SOME            shift and go to state 144

    OPCIONALESS2                   shift and go to state 141

state 84

    (140) OPCIONALESS -> IN .

    PARIZQ          reduce using rule 140 (OPCIONALESS -> IN .)


state 85

    (141) OPCIONALESS -> NOT . IN

    IN              shift and go to state 145


state 86

    (66) OPERADOR -> IGUAL .

    ANY             reduce using rule 66 (OPERADOR -> IGUAL .)
    ALL             reduce using rule 66 (OPERADOR -> IGUAL .)
    SOME            reduce using rule 66 (OPERADOR -> IGUAL .)
    ID              reduce using rule 66 (OPERADOR -> IGUAL .)
    ENTERO          reduce using rule 66 (OPERADOR -> IGUAL .)
    FLOTANTE        reduce using rule 66 (OPERADOR -> IGUAL .)
    CADENASIMPLE    reduce using rule 66 (OPERADOR -> IGUAL .)
    CADENADOBLE     reduce using rule 66 (OPERADOR -> IGUAL .)
    PARIZQ          reduce using rule 66 (OPERADOR -> IGUAL .)
    EXISTS          reduce using rule 66 (OPERADOR -> IGUAL .)


state 87

    (67) OPERADOR -> DIFERENTE .

    ANY             reduce using rule 67 (OPERADOR -> DIFERENTE .)
    ALL             reduce using rule 67 (OPERADOR -> DIFERENTE .)
    SOME            reduce using rule 67 (OPERADOR -> DIFERENTE .)
    ID              reduce using rule 67 (OPERADOR -> DIFERENTE .)
    ENTERO          reduce using rule 67 (OPERADOR -> DIFERENTE .)
    FLOTANTE        reduce using rule 67 (OPERADOR -> DIFERENTE .)
    CADENASIMPLE    reduce using rule 67 (OPERADOR -> DIFERENTE .)
    CADENADOBLE     reduce using rule 67 (OPERADOR -> DIFERENTE .)
    PARIZQ          reduce using rule 67 (OPERADOR -> DIFERENTE .)
    EXISTS          reduce using rule 67 (OPERADOR -> DIFERENTE .)


state 88

    (68) OPERADOR -> MAYOR .

    ANY             reduce using rule 68 (OPERADOR -> MAYOR .)
    ALL             reduce using rule 68 (OPERADOR -> MAYOR .)
    SOME            reduce using rule 68 (OPERADOR -> MAYOR .)
    ID              reduce using rule 68 (OPERADOR -> MAYOR .)
    ENTERO          reduce using rule 68 (OPERADOR -> MAYOR .)
    FLOTANTE        reduce using rule 68 (OPERADOR -> MAYOR .)
    CADENASIMPLE    reduce using rule 68 (OPERADOR -> MAYOR .)
    CADENADOBLE     reduce using rule 68 (OPERADOR -> MAYOR .)
    PARIZQ          reduce using rule 68 (OPERADOR -> MAYOR .)
    EXISTS          reduce using rule 68 (OPERADOR -> MAYOR .)


state 89

    (69) OPERADOR -> MENOR .

    ANY             reduce using rule 69 (OPERADOR -> MENOR .)
    ALL             reduce using rule 69 (OPERADOR -> MENOR .)
    SOME            reduce using rule 69 (OPERADOR -> MENOR .)
    ID              reduce using rule 69 (OPERADOR -> MENOR .)
    ENTERO          reduce using rule 69 (OPERADOR -> MENOR .)
    FLOTANTE        reduce using rule 69 (OPERADOR -> MENOR .)
    CADENASIMPLE    reduce using rule 69 (OPERADOR -> MENOR .)
    CADENADOBLE     reduce using rule 69 (OPERADOR -> MENOR .)
    PARIZQ          reduce using rule 69 (OPERADOR -> MENOR .)
    EXISTS          reduce using rule 69 (OPERADOR -> MENOR .)


state 90

    (70) OPERADOR -> MENORIGUAL .

    ANY             reduce using rule 70 (OPERADOR -> MENORIGUAL .)
    ALL             reduce using rule 70 (OPERADOR -> MENORIGUAL .)
    SOME            reduce using rule 70 (OPERADOR -> MENORIGUAL .)
    ID              reduce using rule 70 (OPERADOR -> MENORIGUAL .)
    ENTERO          reduce using rule 70 (OPERADOR -> MENORIGUAL .)
    FLOTANTE        reduce using rule 70 (OPERADOR -> MENORIGUAL .)
    CADENASIMPLE    reduce using rule 70 (OPERADOR -> MENORIGUAL .)
    CADENADOBLE     reduce using rule 70 (OPERADOR -> MENORIGUAL .)
    PARIZQ          reduce using rule 70 (OPERADOR -> MENORIGUAL .)
    EXISTS          reduce using rule 70 (OPERADOR -> MENORIGUAL .)


state 91

    (71) OPERADOR -> MAYORIGUAL .

    ANY             reduce using rule 71 (OPERADOR -> MAYORIGUAL .)
    ALL             reduce using rule 71 (OPERADOR -> MAYORIGUAL .)
    SOME            reduce using rule 71 (OPERADOR -> MAYORIGUAL .)
    ID              reduce using rule 71 (OPERADOR -> MAYORIGUAL .)
    ENTERO          reduce using rule 71 (OPERADOR -> MAYORIGUAL .)
    FLOTANTE        reduce using rule 71 (OPERADOR -> MAYORIGUAL .)
    CADENASIMPLE    reduce using rule 71 (OPERADOR -> MAYORIGUAL .)
    CADENADOBLE     reduce using rule 71 (OPERADOR -> MAYORIGUAL .)
    PARIZQ          reduce using rule 71 (OPERADOR -> MAYORIGUAL .)
    EXISTS          reduce using rule 71 (OPERADOR -> MAYORIGUAL .)


state 92

    (160) EXPRESIONES_C -> LEAST PARIZQ . EXPRESIONNE PARDER
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 146
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 93

    (126) QUERY -> ATE_QUE PARIZQ . QUE PARDER
    (127) QUERY -> ATE_QUE PARIZQ . QUE PARDER AS_NO
    (145) QUE -> . QUE_SUBS
    (146) QUE_SUBS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
    (147) QUE_SUBS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS
    (148) QUE_SUBS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
    (149) QUE_SUBS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS

    SELECT          shift and go to state 67

    QUE                            shift and go to state 147
    QUE_SUBS                       shift and go to state 66

state 94

    (54) EXPRESIONNE -> NOMBRE_C PUNTO . CAMPOSC
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 149
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    CAMPOSC                        shift and go to state 148

state 95

    (170) DML_COMANDOS -> CREATE TABLE ID . PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (171) DML_COMANDOS -> CREATE TABLE ID . PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA

    PARIZQ          shift and go to state 150


state 96

    (259) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE . IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (262) IF_NOT_EXISTIS -> . IF NOT EXISTS
    (263) IF_NOT_EXISTIS -> .

    IF              shift and go to state 152
    ID              reduce using rule 263 (IF_NOT_EXISTIS -> .)

    IF_NOT_EXISTIS                 shift and go to state 151

state 97

    (260) REPLACE_OP -> OR REPLACE .

    DATABASE        reduce using rule 260 (REPLACE_OP -> OR REPLACE .)


state 98

    (223) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS . DATOS PUNTOCOMA
    (224) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS . DEFAULT VALUES PUNTOCOMA
    (29) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (225) DATOS -> . PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES PARDER
    (226) DATOS -> . VALUES PARIZQ VALORES PARDER
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    DEFAULT         shift and go to state 154
    PARIZQ          shift and go to state 156
    VALUES          shift and go to state 155
    ID              shift and go to state 54
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    DATOS                          shift and go to state 153
    TABLA                          shift and go to state 100
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 99

    (235) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET . CAMPOSN WHERE CONDICIONES PUNTOCOMA
    (236) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET . CAMPOSN PUNTOCOMA
    (237) CAMPOSN -> . CAMPOSN CAMPO
    (238) CAMPOSN -> . CAMPO
    (239) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL
    (240) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C
    (241) CAMPO -> . ID IGUAL EXPRESION_GLOBAL
    (242) CAMPO -> . ID IGUAL EXPRESION_GLOBAL C
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 160
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    NOMBRES_TABLAS                 shift and go to state 157
    CAMPOSN                        shift and go to state 158
    CAMPO                          shift and go to state 159
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 100

    (29) NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .

    SET             reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    ID              reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    PARIZQ          reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    EXISTS          reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    ENTERO          reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    FLOTANTE        reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    CADENASIMPLE    reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    CADENADOBLE     reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    DEFAULT         reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    VALUES          reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    WHERE           reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    PUNTOCOMA       reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    UNION           reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    INTERSECT       reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    EXCEPT          reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    JOIN            reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    GROUP           reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    LIMIT           reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    OFFSET          reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    INNER           reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    LEFT            reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    RIGHT           reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    FULL            reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    PUNTO           reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    PARDER          reduce using rule 29 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)


state 101

    (32) TABLA -> NOMBRE_T S1 .

    SET             reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    ID              reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    PARIZQ          reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    EXISTS          reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    ENTERO          reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    FLOTANTE        reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    CADENASIMPLE    reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    CADENADOBLE     reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    DEFAULT         reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    VALUES          reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    WHERE           reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    PUNTOCOMA       reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    UNION           reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    INTERSECT       reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    EXCEPT          reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    JOIN            reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    GROUP           reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    LIMIT           reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    OFFSET          reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    INNER           reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    LEFT            reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    RIGHT           reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    FULL            reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    PUNTO           reduce using rule 32 (TABLA -> NOMBRE_T S1 .)
    PARDER          reduce using rule 32 (TABLA -> NOMBRE_T S1 .)


state 102

    (34) S1 -> COMA . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    TABLA                          shift and go to state 161
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 103

    (35) S1 -> AS . ALIAS
    (22) ALIAS -> . ID

    ID              shift and go to state 74

    ALIAS                          shift and go to state 162

state 104

    (36) S1 -> ALIAS . COMA TABLA
    (37) S1 -> ALIAS .

    COMA            shift and go to state 163
    SET             reduce using rule 37 (S1 -> ALIAS .)
    ID              reduce using rule 37 (S1 -> ALIAS .)
    PARIZQ          reduce using rule 37 (S1 -> ALIAS .)
    EXISTS          reduce using rule 37 (S1 -> ALIAS .)
    ENTERO          reduce using rule 37 (S1 -> ALIAS .)
    FLOTANTE        reduce using rule 37 (S1 -> ALIAS .)
    CADENASIMPLE    reduce using rule 37 (S1 -> ALIAS .)
    CADENADOBLE     reduce using rule 37 (S1 -> ALIAS .)
    DEFAULT         reduce using rule 37 (S1 -> ALIAS .)
    VALUES          reduce using rule 37 (S1 -> ALIAS .)
    WHERE           reduce using rule 37 (S1 -> ALIAS .)
    PUNTOCOMA       reduce using rule 37 (S1 -> ALIAS .)
    UNION           reduce using rule 37 (S1 -> ALIAS .)
    INTERSECT       reduce using rule 37 (S1 -> ALIAS .)
    EXCEPT          reduce using rule 37 (S1 -> ALIAS .)
    JOIN            reduce using rule 37 (S1 -> ALIAS .)
    GROUP           reduce using rule 37 (S1 -> ALIAS .)
    LIMIT           reduce using rule 37 (S1 -> ALIAS .)
    OFFSET          reduce using rule 37 (S1 -> ALIAS .)
    INNER           reduce using rule 37 (S1 -> ALIAS .)
    LEFT            reduce using rule 37 (S1 -> ALIAS .)
    RIGHT           reduce using rule 37 (S1 -> ALIAS .)
    FULL            reduce using rule 37 (S1 -> ALIAS .)
    PUNTO           reduce using rule 37 (S1 -> ALIAS .)
    PARDER          reduce using rule 37 (S1 -> ALIAS .)


state 105

    (244) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS . WHERE CONDICIONES PUNTOCOMA
    (245) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS . PUNTOCOMA
    (29) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 164
    PUNTOCOMA       shift and go to state 165
    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    TABLA                          shift and go to state 100
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 106

    (246) DML_COMANDOS -> DROP TABLE ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 166


state 107

    (278) DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE . ID

    ID              shift and go to state 167


state 108

    (279) IF_EXISTS_DATABASE -> IF . EXISTS

    EXISTS          shift and go to state 168


state 109

    (247) DML_COMANDOS -> ALTER TABLE ID . ADD COLUMN ID TIPO_CAMPO PUNTOCOMA
    (248) DML_COMANDOS -> ALTER TABLE ID . DROP COLUMN CAMPOSC PUNTOCOMA
    (249) DML_COMANDOS -> ALTER TABLE ID . RENAME COLUMN ID TO ID PUNTOCOMA
    (250) DML_COMANDOS -> ALTER TABLE ID . DROP CONSTRAINT ID PUNTOCOMA
    (251) DML_COMANDOS -> ALTER TABLE ID . ALTER COLUMN ID SET NOT NULL PUNTOCOMA
    (252) DML_COMANDOS -> ALTER TABLE ID . ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (253) DML_COMANDOS -> ALTER TABLE ID . ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA

    ADD             shift and go to state 170
    DROP            shift and go to state 171
    RENAME          shift and go to state 172
    ALTER           shift and go to state 169


state 110

    (271) ALTER_DATABASE -> ALTER DATABASE ID . ALTER_DATABASE_OP
    (272) ALTER_DATABASE_OP -> . RENAME TO ID
    (273) ALTER_DATABASE_OP -> . OWNER TO ALTER_TABLE_OP_OW
    (277) ALTER_DATABASE_OP -> .

    RENAME          shift and go to state 174
    OWNER           shift and go to state 175
    SELECT          reduce using rule 277 (ALTER_DATABASE_OP -> .)
    CREATE          reduce using rule 277 (ALTER_DATABASE_OP -> .)
    INSERT          reduce using rule 277 (ALTER_DATABASE_OP -> .)
    UPDATE          reduce using rule 277 (ALTER_DATABASE_OP -> .)
    DELETE          reduce using rule 277 (ALTER_DATABASE_OP -> .)
    DROP            reduce using rule 277 (ALTER_DATABASE_OP -> .)
    ALTER           reduce using rule 277 (ALTER_DATABASE_OP -> .)
    SHOW            reduce using rule 277 (ALTER_DATABASE_OP -> .)
    $end            reduce using rule 277 (ALTER_DATABASE_OP -> .)

    ALTER_DATABASE_OP              shift and go to state 173

state 111

    (268) SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .

    SELECT          reduce using rule 268 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    CREATE          reduce using rule 268 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    INSERT          reduce using rule 268 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    UPDATE          reduce using rule 268 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    DELETE          reduce using rule 268 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    DROP            reduce using rule 268 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    ALTER           reduce using rule 268 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    SHOW            reduce using rule 268 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    $end            reduce using rule 268 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)


state 112

    (269) SHOW_DATABASES_LIKE -> LIKE . CADENADOBLE

    CADENADOBLE     shift and go to state 176


state 113

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS . CUERPO UNIONS
    (8) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS . UNIONS
    (29) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (38) CUERPO -> . WHERE CONDICIONES
    (39) CUERPO -> . MORES
    (150) UNIONS -> . UNIONS UNIONN
    (151) UNIONS -> . UNIONN
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (40) MORES -> . MORES MOREE
    (41) MORES -> . MOREE
    (152) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (153) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (154) UNIONN -> . PUNTOCOMA
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (42) MOREE -> . INNERS
    (43) MOREE -> . GROUPS
    (44) MOREE -> . LIMITS
    (155) COMPORTAMIENTO -> . UNION
    (156) COMPORTAMIENTO -> . INTERSECT
    (157) COMPORTAMIENTO -> . EXCEPT
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (72) INNERS -> . INNERS INNERR
    (73) INNERS -> . INNERR
    (92) GROUPS -> . GROUPS GROUPP
    (93) GROUPS -> . GROUPP
    (118) LIMITS -> . LIMITS LIMITT
    (119) LIMITS -> . LIMITT
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (74) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (75) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (76) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (77) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (78) INNERR -> . WHERE CONDICIONES
    (94) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (95) GROUPP -> . GROUP BY EXPRE_LIST
    (120) LIMITT -> . LIMIT EXPRE_NUM
    (121) LIMITT -> . OFFSET EXPRE_NUM
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (81) TIPOS_INNER -> . INNER OUTER
    (82) TIPOS_INNER -> . INNER
    (83) TIPOS_INNER -> . LEFT OUTER
    (84) TIPOS_INNER -> . LEFT
    (85) TIPOS_INNER -> . RIGHT OUTER
    (86) TIPOS_INNER -> . RIGHT
    (87) TIPOS_INNER -> . FULL OUTER
    (88) TIPOS_INNER -> . FULL
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 179
    PUNTOCOMA       shift and go to state 184
    ID              shift and go to state 54
    UNION           shift and go to state 188
    INTERSECT       shift and go to state 189
    EXCEPT          shift and go to state 190
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    JOIN            shift and go to state 195
    GROUP           shift and go to state 196
    LIMIT           shift and go to state 197
    OFFSET          shift and go to state 198
    INNER           shift and go to state 199
    LEFT            shift and go to state 200
    RIGHT           shift and go to state 201
    FULL            shift and go to state 202
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    CUERPO                         shift and go to state 177
    UNIONS                         shift and go to state 178
    TABLA                          shift and go to state 100
    MORES                          shift and go to state 180
    UNIONN                         shift and go to state 181
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    MOREE                          shift and go to state 182
    COMPORTAMIENTO                 shift and go to state 183
    QUERY                          shift and go to state 38
    INNERS                         shift and go to state 185
    GROUPS                         shift and go to state 186
    LIMITS                         shift and go to state 187
    ATE_QUE                        shift and go to state 39
    INNERR                         shift and go to state 191
    GROUPP                         shift and go to state 192
    LIMITT                         shift and go to state 193
    EXPRESIONNE                    shift and go to state 36
    TIPOS_INNER                    shift and go to state 194
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 114

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM . NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM . NOMBRES_TABLAS UNIONS
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    NOMBRES_TABLAS                 shift and go to state 203
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 115

    (281) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO . FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA

    FROM            shift and go to state 204


state 116

    (282) TIPO_TIEMPO -> YEAR .

    FROM            reduce using rule 282 (TIPO_TIEMPO -> YEAR .)


state 117

    (283) TIPO_TIEMPO -> HOUR .

    FROM            reduce using rule 283 (TIPO_TIEMPO -> HOUR .)


state 118

    (284) TIPO_TIEMPO -> MINUTE .

    FROM            reduce using rule 284 (TIPO_TIEMPO -> MINUTE .)


state 119

    (285) TIPO_TIEMPO -> SECOND .

    FROM            reduce using rule 285 (TIPO_TIEMPO -> SECOND .)


state 120

    (128) QUERY -> PARIZQ QUE PARDER .
    (129) QUERY -> PARIZQ QUE PARDER . AS_NO
    (130) AS_NO -> . COMA QUERY
    (131) AS_NO -> . AS NO_N
    (132) AS_NO -> . AS NO_N COMA QUERY
    (133) AS_NO -> . NO_N
    (134) AS_NO -> . NO_N COMA QUERY
    (135) NO_N -> . ID

  ! shift/reduce conflict for ID resolved as shift
    PARIZQ          reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    EXISTS          reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    ENTERO          reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    FLOTANTE        reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    CADENASIMPLE    reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    CADENADOBLE     reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    FROM            reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    ASTERISCO       reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    CASE            reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    GREATEST        reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    LEAST           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    IN              reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    NOT             reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    IGUAL           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    DIFERENTE       reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    MAYOR           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    MENOR           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    MENORIGUAL      reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    MAYORIGUAL      reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    SET             reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    DEFAULT         reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    VALUES          reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    WHERE           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    PUNTOCOMA       reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    UNION           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    INTERSECT       reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    EXCEPT          reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    JOIN            reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    GROUP           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    LIMIT           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    OFFSET          reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    INNER           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    LEFT            reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    RIGHT           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    FULL            reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    PUNTO           reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    PARDER          reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    AND             reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    OR              reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    THEN            reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    ELSE            reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    END             reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    WHEN            reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .)
    COMA            shift and go to state 206
    AS              shift and go to state 207
    ID              shift and go to state 209

  ! ID              [ reduce using rule 128 (QUERY -> PARIZQ QUE PARDER .) ]

    AS_NO                          shift and go to state 205
    NO_N                           shift and go to state 208

state 121

    (146) QUE_SUBS -> SELECT LISTA_CAMPOS . FROM NOMBRES_TABLAS CUERPO
    (147) QUE_SUBS -> SELECT LISTA_CAMPOS . FROM NOMBRES_TABLAS
    (11) LISTA_CAMPOS -> LISTA_CAMPOS . LISTAA
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    FROM            shift and go to state 210
    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTAA                         shift and go to state 62
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 122

    (148) QUE_SUBS -> SELECT DISTINCTNT . LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
    (149) QUE_SUBS -> SELECT DISTINCTNT . LISTA_CAMPOS FROM NOMBRES_TABLAS
    (11) LISTA_CAMPOS -> . LISTA_CAMPOS LISTAA
    (12) LISTA_CAMPOS -> . LISTAA
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTA_CAMPOS                   shift and go to state 211
    LISTAA                         shift and go to state 26
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 123

    (286) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE . COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    COMA            shift and go to state 212


state 124

    (13) LISTAA -> NOMBRE_T PUNTO CAMPOS . S
    (14) LISTAA -> NOMBRE_T PUNTO CAMPOS .
    (23) S -> . COMA LISTAA
    (24) S -> . AS ALIAS
    (25) S -> . AS ALIAS COMA LISTAA
    (26) S -> . ALIAS COMA LISTAA
    (27) S -> . ALIAS
    (22) ALIAS -> . ID

  ! shift/reduce conflict for ID resolved as shift
    FROM            reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    ASTERISCO       reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    CASE            reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    GREATEST        reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    LEAST           reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    PARIZQ          reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    EXISTS          reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    ENTERO          reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    FLOTANTE        reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    CADENASIMPLE    reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    CADENADOBLE     reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .)
    COMA            shift and go to state 71
    AS              shift and go to state 72
    ID              shift and go to state 74

  ! ID              [ reduce using rule 14 (LISTAA -> NOMBRE_T PUNTO CAMPOS .) ]

    S                              shift and go to state 213
    ALIAS                          shift and go to state 73

state 125

    (19) CAMPOS -> ID .

    COMA            reduce using rule 19 (CAMPOS -> ID .)
    AS              reduce using rule 19 (CAMPOS -> ID .)
    ID              reduce using rule 19 (CAMPOS -> ID .)
    FROM            reduce using rule 19 (CAMPOS -> ID .)
    ASTERISCO       reduce using rule 19 (CAMPOS -> ID .)
    CASE            reduce using rule 19 (CAMPOS -> ID .)
    GREATEST        reduce using rule 19 (CAMPOS -> ID .)
    LEAST           reduce using rule 19 (CAMPOS -> ID .)
    PARIZQ          reduce using rule 19 (CAMPOS -> ID .)
    EXISTS          reduce using rule 19 (CAMPOS -> ID .)
    ENTERO          reduce using rule 19 (CAMPOS -> ID .)
    FLOTANTE        reduce using rule 19 (CAMPOS -> ID .)
    CADENASIMPLE    reduce using rule 19 (CAMPOS -> ID .)
    CADENADOBLE     reduce using rule 19 (CAMPOS -> ID .)
    ASC             reduce using rule 19 (CAMPOS -> ID .)
    DESC            reduce using rule 19 (CAMPOS -> ID .)
    HAVING          reduce using rule 19 (CAMPOS -> ID .)
    GROUP           reduce using rule 19 (CAMPOS -> ID .)
    JOIN            reduce using rule 19 (CAMPOS -> ID .)
    WHERE           reduce using rule 19 (CAMPOS -> ID .)
    LIMIT           reduce using rule 19 (CAMPOS -> ID .)
    OFFSET          reduce using rule 19 (CAMPOS -> ID .)
    INNER           reduce using rule 19 (CAMPOS -> ID .)
    LEFT            reduce using rule 19 (CAMPOS -> ID .)
    RIGHT           reduce using rule 19 (CAMPOS -> ID .)
    FULL            reduce using rule 19 (CAMPOS -> ID .)
    PUNTOCOMA       reduce using rule 19 (CAMPOS -> ID .)
    UNION           reduce using rule 19 (CAMPOS -> ID .)
    INTERSECT       reduce using rule 19 (CAMPOS -> ID .)
    EXCEPT          reduce using rule 19 (CAMPOS -> ID .)
    PARDER          reduce using rule 19 (CAMPOS -> ID .)


state 126

    (23) S -> COMA LISTAA .

    FROM            reduce using rule 23 (S -> COMA LISTAA .)
    ID              reduce using rule 23 (S -> COMA LISTAA .)
    ASTERISCO       reduce using rule 23 (S -> COMA LISTAA .)
    CASE            reduce using rule 23 (S -> COMA LISTAA .)
    GREATEST        reduce using rule 23 (S -> COMA LISTAA .)
    LEAST           reduce using rule 23 (S -> COMA LISTAA .)
    PARIZQ          reduce using rule 23 (S -> COMA LISTAA .)
    EXISTS          reduce using rule 23 (S -> COMA LISTAA .)
    ENTERO          reduce using rule 23 (S -> COMA LISTAA .)
    FLOTANTE        reduce using rule 23 (S -> COMA LISTAA .)
    CADENASIMPLE    reduce using rule 23 (S -> COMA LISTAA .)
    CADENADOBLE     reduce using rule 23 (S -> COMA LISTAA .)


state 127

    (24) S -> AS ALIAS .
    (25) S -> AS ALIAS . COMA LISTAA

    FROM            reduce using rule 24 (S -> AS ALIAS .)
    ID              reduce using rule 24 (S -> AS ALIAS .)
    ASTERISCO       reduce using rule 24 (S -> AS ALIAS .)
    CASE            reduce using rule 24 (S -> AS ALIAS .)
    GREATEST        reduce using rule 24 (S -> AS ALIAS .)
    LEAST           reduce using rule 24 (S -> AS ALIAS .)
    PARIZQ          reduce using rule 24 (S -> AS ALIAS .)
    EXISTS          reduce using rule 24 (S -> AS ALIAS .)
    ENTERO          reduce using rule 24 (S -> AS ALIAS .)
    FLOTANTE        reduce using rule 24 (S -> AS ALIAS .)
    CADENASIMPLE    reduce using rule 24 (S -> AS ALIAS .)
    CADENADOBLE     reduce using rule 24 (S -> AS ALIAS .)
    COMA            shift and go to state 214


state 128

    (26) S -> ALIAS COMA . LISTAA
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTAA                         shift and go to state 215
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 129

    (158) EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .

    FROM            reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    ID              reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    ASTERISCO       reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    CASE            reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    GREATEST        reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    LEAST           reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    PARIZQ          reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    EXISTS          reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    ENTERO          reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    FLOTANTE        reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    CADENASIMPLE    reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)
    CADENADOBLE     reduce using rule 158 (EXPRESIONES_C -> CASE WHEN_LIST CUERPOO .)


state 130

    (165) WHEN_LIST -> WHEN_LIST WHEN_UNI .

    WHEN            reduce using rule 165 (WHEN_LIST -> WHEN_LIST WHEN_UNI .)
    END             reduce using rule 165 (WHEN_LIST -> WHEN_LIST WHEN_UNI .)


state 131

    (161) CUERPOO -> WHEN . CONDICIONES EXPRESIONNE END
    (162) CUERPOO -> WHEN . CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END
    (167) WHEN_UNI -> WHEN . CONDICIONES THEN EXPRESIONNE
    (168) WHEN_UNI -> WHEN . CONDICIONES EXPRESIONNE THEN EXPRESIONNE
    (169) WHEN_UNI -> WHEN . CONDICIONES EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 216
    EXPRESIONNE                    shift and go to state 134
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 132

    (163) CUERPOO -> END .
    (164) CUERPOO -> END . ID

  ! shift/reduce conflict for ID resolved as shift
    FROM            reduce using rule 163 (CUERPOO -> END .)
    ASTERISCO       reduce using rule 163 (CUERPOO -> END .)
    CASE            reduce using rule 163 (CUERPOO -> END .)
    GREATEST        reduce using rule 163 (CUERPOO -> END .)
    LEAST           reduce using rule 163 (CUERPOO -> END .)
    PARIZQ          reduce using rule 163 (CUERPOO -> END .)
    EXISTS          reduce using rule 163 (CUERPOO -> END .)
    ENTERO          reduce using rule 163 (CUERPOO -> END .)
    FLOTANTE        reduce using rule 163 (CUERPOO -> END .)
    CADENASIMPLE    reduce using rule 163 (CUERPOO -> END .)
    CADENADOBLE     reduce using rule 163 (CUERPOO -> END .)
    ID              shift and go to state 217

  ! ID              [ reduce using rule 163 (CUERPOO -> END .) ]


state 133

    (167) WHEN_UNI -> WHEN CONDICIONES . THEN EXPRESIONNE
    (168) WHEN_UNI -> WHEN CONDICIONES . EXPRESIONNE THEN EXPRESIONNE
    (169) WHEN_UNI -> WHEN CONDICIONES . EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (59) SIMBOLO_NEG -> . NOT
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    THEN            shift and go to state 218
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    NOT             shift and go to state 138
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 219
    CONDICION                      shift and go to state 220
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    CONDICION_REL                  shift and go to state 136
    QUERY                          shift and go to state 38
    SIMBOLO_NEG                    shift and go to state 137
    ATE_QUE                        shift and go to state 39

state 134

    (50) CONDICION_REL -> EXPRESIONNE . OPERADOR EXPRESIONNE
    (52) CONDICION_REL -> EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN

  ! shift/reduce conflict for NOT resolved as shift
    AND             reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    OR              reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    THEN            reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    ID              reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    ENTERO          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    FLOTANTE        reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    CADENADOBLE     reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    PARIZQ          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    EXISTS          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    PUNTOCOMA       reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    UNION           reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    INTERSECT       reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    EXCEPT          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    JOIN            reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    WHERE           reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    INNER           reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    LEFT            reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    RIGHT           reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    FULL            reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    GROUP           reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    LIMIT           reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    OFFSET          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    PARDER          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    IN              shift and go to state 84
    NOT             shift and go to state 85

  ! NOT             [ reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .) ]

    OPERADOR                       shift and go to state 221
    OPCIONALESS                    shift and go to state 82

state 135

    (46) CONDICIONES -> CONDICION .

    THEN            reduce using rule 46 (CONDICIONES -> CONDICION .)
    ID              reduce using rule 46 (CONDICIONES -> CONDICION .)
    ENTERO          reduce using rule 46 (CONDICIONES -> CONDICION .)
    FLOTANTE        reduce using rule 46 (CONDICIONES -> CONDICION .)
    CADENASIMPLE    reduce using rule 46 (CONDICIONES -> CONDICION .)
    CADENADOBLE     reduce using rule 46 (CONDICIONES -> CONDICION .)
    PARIZQ          reduce using rule 46 (CONDICIONES -> CONDICION .)
    NOT             reduce using rule 46 (CONDICIONES -> CONDICION .)
    EXISTS          reduce using rule 46 (CONDICIONES -> CONDICION .)
    PUNTOCOMA       reduce using rule 46 (CONDICIONES -> CONDICION .)
    UNION           reduce using rule 46 (CONDICIONES -> CONDICION .)
    INTERSECT       reduce using rule 46 (CONDICIONES -> CONDICION .)
    EXCEPT          reduce using rule 46 (CONDICIONES -> CONDICION .)
    JOIN            reduce using rule 46 (CONDICIONES -> CONDICION .)
    WHERE           reduce using rule 46 (CONDICIONES -> CONDICION .)
    INNER           reduce using rule 46 (CONDICIONES -> CONDICION .)
    LEFT            reduce using rule 46 (CONDICIONES -> CONDICION .)
    RIGHT           reduce using rule 46 (CONDICIONES -> CONDICION .)
    FULL            reduce using rule 46 (CONDICIONES -> CONDICION .)
    GROUP           reduce using rule 46 (CONDICIONES -> CONDICION .)
    LIMIT           reduce using rule 46 (CONDICIONES -> CONDICION .)
    OFFSET          reduce using rule 46 (CONDICIONES -> CONDICION .)
    PARDER          reduce using rule 46 (CONDICIONES -> CONDICION .)


state 136

    (47) CONDICION -> CONDICION_REL . SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> CONDICION_REL . SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> CONDICION_REL .
    (57) SIMBOLO_LOGICO -> . AND
    (58) SIMBOLO_LOGICO -> . OR

    THEN            reduce using rule 49 (CONDICION -> CONDICION_REL .)
    ID              reduce using rule 49 (CONDICION -> CONDICION_REL .)
    ENTERO          reduce using rule 49 (CONDICION -> CONDICION_REL .)
    FLOTANTE        reduce using rule 49 (CONDICION -> CONDICION_REL .)
    CADENASIMPLE    reduce using rule 49 (CONDICION -> CONDICION_REL .)
    CADENADOBLE     reduce using rule 49 (CONDICION -> CONDICION_REL .)
    PARIZQ          reduce using rule 49 (CONDICION -> CONDICION_REL .)
    NOT             reduce using rule 49 (CONDICION -> CONDICION_REL .)
    EXISTS          reduce using rule 49 (CONDICION -> CONDICION_REL .)
    PUNTOCOMA       reduce using rule 49 (CONDICION -> CONDICION_REL .)
    UNION           reduce using rule 49 (CONDICION -> CONDICION_REL .)
    INTERSECT       reduce using rule 49 (CONDICION -> CONDICION_REL .)
    EXCEPT          reduce using rule 49 (CONDICION -> CONDICION_REL .)
    JOIN            reduce using rule 49 (CONDICION -> CONDICION_REL .)
    WHERE           reduce using rule 49 (CONDICION -> CONDICION_REL .)
    INNER           reduce using rule 49 (CONDICION -> CONDICION_REL .)
    LEFT            reduce using rule 49 (CONDICION -> CONDICION_REL .)
    RIGHT           reduce using rule 49 (CONDICION -> CONDICION_REL .)
    FULL            reduce using rule 49 (CONDICION -> CONDICION_REL .)
    GROUP           reduce using rule 49 (CONDICION -> CONDICION_REL .)
    LIMIT           reduce using rule 49 (CONDICION -> CONDICION_REL .)
    OFFSET          reduce using rule 49 (CONDICION -> CONDICION_REL .)
    PARDER          reduce using rule 49 (CONDICION -> CONDICION_REL .)
    AND             shift and go to state 223
    OR              shift and go to state 224

    SIMBOLO_LOGICO                 shift and go to state 222

state 137

    (51) CONDICION_REL -> SIMBOLO_NEG . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 225
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 138

    (59) SIMBOLO_NEG -> NOT .

    ID              reduce using rule 59 (SIMBOLO_NEG -> NOT .)
    ENTERO          reduce using rule 59 (SIMBOLO_NEG -> NOT .)
    FLOTANTE        reduce using rule 59 (SIMBOLO_NEG -> NOT .)
    CADENASIMPLE    reduce using rule 59 (SIMBOLO_NEG -> NOT .)
    CADENADOBLE     reduce using rule 59 (SIMBOLO_NEG -> NOT .)
    PARIZQ          reduce using rule 59 (SIMBOLO_NEG -> NOT .)
    EXISTS          reduce using rule 59 (SIMBOLO_NEG -> NOT .)


state 139

    (60) NOMBRE_C -> ID .
    (61) CAMPOSC -> ID .
    (139) ATE_QUE -> ID .

  ! reduce/reduce conflict for PARIZQ resolved using rule 61 (CAMPOSC -> ID .)
    PUNTO           reduce using rule 60 (NOMBRE_C -> ID .)
    IGUAL           reduce using rule 61 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 61 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)
    IN              reduce using rule 61 (CAMPOSC -> ID .)
    NOT             reduce using rule 61 (CAMPOSC -> ID .)
    AND             reduce using rule 61 (CAMPOSC -> ID .)
    OR              reduce using rule 61 (CAMPOSC -> ID .)
    THEN            reduce using rule 61 (CAMPOSC -> ID .)
    ID              reduce using rule 61 (CAMPOSC -> ID .)
    ENTERO          reduce using rule 61 (CAMPOSC -> ID .)
    FLOTANTE        reduce using rule 61 (CAMPOSC -> ID .)
    CADENASIMPLE    reduce using rule 61 (CAMPOSC -> ID .)
    CADENADOBLE     reduce using rule 61 (CAMPOSC -> ID .)
    PARIZQ          reduce using rule 61 (CAMPOSC -> ID .)
    EXISTS          reduce using rule 61 (CAMPOSC -> ID .)
    PARDER          reduce using rule 61 (CAMPOSC -> ID .)
    ELSE            reduce using rule 61 (CAMPOSC -> ID .)
    PUNTOCOMA       reduce using rule 61 (CAMPOSC -> ID .)
    UNION           reduce using rule 61 (CAMPOSC -> ID .)
    INTERSECT       reduce using rule 61 (CAMPOSC -> ID .)
    EXCEPT          reduce using rule 61 (CAMPOSC -> ID .)
    JOIN            reduce using rule 61 (CAMPOSC -> ID .)
    WHERE           reduce using rule 61 (CAMPOSC -> ID .)
    INNER           reduce using rule 61 (CAMPOSC -> ID .)
    LEFT            reduce using rule 61 (CAMPOSC -> ID .)
    RIGHT           reduce using rule 61 (CAMPOSC -> ID .)
    FULL            reduce using rule 61 (CAMPOSC -> ID .)
    GROUP           reduce using rule 61 (CAMPOSC -> ID .)
    LIMIT           reduce using rule 61 (CAMPOSC -> ID .)
    OFFSET          reduce using rule 61 (CAMPOSC -> ID .)
    END             reduce using rule 61 (CAMPOSC -> ID .)
    WHEN            reduce using rule 61 (CAMPOSC -> ID .)

  ! PARIZQ          [ reduce using rule 139 (ATE_QUE -> ID .) ]


state 140

    (159) EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE . PARDER
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    PARDER          shift and go to state 226
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 141

    (138) ATE_QUE -> EXPRESIONNE OPERADOR OPCIONALESS2 .

    PARIZQ          reduce using rule 138 (ATE_QUE -> EXPRESIONNE OPERADOR OPCIONALESS2 .)


state 142

    (142) OPCIONALESS2 -> ANY .

    PARIZQ          reduce using rule 142 (OPCIONALESS2 -> ANY .)


state 143

    (143) OPCIONALESS2 -> ALL .

    PARIZQ          reduce using rule 143 (OPCIONALESS2 -> ALL .)


state 144

    (144) OPCIONALESS2 -> SOME .

    PARIZQ          reduce using rule 144 (OPCIONALESS2 -> SOME .)


state 145

    (141) OPCIONALESS -> NOT IN .

    PARIZQ          reduce using rule 141 (OPCIONALESS -> NOT IN .)


state 146

    (160) EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE . PARDER
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    PARDER          shift and go to state 227
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 147

    (126) QUERY -> ATE_QUE PARIZQ QUE . PARDER
    (127) QUERY -> ATE_QUE PARIZQ QUE . PARDER AS_NO

    PARDER          shift and go to state 228


state 148

    (54) EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .

    IN              reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    NOT             reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    IGUAL           reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    DIFERENTE       reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MAYOR           reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MENOR           reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MENORIGUAL      reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MAYORIGUAL      reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    AND             reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    OR              reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    THEN            reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    ID              reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    ENTERO          reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    FLOTANTE        reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    CADENASIMPLE    reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    CADENADOBLE     reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    PARIZQ          reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    EXISTS          reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    PARDER          reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    ELSE            reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    PUNTOCOMA       reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    UNION           reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    INTERSECT       reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    EXCEPT          reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    JOIN            reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    WHERE           reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    INNER           reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    LEFT            reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    RIGHT           reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    FULL            reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    GROUP           reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    LIMIT           reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    OFFSET          reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    END             reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    WHEN            reduce using rule 54 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)


state 149

    (61) CAMPOSC -> ID .

    IN              reduce using rule 61 (CAMPOSC -> ID .)
    NOT             reduce using rule 61 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 61 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 61 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)
    AND             reduce using rule 61 (CAMPOSC -> ID .)
    OR              reduce using rule 61 (CAMPOSC -> ID .)
    THEN            reduce using rule 61 (CAMPOSC -> ID .)
    ID              reduce using rule 61 (CAMPOSC -> ID .)
    ENTERO          reduce using rule 61 (CAMPOSC -> ID .)
    FLOTANTE        reduce using rule 61 (CAMPOSC -> ID .)
    CADENASIMPLE    reduce using rule 61 (CAMPOSC -> ID .)
    CADENADOBLE     reduce using rule 61 (CAMPOSC -> ID .)
    PARIZQ          reduce using rule 61 (CAMPOSC -> ID .)
    EXISTS          reduce using rule 61 (CAMPOSC -> ID .)
    PARDER          reduce using rule 61 (CAMPOSC -> ID .)
    ELSE            reduce using rule 61 (CAMPOSC -> ID .)
    PUNTOCOMA       reduce using rule 61 (CAMPOSC -> ID .)
    UNION           reduce using rule 61 (CAMPOSC -> ID .)
    INTERSECT       reduce using rule 61 (CAMPOSC -> ID .)
    EXCEPT          reduce using rule 61 (CAMPOSC -> ID .)
    JOIN            reduce using rule 61 (CAMPOSC -> ID .)
    WHERE           reduce using rule 61 (CAMPOSC -> ID .)
    INNER           reduce using rule 61 (CAMPOSC -> ID .)
    LEFT            reduce using rule 61 (CAMPOSC -> ID .)
    RIGHT           reduce using rule 61 (CAMPOSC -> ID .)
    FULL            reduce using rule 61 (CAMPOSC -> ID .)
    GROUP           reduce using rule 61 (CAMPOSC -> ID .)
    LIMIT           reduce using rule 61 (CAMPOSC -> ID .)
    OFFSET          reduce using rule 61 (CAMPOSC -> ID .)
    END             reduce using rule 61 (CAMPOSC -> ID .)
    WHEN            reduce using rule 61 (CAMPOSC -> ID .)


state 150

    (170) DML_COMANDOS -> CREATE TABLE ID PARIZQ . CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (171) DML_COMANDOS -> CREATE TABLE ID PARIZQ . CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA
    (172) CUERPO_CREATE_TABLE -> . LISTA_DE_COLUMNAS
    (173) LISTA_DE_COLUMNAS -> . LISTA_DE_COLUMNAS LISTA2
    (174) LISTA_DE_COLUMNAS -> . LISTA2
    (175) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
    (176) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE
    (177) LISTA2 -> . CONSTRAINT ID UNIQUE
    (178) LISTA2 -> . CONSTRAINT ID UNIQUE COMA
    (179) LISTA2 -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
    (180) LISTA2 -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA
    (181) LISTA2 -> . UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA
    (182) LISTA2 -> . UNIQUE PARIZQ LISTA_DE_IDS PARDER
    (183) LISTA2 -> . CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (184) LISTA2 -> . CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (185) LISTA2 -> . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (186) LISTA2 -> . FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (187) LISTA2 -> . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (188) LISTA2 -> . FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
    (21) NOMBRE_T -> . ID

    CONSTRAINT      shift and go to state 234
    UNIQUE          shift and go to state 235
    PRIMARY         shift and go to state 236
    FOREIGN         shift and go to state 237
    ID              shift and go to state 229

    CUERPO_CREATE_TABLE            shift and go to state 230
    LISTA_DE_COLUMNAS              shift and go to state 231
    LISTA2                         shift and go to state 232
    NOMBRE_T                       shift and go to state 233

state 151

    (259) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS . ID OWNER_DATABASE MODE_DATABASE

    ID              shift and go to state 238


state 152

    (262) IF_NOT_EXISTIS -> IF . NOT EXISTS

    NOT             shift and go to state 239


state 153

    (223) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 240


state 154

    (224) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT . VALUES PUNTOCOMA

    VALUES          shift and go to state 241


state 155

    (226) DATOS -> VALUES . PARIZQ VALORES PARDER

    PARIZQ          shift and go to state 242


state 156

    (225) DATOS -> PARIZQ . COLUMNAS PARDER VALUES PARIZQ VALORES PARDER
    (128) QUERY -> PARIZQ . QUE PARDER
    (129) QUERY -> PARIZQ . QUE PARDER AS_NO
    (227) COLUMNAS -> . COLUMNAS COLUMNA
    (228) COLUMNAS -> . COLUMNA
    (145) QUE -> . QUE_SUBS
    (229) COLUMNA -> . ID COMA
    (230) COLUMNA -> . ID
    (146) QUE_SUBS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
    (147) QUE_SUBS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS
    (148) QUE_SUBS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO
    (149) QUE_SUBS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS

    ID              shift and go to state 245
    SELECT          shift and go to state 67

    COLUMNAS                       shift and go to state 243
    QUE                            shift and go to state 65
    COLUMNA                        shift and go to state 244
    QUE_SUBS                       shift and go to state 66

state 157

    (239) CAMPO -> NOMBRES_TABLAS . PUNTO ID IGUAL EXPRESION_GLOBAL
    (240) CAMPO -> NOMBRES_TABLAS . PUNTO ID IGUAL EXPRESION_GLOBAL C
    (29) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    PUNTO           shift and go to state 246
    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    TABLA                          shift and go to state 100
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 158

    (235) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN . WHERE CONDICIONES PUNTOCOMA
    (236) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN . PUNTOCOMA
    (237) CAMPOSN -> CAMPOSN . CAMPO
    (239) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL
    (240) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C
    (241) CAMPO -> . ID IGUAL EXPRESION_GLOBAL
    (242) CAMPO -> . ID IGUAL EXPRESION_GLOBAL C
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 247
    PUNTOCOMA       shift and go to state 248
    ID              shift and go to state 160
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    NOMBRES_TABLAS                 shift and go to state 157
    CAMPO                          shift and go to state 249
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 159

    (238) CAMPOSN -> CAMPO .

    WHERE           reduce using rule 238 (CAMPOSN -> CAMPO .)
    PUNTOCOMA       reduce using rule 238 (CAMPOSN -> CAMPO .)
    ID              reduce using rule 238 (CAMPOSN -> CAMPO .)
    PARIZQ          reduce using rule 238 (CAMPOSN -> CAMPO .)
    EXISTS          reduce using rule 238 (CAMPOSN -> CAMPO .)
    ENTERO          reduce using rule 238 (CAMPOSN -> CAMPO .)
    FLOTANTE        reduce using rule 238 (CAMPOSN -> CAMPO .)
    CADENASIMPLE    reduce using rule 238 (CAMPOSN -> CAMPO .)
    CADENADOBLE     reduce using rule 238 (CAMPOSN -> CAMPO .)


state 160

    (241) CAMPO -> ID . IGUAL EXPRESION_GLOBAL
    (242) CAMPO -> ID . IGUAL EXPRESION_GLOBAL C
    (21) NOMBRE_T -> ID .
    (139) ATE_QUE -> ID .
    (60) NOMBRE_C -> ID .
    (61) CAMPOSC -> ID .

  ! reduce/reduce conflict for PARIZQ resolved using rule 21 (NOMBRE_T -> ID .)
  ! reduce/reduce conflict for PUNTO resolved using rule 21 (NOMBRE_T -> ID .)
  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 250
    COMA            reduce using rule 21 (NOMBRE_T -> ID .)
    AS              reduce using rule 21 (NOMBRE_T -> ID .)
    ID              reduce using rule 21 (NOMBRE_T -> ID .)
    PUNTO           reduce using rule 21 (NOMBRE_T -> ID .)
    PARIZQ          reduce using rule 21 (NOMBRE_T -> ID .)
    EXISTS          reduce using rule 21 (NOMBRE_T -> ID .)
    ENTERO          reduce using rule 21 (NOMBRE_T -> ID .)
    FLOTANTE        reduce using rule 21 (NOMBRE_T -> ID .)
    CADENASIMPLE    reduce using rule 21 (NOMBRE_T -> ID .)
    CADENADOBLE     reduce using rule 21 (NOMBRE_T -> ID .)
    IN              reduce using rule 61 (CAMPOSC -> ID .)
    NOT             reduce using rule 61 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 61 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENOR           reduce using rule 61 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 61 (CAMPOSC -> ID .)

  ! PARIZQ          [ reduce using rule 139 (ATE_QUE -> ID .) ]
  ! PUNTO           [ reduce using rule 60 (NOMBRE_C -> ID .) ]
  ! IGUAL           [ reduce using rule 61 (CAMPOSC -> ID .) ]


state 161

    (34) S1 -> COMA TABLA .

    SET             reduce using rule 34 (S1 -> COMA TABLA .)
    ID              reduce using rule 34 (S1 -> COMA TABLA .)
    PARIZQ          reduce using rule 34 (S1 -> COMA TABLA .)
    EXISTS          reduce using rule 34 (S1 -> COMA TABLA .)
    ENTERO          reduce using rule 34 (S1 -> COMA TABLA .)
    FLOTANTE        reduce using rule 34 (S1 -> COMA TABLA .)
    CADENASIMPLE    reduce using rule 34 (S1 -> COMA TABLA .)
    CADENADOBLE     reduce using rule 34 (S1 -> COMA TABLA .)
    DEFAULT         reduce using rule 34 (S1 -> COMA TABLA .)
    VALUES          reduce using rule 34 (S1 -> COMA TABLA .)
    WHERE           reduce using rule 34 (S1 -> COMA TABLA .)
    PUNTOCOMA       reduce using rule 34 (S1 -> COMA TABLA .)
    UNION           reduce using rule 34 (S1 -> COMA TABLA .)
    INTERSECT       reduce using rule 34 (S1 -> COMA TABLA .)
    EXCEPT          reduce using rule 34 (S1 -> COMA TABLA .)
    JOIN            reduce using rule 34 (S1 -> COMA TABLA .)
    GROUP           reduce using rule 34 (S1 -> COMA TABLA .)
    LIMIT           reduce using rule 34 (S1 -> COMA TABLA .)
    OFFSET          reduce using rule 34 (S1 -> COMA TABLA .)
    INNER           reduce using rule 34 (S1 -> COMA TABLA .)
    LEFT            reduce using rule 34 (S1 -> COMA TABLA .)
    RIGHT           reduce using rule 34 (S1 -> COMA TABLA .)
    FULL            reduce using rule 34 (S1 -> COMA TABLA .)
    PUNTO           reduce using rule 34 (S1 -> COMA TABLA .)
    PARDER          reduce using rule 34 (S1 -> COMA TABLA .)


state 162

    (35) S1 -> AS ALIAS .

    SET             reduce using rule 35 (S1 -> AS ALIAS .)
    ID              reduce using rule 35 (S1 -> AS ALIAS .)
    PARIZQ          reduce using rule 35 (S1 -> AS ALIAS .)
    EXISTS          reduce using rule 35 (S1 -> AS ALIAS .)
    ENTERO          reduce using rule 35 (S1 -> AS ALIAS .)
    FLOTANTE        reduce using rule 35 (S1 -> AS ALIAS .)
    CADENASIMPLE    reduce using rule 35 (S1 -> AS ALIAS .)
    CADENADOBLE     reduce using rule 35 (S1 -> AS ALIAS .)
    DEFAULT         reduce using rule 35 (S1 -> AS ALIAS .)
    VALUES          reduce using rule 35 (S1 -> AS ALIAS .)
    WHERE           reduce using rule 35 (S1 -> AS ALIAS .)
    PUNTOCOMA       reduce using rule 35 (S1 -> AS ALIAS .)
    UNION           reduce using rule 35 (S1 -> AS ALIAS .)
    INTERSECT       reduce using rule 35 (S1 -> AS ALIAS .)
    EXCEPT          reduce using rule 35 (S1 -> AS ALIAS .)
    JOIN            reduce using rule 35 (S1 -> AS ALIAS .)
    GROUP           reduce using rule 35 (S1 -> AS ALIAS .)
    LIMIT           reduce using rule 35 (S1 -> AS ALIAS .)
    OFFSET          reduce using rule 35 (S1 -> AS ALIAS .)
    INNER           reduce using rule 35 (S1 -> AS ALIAS .)
    LEFT            reduce using rule 35 (S1 -> AS ALIAS .)
    RIGHT           reduce using rule 35 (S1 -> AS ALIAS .)
    FULL            reduce using rule 35 (S1 -> AS ALIAS .)
    PUNTO           reduce using rule 35 (S1 -> AS ALIAS .)
    PARDER          reduce using rule 35 (S1 -> AS ALIAS .)


state 163

    (36) S1 -> ALIAS COMA . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    TABLA                          shift and go to state 251
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 164

    (244) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE . CONDICIONES PUNTOCOMA
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 252
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 165

    (245) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .

    SELECT          reduce using rule 245 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    CREATE          reduce using rule 245 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    INSERT          reduce using rule 245 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    UPDATE          reduce using rule 245 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    DELETE          reduce using rule 245 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    DROP            reduce using rule 245 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    ALTER           reduce using rule 245 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    SHOW            reduce using rule 245 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)
    $end            reduce using rule 245 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS PUNTOCOMA .)


state 166

    (246) DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .

    SELECT          reduce using rule 246 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    CREATE          reduce using rule 246 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    INSERT          reduce using rule 246 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    UPDATE          reduce using rule 246 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    DELETE          reduce using rule 246 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    DROP            reduce using rule 246 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    ALTER           reduce using rule 246 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    SHOW            reduce using rule 246 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)
    $end            reduce using rule 246 (DML_COMANDOS -> DROP TABLE ID PUNTOCOMA .)


state 167

    (278) DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .

    SELECT          reduce using rule 278 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    CREATE          reduce using rule 278 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    INSERT          reduce using rule 278 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    UPDATE          reduce using rule 278 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    DELETE          reduce using rule 278 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    DROP            reduce using rule 278 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    ALTER           reduce using rule 278 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    SHOW            reduce using rule 278 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    $end            reduce using rule 278 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)


state 168

    (279) IF_EXISTS_DATABASE -> IF EXISTS .

    ID              reduce using rule 279 (IF_EXISTS_DATABASE -> IF EXISTS .)


state 169

    (251) DML_COMANDOS -> ALTER TABLE ID ALTER . COLUMN ID SET NOT NULL PUNTOCOMA

    COLUMN          shift and go to state 253


state 170

    (247) DML_COMANDOS -> ALTER TABLE ID ADD . COLUMN ID TIPO_CAMPO PUNTOCOMA
    (252) DML_COMANDOS -> ALTER TABLE ID ADD . FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA
    (253) DML_COMANDOS -> ALTER TABLE ID ADD . CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA

    COLUMN          shift and go to state 254
    FOREIGN         shift and go to state 255
    CONSTRAINT      shift and go to state 256


state 171

    (248) DML_COMANDOS -> ALTER TABLE ID DROP . COLUMN CAMPOSC PUNTOCOMA
    (250) DML_COMANDOS -> ALTER TABLE ID DROP . CONSTRAINT ID PUNTOCOMA

    COLUMN          shift and go to state 257
    CONSTRAINT      shift and go to state 258


state 172

    (249) DML_COMANDOS -> ALTER TABLE ID RENAME . COLUMN ID TO ID PUNTOCOMA

    COLUMN          shift and go to state 259


state 173

    (271) ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .

    SELECT          reduce using rule 271 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    CREATE          reduce using rule 271 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    INSERT          reduce using rule 271 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    UPDATE          reduce using rule 271 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    DELETE          reduce using rule 271 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    DROP            reduce using rule 271 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    ALTER           reduce using rule 271 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    SHOW            reduce using rule 271 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    $end            reduce using rule 271 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)


state 174

    (272) ALTER_DATABASE_OP -> RENAME . TO ID

    TO              shift and go to state 260


state 175

    (273) ALTER_DATABASE_OP -> OWNER . TO ALTER_TABLE_OP_OW

    TO              shift and go to state 261


state 176

    (269) SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .

    SELECT          reduce using rule 269 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    CREATE          reduce using rule 269 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    INSERT          reduce using rule 269 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    UPDATE          reduce using rule 269 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    DELETE          reduce using rule 269 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    DROP            reduce using rule 269 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    ALTER           reduce using rule 269 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    SHOW            reduce using rule 269 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    $end            reduce using rule 269 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)


state 177

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO . UNIONS
    (150) UNIONS -> . UNIONS UNIONN
    (151) UNIONS -> . UNIONN
    (152) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (153) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (154) UNIONN -> . PUNTOCOMA
    (155) COMPORTAMIENTO -> . UNION
    (156) COMPORTAMIENTO -> . INTERSECT
    (157) COMPORTAMIENTO -> . EXCEPT

    PUNTOCOMA       shift and go to state 184
    UNION           shift and go to state 188
    INTERSECT       shift and go to state 189
    EXCEPT          shift and go to state 190

    UNIONS                         shift and go to state 262
    UNIONN                         shift and go to state 181
    COMPORTAMIENTO                 shift and go to state 183

state 178

    (8) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .
    (150) UNIONS -> UNIONS . UNIONN
    (152) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (153) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (154) UNIONN -> . PUNTOCOMA
    (155) COMPORTAMIENTO -> . UNION
    (156) COMPORTAMIENTO -> . INTERSECT
    (157) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    CREATE          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    INSERT          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    UPDATE          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DELETE          reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DROP            reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    ALTER           reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    SHOW            reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    $end            reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PUNTOCOMA       shift and go to state 184
    UNION           shift and go to state 188
    INTERSECT       shift and go to state 189
    EXCEPT          shift and go to state 190

  ! PUNTOCOMA       [ reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! UNION           [ reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! INTERSECT       [ reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! EXCEPT          [ reduce using rule 8 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]

    UNIONN                         shift and go to state 263
    COMPORTAMIENTO                 shift and go to state 183

state 179

    (38) CUERPO -> WHERE . CONDICIONES
    (78) INNERR -> WHERE . CONDICIONES
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 264
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 180

    (39) CUERPO -> MORES .
    (40) MORES -> MORES . MOREE
    (42) MOREE -> . INNERS
    (43) MOREE -> . GROUPS
    (44) MOREE -> . LIMITS
    (72) INNERS -> . INNERS INNERR
    (73) INNERS -> . INNERR
    (92) GROUPS -> . GROUPS GROUPP
    (93) GROUPS -> . GROUPP
    (118) LIMITS -> . LIMITS LIMITT
    (119) LIMITS -> . LIMITT
    (74) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (75) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (76) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (77) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (78) INNERR -> . WHERE CONDICIONES
    (94) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (95) GROUPP -> . GROUP BY EXPRE_LIST
    (120) LIMITT -> . LIMIT EXPRE_NUM
    (121) LIMITT -> . OFFSET EXPRE_NUM
    (81) TIPOS_INNER -> . INNER OUTER
    (82) TIPOS_INNER -> . INNER
    (83) TIPOS_INNER -> . LEFT OUTER
    (84) TIPOS_INNER -> . LEFT
    (85) TIPOS_INNER -> . RIGHT OUTER
    (86) TIPOS_INNER -> . RIGHT
    (87) TIPOS_INNER -> . FULL OUTER
    (88) TIPOS_INNER -> . FULL

    PUNTOCOMA       reduce using rule 39 (CUERPO -> MORES .)
    UNION           reduce using rule 39 (CUERPO -> MORES .)
    INTERSECT       reduce using rule 39 (CUERPO -> MORES .)
    EXCEPT          reduce using rule 39 (CUERPO -> MORES .)
    PARDER          reduce using rule 39 (CUERPO -> MORES .)
    JOIN            shift and go to state 195
    WHERE           shift and go to state 266
    GROUP           shift and go to state 196
    LIMIT           shift and go to state 197
    OFFSET          shift and go to state 198
    INNER           shift and go to state 199
    LEFT            shift and go to state 200
    RIGHT           shift and go to state 201
    FULL            shift and go to state 202

    MOREE                          shift and go to state 265
    INNERS                         shift and go to state 185
    GROUPS                         shift and go to state 186
    LIMITS                         shift and go to state 187
    INNERR                         shift and go to state 191
    GROUPP                         shift and go to state 192
    LIMITT                         shift and go to state 193
    TIPOS_INNER                    shift and go to state 194

state 181

    (151) UNIONS -> UNIONN .

    PUNTOCOMA       reduce using rule 151 (UNIONS -> UNIONN .)
    UNION           reduce using rule 151 (UNIONS -> UNIONN .)
    INTERSECT       reduce using rule 151 (UNIONS -> UNIONN .)
    EXCEPT          reduce using rule 151 (UNIONS -> UNIONN .)
    SELECT          reduce using rule 151 (UNIONS -> UNIONN .)
    CREATE          reduce using rule 151 (UNIONS -> UNIONN .)
    INSERT          reduce using rule 151 (UNIONS -> UNIONN .)
    UPDATE          reduce using rule 151 (UNIONS -> UNIONN .)
    DELETE          reduce using rule 151 (UNIONS -> UNIONN .)
    DROP            reduce using rule 151 (UNIONS -> UNIONN .)
    ALTER           reduce using rule 151 (UNIONS -> UNIONN .)
    SHOW            reduce using rule 151 (UNIONS -> UNIONN .)
    $end            reduce using rule 151 (UNIONS -> UNIONN .)


state 182

    (41) MORES -> MOREE .

    JOIN            reduce using rule 41 (MORES -> MOREE .)
    WHERE           reduce using rule 41 (MORES -> MOREE .)
    GROUP           reduce using rule 41 (MORES -> MOREE .)
    LIMIT           reduce using rule 41 (MORES -> MOREE .)
    OFFSET          reduce using rule 41 (MORES -> MOREE .)
    INNER           reduce using rule 41 (MORES -> MOREE .)
    LEFT            reduce using rule 41 (MORES -> MOREE .)
    RIGHT           reduce using rule 41 (MORES -> MOREE .)
    FULL            reduce using rule 41 (MORES -> MOREE .)
    PUNTOCOMA       reduce using rule 41 (MORES -> MOREE .)
    UNION           reduce using rule 41 (MORES -> MOREE .)
    INTERSECT       reduce using rule 41 (MORES -> MOREE .)
    EXCEPT          reduce using rule 41 (MORES -> MOREE .)
    PARDER          reduce using rule 41 (MORES -> MOREE .)


state 183

    (152) UNIONN -> COMPORTAMIENTO . ALL DQL_COMANDOS
    (153) UNIONN -> COMPORTAMIENTO . DQL_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (281) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (286) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    ALL             shift and go to state 267
    SELECT          shift and go to state 7

    DQL_COMANDOS                   shift and go to state 268

state 184

    (154) UNIONN -> PUNTOCOMA .

    PUNTOCOMA       reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    UNION           reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    INTERSECT       reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    EXCEPT          reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    SELECT          reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    CREATE          reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    INSERT          reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    UPDATE          reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    DELETE          reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    DROP            reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    ALTER           reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    SHOW            reduce using rule 154 (UNIONN -> PUNTOCOMA .)
    $end            reduce using rule 154 (UNIONN -> PUNTOCOMA .)


state 185

    (42) MOREE -> INNERS .
    (72) INNERS -> INNERS . INNERR
    (74) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (75) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (76) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (77) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (78) INNERR -> . WHERE CONDICIONES
    (81) TIPOS_INNER -> . INNER OUTER
    (82) TIPOS_INNER -> . INNER
    (83) TIPOS_INNER -> . LEFT OUTER
    (84) TIPOS_INNER -> . LEFT
    (85) TIPOS_INNER -> . RIGHT OUTER
    (86) TIPOS_INNER -> . RIGHT
    (87) TIPOS_INNER -> . FULL OUTER
    (88) TIPOS_INNER -> . FULL

  ! shift/reduce conflict for JOIN resolved as shift
  ! shift/reduce conflict for WHERE resolved as shift
  ! shift/reduce conflict for INNER resolved as shift
  ! shift/reduce conflict for LEFT resolved as shift
  ! shift/reduce conflict for RIGHT resolved as shift
  ! shift/reduce conflict for FULL resolved as shift
    GROUP           reduce using rule 42 (MOREE -> INNERS .)
    LIMIT           reduce using rule 42 (MOREE -> INNERS .)
    OFFSET          reduce using rule 42 (MOREE -> INNERS .)
    PUNTOCOMA       reduce using rule 42 (MOREE -> INNERS .)
    UNION           reduce using rule 42 (MOREE -> INNERS .)
    INTERSECT       reduce using rule 42 (MOREE -> INNERS .)
    EXCEPT          reduce using rule 42 (MOREE -> INNERS .)
    PARDER          reduce using rule 42 (MOREE -> INNERS .)
    JOIN            shift and go to state 195
    WHERE           shift and go to state 266
    INNER           shift and go to state 199
    LEFT            shift and go to state 200
    RIGHT           shift and go to state 201
    FULL            shift and go to state 202

  ! JOIN            [ reduce using rule 42 (MOREE -> INNERS .) ]
  ! WHERE           [ reduce using rule 42 (MOREE -> INNERS .) ]
  ! INNER           [ reduce using rule 42 (MOREE -> INNERS .) ]
  ! LEFT            [ reduce using rule 42 (MOREE -> INNERS .) ]
  ! RIGHT           [ reduce using rule 42 (MOREE -> INNERS .) ]
  ! FULL            [ reduce using rule 42 (MOREE -> INNERS .) ]

    INNERR                         shift and go to state 269
    TIPOS_INNER                    shift and go to state 194

state 186

    (43) MOREE -> GROUPS .
    (92) GROUPS -> GROUPS . GROUPP
    (94) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (95) GROUPP -> . GROUP BY EXPRE_LIST

  ! shift/reduce conflict for GROUP resolved as shift
    JOIN            reduce using rule 43 (MOREE -> GROUPS .)
    WHERE           reduce using rule 43 (MOREE -> GROUPS .)
    LIMIT           reduce using rule 43 (MOREE -> GROUPS .)
    OFFSET          reduce using rule 43 (MOREE -> GROUPS .)
    INNER           reduce using rule 43 (MOREE -> GROUPS .)
    LEFT            reduce using rule 43 (MOREE -> GROUPS .)
    RIGHT           reduce using rule 43 (MOREE -> GROUPS .)
    FULL            reduce using rule 43 (MOREE -> GROUPS .)
    PUNTOCOMA       reduce using rule 43 (MOREE -> GROUPS .)
    UNION           reduce using rule 43 (MOREE -> GROUPS .)
    INTERSECT       reduce using rule 43 (MOREE -> GROUPS .)
    EXCEPT          reduce using rule 43 (MOREE -> GROUPS .)
    PARDER          reduce using rule 43 (MOREE -> GROUPS .)
    GROUP           shift and go to state 196

  ! GROUP           [ reduce using rule 43 (MOREE -> GROUPS .) ]

    GROUPP                         shift and go to state 270

state 187

    (44) MOREE -> LIMITS .
    (118) LIMITS -> LIMITS . LIMITT
    (120) LIMITT -> . LIMIT EXPRE_NUM
    (121) LIMITT -> . OFFSET EXPRE_NUM

  ! shift/reduce conflict for LIMIT resolved as shift
  ! shift/reduce conflict for OFFSET resolved as shift
    JOIN            reduce using rule 44 (MOREE -> LIMITS .)
    WHERE           reduce using rule 44 (MOREE -> LIMITS .)
    GROUP           reduce using rule 44 (MOREE -> LIMITS .)
    INNER           reduce using rule 44 (MOREE -> LIMITS .)
    LEFT            reduce using rule 44 (MOREE -> LIMITS .)
    RIGHT           reduce using rule 44 (MOREE -> LIMITS .)
    FULL            reduce using rule 44 (MOREE -> LIMITS .)
    PUNTOCOMA       reduce using rule 44 (MOREE -> LIMITS .)
    UNION           reduce using rule 44 (MOREE -> LIMITS .)
    INTERSECT       reduce using rule 44 (MOREE -> LIMITS .)
    EXCEPT          reduce using rule 44 (MOREE -> LIMITS .)
    PARDER          reduce using rule 44 (MOREE -> LIMITS .)
    LIMIT           shift and go to state 197
    OFFSET          shift and go to state 198

  ! LIMIT           [ reduce using rule 44 (MOREE -> LIMITS .) ]
  ! OFFSET          [ reduce using rule 44 (MOREE -> LIMITS .) ]

    LIMITT                         shift and go to state 271

state 188

    (155) COMPORTAMIENTO -> UNION .

    ALL             reduce using rule 155 (COMPORTAMIENTO -> UNION .)
    SELECT          reduce using rule 155 (COMPORTAMIENTO -> UNION .)


state 189

    (156) COMPORTAMIENTO -> INTERSECT .

    ALL             reduce using rule 156 (COMPORTAMIENTO -> INTERSECT .)
    SELECT          reduce using rule 156 (COMPORTAMIENTO -> INTERSECT .)


state 190

    (157) COMPORTAMIENTO -> EXCEPT .

    ALL             reduce using rule 157 (COMPORTAMIENTO -> EXCEPT .)
    SELECT          reduce using rule 157 (COMPORTAMIENTO -> EXCEPT .)


state 191

    (73) INNERS -> INNERR .

    JOIN            reduce using rule 73 (INNERS -> INNERR .)
    WHERE           reduce using rule 73 (INNERS -> INNERR .)
    INNER           reduce using rule 73 (INNERS -> INNERR .)
    LEFT            reduce using rule 73 (INNERS -> INNERR .)
    RIGHT           reduce using rule 73 (INNERS -> INNERR .)
    FULL            reduce using rule 73 (INNERS -> INNERR .)
    GROUP           reduce using rule 73 (INNERS -> INNERR .)
    LIMIT           reduce using rule 73 (INNERS -> INNERR .)
    OFFSET          reduce using rule 73 (INNERS -> INNERR .)
    PUNTOCOMA       reduce using rule 73 (INNERS -> INNERR .)
    UNION           reduce using rule 73 (INNERS -> INNERR .)
    INTERSECT       reduce using rule 73 (INNERS -> INNERR .)
    EXCEPT          reduce using rule 73 (INNERS -> INNERR .)
    PARDER          reduce using rule 73 (INNERS -> INNERR .)


state 192

    (93) GROUPS -> GROUPP .

    GROUP           reduce using rule 93 (GROUPS -> GROUPP .)
    JOIN            reduce using rule 93 (GROUPS -> GROUPP .)
    WHERE           reduce using rule 93 (GROUPS -> GROUPP .)
    LIMIT           reduce using rule 93 (GROUPS -> GROUPP .)
    OFFSET          reduce using rule 93 (GROUPS -> GROUPP .)
    INNER           reduce using rule 93 (GROUPS -> GROUPP .)
    LEFT            reduce using rule 93 (GROUPS -> GROUPP .)
    RIGHT           reduce using rule 93 (GROUPS -> GROUPP .)
    FULL            reduce using rule 93 (GROUPS -> GROUPP .)
    PUNTOCOMA       reduce using rule 93 (GROUPS -> GROUPP .)
    UNION           reduce using rule 93 (GROUPS -> GROUPP .)
    INTERSECT       reduce using rule 93 (GROUPS -> GROUPP .)
    EXCEPT          reduce using rule 93 (GROUPS -> GROUPP .)
    PARDER          reduce using rule 93 (GROUPS -> GROUPP .)


state 193

    (119) LIMITS -> LIMITT .

    LIMIT           reduce using rule 119 (LIMITS -> LIMITT .)
    OFFSET          reduce using rule 119 (LIMITS -> LIMITT .)
    JOIN            reduce using rule 119 (LIMITS -> LIMITT .)
    WHERE           reduce using rule 119 (LIMITS -> LIMITT .)
    GROUP           reduce using rule 119 (LIMITS -> LIMITT .)
    INNER           reduce using rule 119 (LIMITS -> LIMITT .)
    LEFT            reduce using rule 119 (LIMITS -> LIMITT .)
    RIGHT           reduce using rule 119 (LIMITS -> LIMITT .)
    FULL            reduce using rule 119 (LIMITS -> LIMITT .)
    PUNTOCOMA       reduce using rule 119 (LIMITS -> LIMITT .)
    UNION           reduce using rule 119 (LIMITS -> LIMITT .)
    INTERSECT       reduce using rule 119 (LIMITS -> LIMITT .)
    EXCEPT          reduce using rule 119 (LIMITS -> LIMITT .)
    PARDER          reduce using rule 119 (LIMITS -> LIMITT .)


state 194

    (74) INNERR -> TIPOS_INNER . JOIN TABLA_REF ON CONDICIONES
    (76) INNERR -> TIPOS_INNER . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER

    JOIN            shift and go to state 272


state 195

    (75) INNERR -> JOIN . TABLA_REF ON CONDICIONES
    (77) INNERR -> JOIN . TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (89) TABLA_REF -> . ID
    (90) TABLA_REF -> . ID AS ID
    (91) TABLA_REF -> . ID ID

    ID              shift and go to state 274

    TABLA_REF                      shift and go to state 273

state 196

    (94) GROUPP -> GROUP . BY EXPRE_LIST MORE_ORDER
    (95) GROUPP -> GROUP . BY EXPRE_LIST

    BY              shift and go to state 275


state 197

    (120) LIMITT -> LIMIT . EXPRE_NUM
    (122) EXPRE_NUM -> . ENTERO
    (123) EXPRE_NUM -> . ALL

    ENTERO          shift and go to state 277
    ALL             shift and go to state 278

    EXPRE_NUM                      shift and go to state 276

state 198

    (121) LIMITT -> OFFSET . EXPRE_NUM
    (122) EXPRE_NUM -> . ENTERO
    (123) EXPRE_NUM -> . ALL

    ENTERO          shift and go to state 277
    ALL             shift and go to state 278

    EXPRE_NUM                      shift and go to state 279

state 199

    (81) TIPOS_INNER -> INNER . OUTER
    (82) TIPOS_INNER -> INNER .

    OUTER           shift and go to state 280
    JOIN            reduce using rule 82 (TIPOS_INNER -> INNER .)


state 200

    (83) TIPOS_INNER -> LEFT . OUTER
    (84) TIPOS_INNER -> LEFT .

    OUTER           shift and go to state 281
    JOIN            reduce using rule 84 (TIPOS_INNER -> LEFT .)


state 201

    (85) TIPOS_INNER -> RIGHT . OUTER
    (86) TIPOS_INNER -> RIGHT .

    OUTER           shift and go to state 282
    JOIN            reduce using rule 86 (TIPOS_INNER -> RIGHT .)


state 202

    (87) TIPOS_INNER -> FULL . OUTER
    (88) TIPOS_INNER -> FULL .

    OUTER           shift and go to state 283
    JOIN            reduce using rule 88 (TIPOS_INNER -> FULL .)


state 203

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS . CUERPO UNIONS
    (10) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS . UNIONS
    (29) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (38) CUERPO -> . WHERE CONDICIONES
    (39) CUERPO -> . MORES
    (150) UNIONS -> . UNIONS UNIONN
    (151) UNIONS -> . UNIONN
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (40) MORES -> . MORES MOREE
    (41) MORES -> . MOREE
    (152) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (153) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (154) UNIONN -> . PUNTOCOMA
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (42) MOREE -> . INNERS
    (43) MOREE -> . GROUPS
    (44) MOREE -> . LIMITS
    (155) COMPORTAMIENTO -> . UNION
    (156) COMPORTAMIENTO -> . INTERSECT
    (157) COMPORTAMIENTO -> . EXCEPT
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (72) INNERS -> . INNERS INNERR
    (73) INNERS -> . INNERR
    (92) GROUPS -> . GROUPS GROUPP
    (93) GROUPS -> . GROUPP
    (118) LIMITS -> . LIMITS LIMITT
    (119) LIMITS -> . LIMITT
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (74) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (75) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (76) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (77) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (78) INNERR -> . WHERE CONDICIONES
    (94) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (95) GROUPP -> . GROUP BY EXPRE_LIST
    (120) LIMITT -> . LIMIT EXPRE_NUM
    (121) LIMITT -> . OFFSET EXPRE_NUM
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (81) TIPOS_INNER -> . INNER OUTER
    (82) TIPOS_INNER -> . INNER
    (83) TIPOS_INNER -> . LEFT OUTER
    (84) TIPOS_INNER -> . LEFT
    (85) TIPOS_INNER -> . RIGHT OUTER
    (86) TIPOS_INNER -> . RIGHT
    (87) TIPOS_INNER -> . FULL OUTER
    (88) TIPOS_INNER -> . FULL
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 179
    PUNTOCOMA       shift and go to state 184
    ID              shift and go to state 54
    UNION           shift and go to state 188
    INTERSECT       shift and go to state 189
    EXCEPT          shift and go to state 190
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    JOIN            shift and go to state 195
    GROUP           shift and go to state 196
    LIMIT           shift and go to state 197
    OFFSET          shift and go to state 198
    INNER           shift and go to state 199
    LEFT            shift and go to state 200
    RIGHT           shift and go to state 201
    FULL            shift and go to state 202
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    CUERPO                         shift and go to state 284
    UNIONS                         shift and go to state 285
    TABLA                          shift and go to state 100
    MORES                          shift and go to state 180
    UNIONN                         shift and go to state 181
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    MOREE                          shift and go to state 182
    COMPORTAMIENTO                 shift and go to state 183
    QUERY                          shift and go to state 38
    INNERS                         shift and go to state 185
    GROUPS                         shift and go to state 186
    LIMITS                         shift and go to state 187
    ATE_QUE                        shift and go to state 39
    INNERR                         shift and go to state 191
    GROUPP                         shift and go to state 192
    LIMITT                         shift and go to state 193
    EXPRESIONNE                    shift and go to state 36
    TIPOS_INNER                    shift and go to state 194
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 204

    (281) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM . TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA

    TIMESTAMP       shift and go to state 286


state 205

    (129) QUERY -> PARIZQ QUE PARDER AS_NO .

    PARIZQ          reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    EXISTS          reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    ID              reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    ENTERO          reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    FLOTANTE        reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    CADENASIMPLE    reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    CADENADOBLE     reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    FROM            reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    ASTERISCO       reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    CASE            reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    GREATEST        reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    LEAST           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    IN              reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    NOT             reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    IGUAL           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    DIFERENTE       reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    MAYOR           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    MENOR           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    MENORIGUAL      reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    MAYORIGUAL      reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    SET             reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    DEFAULT         reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    VALUES          reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    WHERE           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    PUNTOCOMA       reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    UNION           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    INTERSECT       reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    EXCEPT          reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    JOIN            reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    GROUP           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    LIMIT           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    OFFSET          reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    INNER           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    LEFT            reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    RIGHT           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    FULL            reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    PUNTO           reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    PARDER          reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    AND             reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    OR              reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    THEN            reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    ELSE            reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    END             reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    WHEN            reduce using rule 129 (QUERY -> PARIZQ QUE PARDER AS_NO .)


state 206

    (130) AS_NO -> COMA . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY

    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ID              shift and go to state 77
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    QUERY                          shift and go to state 287
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75

state 207

    (131) AS_NO -> AS . NO_N
    (132) AS_NO -> AS . NO_N COMA QUERY
    (135) NO_N -> . ID

    ID              shift and go to state 209

    NO_N                           shift and go to state 288

state 208

    (133) AS_NO -> NO_N .
    (134) AS_NO -> NO_N . COMA QUERY

    PARIZQ          reduce using rule 133 (AS_NO -> NO_N .)
    EXISTS          reduce using rule 133 (AS_NO -> NO_N .)
    ID              reduce using rule 133 (AS_NO -> NO_N .)
    ENTERO          reduce using rule 133 (AS_NO -> NO_N .)
    FLOTANTE        reduce using rule 133 (AS_NO -> NO_N .)
    CADENASIMPLE    reduce using rule 133 (AS_NO -> NO_N .)
    CADENADOBLE     reduce using rule 133 (AS_NO -> NO_N .)
    FROM            reduce using rule 133 (AS_NO -> NO_N .)
    ASTERISCO       reduce using rule 133 (AS_NO -> NO_N .)
    CASE            reduce using rule 133 (AS_NO -> NO_N .)
    GREATEST        reduce using rule 133 (AS_NO -> NO_N .)
    LEAST           reduce using rule 133 (AS_NO -> NO_N .)
    IN              reduce using rule 133 (AS_NO -> NO_N .)
    NOT             reduce using rule 133 (AS_NO -> NO_N .)
    IGUAL           reduce using rule 133 (AS_NO -> NO_N .)
    DIFERENTE       reduce using rule 133 (AS_NO -> NO_N .)
    MAYOR           reduce using rule 133 (AS_NO -> NO_N .)
    MENOR           reduce using rule 133 (AS_NO -> NO_N .)
    MENORIGUAL      reduce using rule 133 (AS_NO -> NO_N .)
    MAYORIGUAL      reduce using rule 133 (AS_NO -> NO_N .)
    SET             reduce using rule 133 (AS_NO -> NO_N .)
    DEFAULT         reduce using rule 133 (AS_NO -> NO_N .)
    VALUES          reduce using rule 133 (AS_NO -> NO_N .)
    WHERE           reduce using rule 133 (AS_NO -> NO_N .)
    PUNTOCOMA       reduce using rule 133 (AS_NO -> NO_N .)
    UNION           reduce using rule 133 (AS_NO -> NO_N .)
    INTERSECT       reduce using rule 133 (AS_NO -> NO_N .)
    EXCEPT          reduce using rule 133 (AS_NO -> NO_N .)
    JOIN            reduce using rule 133 (AS_NO -> NO_N .)
    GROUP           reduce using rule 133 (AS_NO -> NO_N .)
    LIMIT           reduce using rule 133 (AS_NO -> NO_N .)
    OFFSET          reduce using rule 133 (AS_NO -> NO_N .)
    INNER           reduce using rule 133 (AS_NO -> NO_N .)
    LEFT            reduce using rule 133 (AS_NO -> NO_N .)
    RIGHT           reduce using rule 133 (AS_NO -> NO_N .)
    FULL            reduce using rule 133 (AS_NO -> NO_N .)
    PUNTO           reduce using rule 133 (AS_NO -> NO_N .)
    PARDER          reduce using rule 133 (AS_NO -> NO_N .)
    AND             reduce using rule 133 (AS_NO -> NO_N .)
    OR              reduce using rule 133 (AS_NO -> NO_N .)
    THEN            reduce using rule 133 (AS_NO -> NO_N .)
    ELSE            reduce using rule 133 (AS_NO -> NO_N .)
    END             reduce using rule 133 (AS_NO -> NO_N .)
    WHEN            reduce using rule 133 (AS_NO -> NO_N .)
    COMA            shift and go to state 289


state 209

    (135) NO_N -> ID .

    COMA            reduce using rule 135 (NO_N -> ID .)
    PARIZQ          reduce using rule 135 (NO_N -> ID .)
    EXISTS          reduce using rule 135 (NO_N -> ID .)
    ID              reduce using rule 135 (NO_N -> ID .)
    ENTERO          reduce using rule 135 (NO_N -> ID .)
    FLOTANTE        reduce using rule 135 (NO_N -> ID .)
    CADENASIMPLE    reduce using rule 135 (NO_N -> ID .)
    CADENADOBLE     reduce using rule 135 (NO_N -> ID .)
    FROM            reduce using rule 135 (NO_N -> ID .)
    ASTERISCO       reduce using rule 135 (NO_N -> ID .)
    CASE            reduce using rule 135 (NO_N -> ID .)
    GREATEST        reduce using rule 135 (NO_N -> ID .)
    LEAST           reduce using rule 135 (NO_N -> ID .)
    IN              reduce using rule 135 (NO_N -> ID .)
    NOT             reduce using rule 135 (NO_N -> ID .)
    IGUAL           reduce using rule 135 (NO_N -> ID .)
    DIFERENTE       reduce using rule 135 (NO_N -> ID .)
    MAYOR           reduce using rule 135 (NO_N -> ID .)
    MENOR           reduce using rule 135 (NO_N -> ID .)
    MENORIGUAL      reduce using rule 135 (NO_N -> ID .)
    MAYORIGUAL      reduce using rule 135 (NO_N -> ID .)
    SET             reduce using rule 135 (NO_N -> ID .)
    DEFAULT         reduce using rule 135 (NO_N -> ID .)
    VALUES          reduce using rule 135 (NO_N -> ID .)
    WHERE           reduce using rule 135 (NO_N -> ID .)
    PUNTOCOMA       reduce using rule 135 (NO_N -> ID .)
    UNION           reduce using rule 135 (NO_N -> ID .)
    INTERSECT       reduce using rule 135 (NO_N -> ID .)
    EXCEPT          reduce using rule 135 (NO_N -> ID .)
    JOIN            reduce using rule 135 (NO_N -> ID .)
    GROUP           reduce using rule 135 (NO_N -> ID .)
    LIMIT           reduce using rule 135 (NO_N -> ID .)
    OFFSET          reduce using rule 135 (NO_N -> ID .)
    INNER           reduce using rule 135 (NO_N -> ID .)
    LEFT            reduce using rule 135 (NO_N -> ID .)
    RIGHT           reduce using rule 135 (NO_N -> ID .)
    FULL            reduce using rule 135 (NO_N -> ID .)
    PUNTO           reduce using rule 135 (NO_N -> ID .)
    PARDER          reduce using rule 135 (NO_N -> ID .)
    AND             reduce using rule 135 (NO_N -> ID .)
    OR              reduce using rule 135 (NO_N -> ID .)
    THEN            reduce using rule 135 (NO_N -> ID .)
    ELSE            reduce using rule 135 (NO_N -> ID .)
    END             reduce using rule 135 (NO_N -> ID .)
    WHEN            reduce using rule 135 (NO_N -> ID .)


state 210

    (146) QUE_SUBS -> SELECT LISTA_CAMPOS FROM . NOMBRES_TABLAS CUERPO
    (147) QUE_SUBS -> SELECT LISTA_CAMPOS FROM . NOMBRES_TABLAS
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    NOMBRES_TABLAS                 shift and go to state 290
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 211

    (148) QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS . FROM NOMBRES_TABLAS CUERPO
    (149) QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS . FROM NOMBRES_TABLAS
    (11) LISTA_CAMPOS -> LISTA_CAMPOS . LISTAA
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    FROM            shift and go to state 291
    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTAA                         shift and go to state 62
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 212

    (286) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA . INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    INTERVAL        shift and go to state 292


state 213

    (13) LISTAA -> NOMBRE_T PUNTO CAMPOS S .

    FROM            reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    ID              reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    ASTERISCO       reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    CASE            reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    GREATEST        reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    LEAST           reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    PARIZQ          reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    EXISTS          reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    ENTERO          reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    FLOTANTE        reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    CADENASIMPLE    reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)
    CADENADOBLE     reduce using rule 13 (LISTAA -> NOMBRE_T PUNTO CAMPOS S .)


state 214

    (25) S -> AS ALIAS COMA . LISTAA
    (13) LISTAA -> . NOMBRE_T PUNTO CAMPOS S
    (14) LISTAA -> . NOMBRE_T PUNTO CAMPOS
    (15) LISTAA -> . CAMPOS S
    (16) LISTAA -> . CAMPOS
    (17) LISTAA -> . EXPRESIONES_C
    (18) LISTAA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO
    (158) EXPRESIONES_C -> . CASE WHEN_LIST CUERPOO
    (159) EXPRESIONES_C -> . GREATEST PARIZQ EXPRESIONNE PARDER
    (160) EXPRESIONES_C -> . LEAST PARIZQ EXPRESIONNE PARDER
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 32
    ASTERISCO       shift and go to state 33
    CASE            shift and go to state 34
    GREATEST        shift and go to state 35
    LEAST           shift and go to state 37
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    LISTAA                         shift and go to state 293
    NOMBRE_T                       shift and go to state 28
    CAMPOS                         shift and go to state 29
    EXPRESIONES_C                  shift and go to state 30
    SUBQUERYS                      shift and go to state 31
    EXPRESIONNE                    shift and go to state 36
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 215

    (26) S -> ALIAS COMA LISTAA .

    FROM            reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    ID              reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    ASTERISCO       reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    CASE            reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    GREATEST        reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    LEAST           reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    PARIZQ          reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    EXISTS          reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    ENTERO          reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    FLOTANTE        reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    CADENASIMPLE    reduce using rule 26 (S -> ALIAS COMA LISTAA .)
    CADENADOBLE     reduce using rule 26 (S -> ALIAS COMA LISTAA .)


state 216

    (161) CUERPOO -> WHEN CONDICIONES . EXPRESIONNE END
    (162) CUERPOO -> WHEN CONDICIONES . EXPRESIONNE ELSE EXPRESIONNE END
    (167) WHEN_UNI -> WHEN CONDICIONES . THEN EXPRESIONNE
    (168) WHEN_UNI -> WHEN CONDICIONES . EXPRESIONNE THEN EXPRESIONNE
    (169) WHEN_UNI -> WHEN CONDICIONES . EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (59) SIMBOLO_NEG -> . NOT
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    THEN            shift and go to state 218
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    NOT             shift and go to state 138
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 294
    CONDICION                      shift and go to state 220
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    CONDICION_REL                  shift and go to state 136
    QUERY                          shift and go to state 38
    SIMBOLO_NEG                    shift and go to state 137
    ATE_QUE                        shift and go to state 39

state 217

    (164) CUERPOO -> END ID .

    FROM            reduce using rule 164 (CUERPOO -> END ID .)
    ID              reduce using rule 164 (CUERPOO -> END ID .)
    ASTERISCO       reduce using rule 164 (CUERPOO -> END ID .)
    CASE            reduce using rule 164 (CUERPOO -> END ID .)
    GREATEST        reduce using rule 164 (CUERPOO -> END ID .)
    LEAST           reduce using rule 164 (CUERPOO -> END ID .)
    PARIZQ          reduce using rule 164 (CUERPOO -> END ID .)
    EXISTS          reduce using rule 164 (CUERPOO -> END ID .)
    ENTERO          reduce using rule 164 (CUERPOO -> END ID .)
    FLOTANTE        reduce using rule 164 (CUERPOO -> END ID .)
    CADENASIMPLE    reduce using rule 164 (CUERPOO -> END ID .)
    CADENADOBLE     reduce using rule 164 (CUERPOO -> END ID .)


state 218

    (167) WHEN_UNI -> WHEN CONDICIONES THEN . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 295
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 219

    (168) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE . THEN EXPRESIONNE
    (169) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE . ELSE EXPRESIONNE THEN EXPRESIONNE
    (50) CONDICION_REL -> EXPRESIONNE . OPERADOR EXPRESIONNE
    (52) CONDICION_REL -> EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN

  ! shift/reduce conflict for THEN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    THEN            shift and go to state 296
    ELSE            shift and go to state 297
    AND             reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    OR              reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    ID              reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    ENTERO          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    FLOTANTE        reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    CADENADOBLE     reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    PARIZQ          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    EXISTS          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    IN              shift and go to state 84
    NOT             shift and go to state 85

  ! THEN            [ reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .) ]
  ! NOT             [ reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .) ]

    OPERADOR                       shift and go to state 221
    OPCIONALESS                    shift and go to state 82

state 220

    (45) CONDICIONES -> CONDICIONES CONDICION .

    THEN            reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    ID              reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    ENTERO          reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    FLOTANTE        reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    CADENASIMPLE    reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    CADENADOBLE     reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    PARIZQ          reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    NOT             reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    EXISTS          reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    PUNTOCOMA       reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    UNION           reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    INTERSECT       reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    EXCEPT          reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    JOIN            reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    WHERE           reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    INNER           reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    LEFT            reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    RIGHT           reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    FULL            reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    GROUP           reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    LIMIT           reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    OFFSET          reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)
    PARDER          reduce using rule 45 (CONDICIONES -> CONDICIONES CONDICION .)


state 221

    (50) CONDICION_REL -> EXPRESIONNE OPERADOR . EXPRESIONNE
    (138) ATE_QUE -> EXPRESIONNE OPERADOR . OPCIONALESS2
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (142) OPCIONALESS2 -> . ANY
    (143) OPCIONALESS2 -> . ALL
    (144) OPCIONALESS2 -> . SOME
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ANY             shift and go to state 142
    ALL             shift and go to state 143
    SOME            shift and go to state 144
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 298
    OPCIONALESS2                   shift and go to state 141
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 222

    (47) CONDICION -> CONDICION_REL SIMBOLO_LOGICO . CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> CONDICION_REL SIMBOLO_LOGICO . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICION_REL                  shift and go to state 299
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 223

    (57) SIMBOLO_LOGICO -> AND .

    NOT             reduce using rule 57 (SIMBOLO_LOGICO -> AND .)
    ID              reduce using rule 57 (SIMBOLO_LOGICO -> AND .)
    ENTERO          reduce using rule 57 (SIMBOLO_LOGICO -> AND .)
    FLOTANTE        reduce using rule 57 (SIMBOLO_LOGICO -> AND .)
    CADENASIMPLE    reduce using rule 57 (SIMBOLO_LOGICO -> AND .)
    CADENADOBLE     reduce using rule 57 (SIMBOLO_LOGICO -> AND .)
    PARIZQ          reduce using rule 57 (SIMBOLO_LOGICO -> AND .)
    EXISTS          reduce using rule 57 (SIMBOLO_LOGICO -> AND .)


state 224

    (58) SIMBOLO_LOGICO -> OR .

    NOT             reduce using rule 58 (SIMBOLO_LOGICO -> OR .)
    ID              reduce using rule 58 (SIMBOLO_LOGICO -> OR .)
    ENTERO          reduce using rule 58 (SIMBOLO_LOGICO -> OR .)
    FLOTANTE        reduce using rule 58 (SIMBOLO_LOGICO -> OR .)
    CADENASIMPLE    reduce using rule 58 (SIMBOLO_LOGICO -> OR .)
    CADENADOBLE     reduce using rule 58 (SIMBOLO_LOGICO -> OR .)
    PARIZQ          reduce using rule 58 (SIMBOLO_LOGICO -> OR .)
    EXISTS          reduce using rule 58 (SIMBOLO_LOGICO -> OR .)


state 225

    (51) CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

  ! shift/reduce conflict for NOT resolved as shift
    AND             reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    OR              reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    THEN            reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    ID              reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    ENTERO          reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    FLOTANTE        reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    CADENADOBLE     reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    PARIZQ          reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    EXISTS          reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    PUNTOCOMA       reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    UNION           reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    INTERSECT       reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    EXCEPT          reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    JOIN            reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    WHERE           reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    INNER           reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    LEFT            reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    RIGHT           reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    FULL            reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    GROUP           reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    LIMIT           reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    OFFSET          reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    PARDER          reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

  ! NOT             [ reduce using rule 51 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .) ]

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 226

    (159) EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .

    FROM            reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    ID              reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    ASTERISCO       reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    CASE            reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    GREATEST        reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    LEAST           reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    PARIZQ          reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    EXISTS          reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    ENTERO          reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    FLOTANTE        reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    CADENASIMPLE    reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)
    CADENADOBLE     reduce using rule 159 (EXPRESIONES_C -> GREATEST PARIZQ EXPRESIONNE PARDER .)


state 227

    (160) EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .

    FROM            reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    ID              reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    ASTERISCO       reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    CASE            reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    GREATEST        reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    LEAST           reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    PARIZQ          reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    EXISTS          reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    ENTERO          reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    FLOTANTE        reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    CADENASIMPLE    reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)
    CADENADOBLE     reduce using rule 160 (EXPRESIONES_C -> LEAST PARIZQ EXPRESIONNE PARDER .)


state 228

    (126) QUERY -> ATE_QUE PARIZQ QUE PARDER .
    (127) QUERY -> ATE_QUE PARIZQ QUE PARDER . AS_NO
    (130) AS_NO -> . COMA QUERY
    (131) AS_NO -> . AS NO_N
    (132) AS_NO -> . AS NO_N COMA QUERY
    (133) AS_NO -> . NO_N
    (134) AS_NO -> . NO_N COMA QUERY
    (135) NO_N -> . ID

  ! shift/reduce conflict for ID resolved as shift
    PARIZQ          reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    EXISTS          reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    ENTERO          reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    FLOTANTE        reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    CADENASIMPLE    reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    CADENADOBLE     reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    FROM            reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    ASTERISCO       reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    CASE            reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    GREATEST        reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    LEAST           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    IN              reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    NOT             reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    IGUAL           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    DIFERENTE       reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    MAYOR           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    MENOR           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    MENORIGUAL      reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    MAYORIGUAL      reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    SET             reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    DEFAULT         reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    VALUES          reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    WHERE           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    PUNTOCOMA       reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    UNION           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    INTERSECT       reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    EXCEPT          reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    JOIN            reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    GROUP           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    LIMIT           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    OFFSET          reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    INNER           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    LEFT            reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    RIGHT           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    FULL            reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    PUNTO           reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    PARDER          reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    AND             reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    OR              reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    THEN            reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    ELSE            reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    END             reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    WHEN            reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    COMA            shift and go to state 206
    AS              shift and go to state 207
    ID              shift and go to state 209

  ! ID              [ reduce using rule 126 (QUERY -> ATE_QUE PARIZQ QUE PARDER .) ]

    AS_NO                          shift and go to state 300
    NO_N                           shift and go to state 208

state 229

    (21) NOMBRE_T -> ID .

    SMALLINT        reduce using rule 21 (NOMBRE_T -> ID .)
    INTEGER         reduce using rule 21 (NOMBRE_T -> ID .)
    INT             reduce using rule 21 (NOMBRE_T -> ID .)
    BIGINT          reduce using rule 21 (NOMBRE_T -> ID .)
    DECIMAL         reduce using rule 21 (NOMBRE_T -> ID .)
    REAL            reduce using rule 21 (NOMBRE_T -> ID .)
    MONEY           reduce using rule 21 (NOMBRE_T -> ID .)
    FLOAT           reduce using rule 21 (NOMBRE_T -> ID .)
    DOUBLE          reduce using rule 21 (NOMBRE_T -> ID .)
    CHARACTER       reduce using rule 21 (NOMBRE_T -> ID .)
    VARCHAR         reduce using rule 21 (NOMBRE_T -> ID .)
    CHAR            reduce using rule 21 (NOMBRE_T -> ID .)
    TEXT            reduce using rule 21 (NOMBRE_T -> ID .)
    BOOLEAN         reduce using rule 21 (NOMBRE_T -> ID .)


state 230

    (170) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE . PARDER PUNTOCOMA
    (171) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE . PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA

    PARDER          shift and go to state 301


state 231

    (172) CUERPO_CREATE_TABLE -> LISTA_DE_COLUMNAS .
    (173) LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS . LISTA2
    (175) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
    (176) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE
    (177) LISTA2 -> . CONSTRAINT ID UNIQUE
    (178) LISTA2 -> . CONSTRAINT ID UNIQUE COMA
    (179) LISTA2 -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
    (180) LISTA2 -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA
    (181) LISTA2 -> . UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA
    (182) LISTA2 -> . UNIQUE PARIZQ LISTA_DE_IDS PARDER
    (183) LISTA2 -> . CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (184) LISTA2 -> . CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (185) LISTA2 -> . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (186) LISTA2 -> . FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (187) LISTA2 -> . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (188) LISTA2 -> . FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
    (21) NOMBRE_T -> . ID

    PARDER          reduce using rule 172 (CUERPO_CREATE_TABLE -> LISTA_DE_COLUMNAS .)
    CONSTRAINT      shift and go to state 234
    UNIQUE          shift and go to state 235
    PRIMARY         shift and go to state 236
    FOREIGN         shift and go to state 237
    ID              shift and go to state 229

    LISTA2                         shift and go to state 302
    NOMBRE_T                       shift and go to state 233

state 232

    (174) LISTA_DE_COLUMNAS -> LISTA2 .

    CONSTRAINT      reduce using rule 174 (LISTA_DE_COLUMNAS -> LISTA2 .)
    UNIQUE          reduce using rule 174 (LISTA_DE_COLUMNAS -> LISTA2 .)
    PRIMARY         reduce using rule 174 (LISTA_DE_COLUMNAS -> LISTA2 .)
    FOREIGN         reduce using rule 174 (LISTA_DE_COLUMNAS -> LISTA2 .)
    ID              reduce using rule 174 (LISTA_DE_COLUMNAS -> LISTA2 .)
    PARDER          reduce using rule 174 (LISTA_DE_COLUMNAS -> LISTA2 .)


state 233

    (175) LISTA2 -> NOMBRE_T . TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
    (176) LISTA2 -> NOMBRE_T . TIPO_CAMPO VALIDACIONES_CREATE_TABLE
    (193) TIPO_CAMPO -> . SMALLINT
    (194) TIPO_CAMPO -> . INTEGER
    (195) TIPO_CAMPO -> . INT
    (196) TIPO_CAMPO -> . BIGINT
    (197) TIPO_CAMPO -> . DECIMAL
    (198) TIPO_CAMPO -> . REAL
    (199) TIPO_CAMPO -> . MONEY
    (200) TIPO_CAMPO -> . FLOAT
    (201) TIPO_CAMPO -> . DOUBLE PRECISION
    (202) TIPO_CAMPO -> . CHARACTER VARYING PARIZQ EXPNUMERICA PARDER
    (203) TIPO_CAMPO -> . VARCHAR PARIZQ EXPNUMERICA PARDER
    (204) TIPO_CAMPO -> . CHARACTER PARIZQ EXPNUMERICA PARDER
    (205) TIPO_CAMPO -> . CHAR PARIZQ EXPNUMERICA PARDER
    (206) TIPO_CAMPO -> . TEXT
    (207) TIPO_CAMPO -> . BOOLEAN

    SMALLINT        shift and go to state 304
    INTEGER         shift and go to state 305
    INT             shift and go to state 306
    BIGINT          shift and go to state 307
    DECIMAL         shift and go to state 308
    REAL            shift and go to state 309
    MONEY           shift and go to state 310
    FLOAT           shift and go to state 311
    DOUBLE          shift and go to state 312
    CHARACTER       shift and go to state 313
    VARCHAR         shift and go to state 314
    CHAR            shift and go to state 315
    TEXT            shift and go to state 316
    BOOLEAN         shift and go to state 317

    TIPO_CAMPO                     shift and go to state 303

state 234

    (177) LISTA2 -> CONSTRAINT . ID UNIQUE
    (178) LISTA2 -> CONSTRAINT . ID UNIQUE COMA
    (179) LISTA2 -> CONSTRAINT . ID CHECK PARIZQ CONDICIONES PARDER
    (180) LISTA2 -> CONSTRAINT . ID CHECK PARIZQ CONDICIONES PARDER COMA
    (183) LISTA2 -> CONSTRAINT . ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (184) LISTA2 -> CONSTRAINT . ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA

    ID              shift and go to state 318


state 235

    (181) LISTA2 -> UNIQUE . PARIZQ LISTA_DE_IDS PARDER COMA
    (182) LISTA2 -> UNIQUE . PARIZQ LISTA_DE_IDS PARDER

    PARIZQ          shift and go to state 319


state 236

    (185) LISTA2 -> PRIMARY . KEY PARIZQ LISTA_DE_IDS PARDER COMA
    (187) LISTA2 -> PRIMARY . KEY PARIZQ LISTA_DE_IDS PARDER

    KEY             shift and go to state 320


state 237

    (186) LISTA2 -> FOREIGN . KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (188) LISTA2 -> FOREIGN . KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER

    KEY             shift and go to state 321


state 238

    (259) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID . OWNER_DATABASE MODE_DATABASE
    (264) OWNER_DATABASE -> . OWNER IGUAL ID
    (265) OWNER_DATABASE -> .

    OWNER           shift and go to state 323
    MODE            reduce using rule 265 (OWNER_DATABASE -> .)
    SELECT          reduce using rule 265 (OWNER_DATABASE -> .)
    CREATE          reduce using rule 265 (OWNER_DATABASE -> .)
    INSERT          reduce using rule 265 (OWNER_DATABASE -> .)
    UPDATE          reduce using rule 265 (OWNER_DATABASE -> .)
    DELETE          reduce using rule 265 (OWNER_DATABASE -> .)
    DROP            reduce using rule 265 (OWNER_DATABASE -> .)
    ALTER           reduce using rule 265 (OWNER_DATABASE -> .)
    SHOW            reduce using rule 265 (OWNER_DATABASE -> .)
    $end            reduce using rule 265 (OWNER_DATABASE -> .)

    OWNER_DATABASE                 shift and go to state 322

state 239

    (262) IF_NOT_EXISTIS -> IF NOT . EXISTS

    EXISTS          shift and go to state 324


state 240

    (223) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .

    SELECT          reduce using rule 223 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    CREATE          reduce using rule 223 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    INSERT          reduce using rule 223 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    UPDATE          reduce using rule 223 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    DELETE          reduce using rule 223 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    DROP            reduce using rule 223 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    ALTER           reduce using rule 223 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    SHOW            reduce using rule 223 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)
    $end            reduce using rule 223 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DATOS PUNTOCOMA .)


state 241

    (224) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES . PUNTOCOMA

    PUNTOCOMA       shift and go to state 325


state 242

    (226) DATOS -> VALUES PARIZQ . VALORES PARDER
    (231) VALORES -> . VALORES VALOR
    (232) VALORES -> . VALOR
    (233) VALOR -> . EXPRESION_GLOBAL COMA
    (234) VALOR -> . EXPRESION_GLOBAL
    (254) EXPRESION_GLOBAL -> . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    VALORES                        shift and go to state 327
    VALOR                          shift and go to state 328
    EXPRESION_GLOBAL               shift and go to state 329
    EXPNUMERICA                    shift and go to state 330

state 243

    (225) DATOS -> PARIZQ COLUMNAS . PARDER VALUES PARIZQ VALORES PARDER
    (227) COLUMNAS -> COLUMNAS . COLUMNA
    (229) COLUMNA -> . ID COMA
    (230) COLUMNA -> . ID

    PARDER          shift and go to state 334
    ID              shift and go to state 245

    COLUMNA                        shift and go to state 335

state 244

    (228) COLUMNAS -> COLUMNA .

    PARDER          reduce using rule 228 (COLUMNAS -> COLUMNA .)
    ID              reduce using rule 228 (COLUMNAS -> COLUMNA .)


state 245

    (229) COLUMNA -> ID . COMA
    (230) COLUMNA -> ID .

    COMA            shift and go to state 336
    PARDER          reduce using rule 230 (COLUMNA -> ID .)
    ID              reduce using rule 230 (COLUMNA -> ID .)


state 246

    (239) CAMPO -> NOMBRES_TABLAS PUNTO . ID IGUAL EXPRESION_GLOBAL
    (240) CAMPO -> NOMBRES_TABLAS PUNTO . ID IGUAL EXPRESION_GLOBAL C

    ID              shift and go to state 337


state 247

    (235) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE . CONDICIONES PUNTOCOMA
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 338
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 248

    (236) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .

    SELECT          reduce using rule 236 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    CREATE          reduce using rule 236 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    INSERT          reduce using rule 236 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    UPDATE          reduce using rule 236 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    DELETE          reduce using rule 236 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    DROP            reduce using rule 236 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    ALTER           reduce using rule 236 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    SHOW            reduce using rule 236 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)
    $end            reduce using rule 236 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN PUNTOCOMA .)


state 249

    (237) CAMPOSN -> CAMPOSN CAMPO .

    WHERE           reduce using rule 237 (CAMPOSN -> CAMPOSN CAMPO .)
    PUNTOCOMA       reduce using rule 237 (CAMPOSN -> CAMPOSN CAMPO .)
    ID              reduce using rule 237 (CAMPOSN -> CAMPOSN CAMPO .)
    PARIZQ          reduce using rule 237 (CAMPOSN -> CAMPOSN CAMPO .)
    EXISTS          reduce using rule 237 (CAMPOSN -> CAMPOSN CAMPO .)
    ENTERO          reduce using rule 237 (CAMPOSN -> CAMPOSN CAMPO .)
    FLOTANTE        reduce using rule 237 (CAMPOSN -> CAMPOSN CAMPO .)
    CADENASIMPLE    reduce using rule 237 (CAMPOSN -> CAMPOSN CAMPO .)
    CADENADOBLE     reduce using rule 237 (CAMPOSN -> CAMPOSN CAMPO .)


state 250

    (241) CAMPO -> ID IGUAL . EXPRESION_GLOBAL
    (242) CAMPO -> ID IGUAL . EXPRESION_GLOBAL C
    (254) EXPRESION_GLOBAL -> . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPRESION_GLOBAL               shift and go to state 339
    EXPNUMERICA                    shift and go to state 330

state 251

    (36) S1 -> ALIAS COMA TABLA .

    SET             reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    ID              reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    PARIZQ          reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    EXISTS          reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    ENTERO          reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    FLOTANTE        reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    CADENASIMPLE    reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    CADENADOBLE     reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    DEFAULT         reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    VALUES          reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    WHERE           reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    PUNTOCOMA       reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    UNION           reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    INTERSECT       reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    EXCEPT          reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    JOIN            reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    GROUP           reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    LIMIT           reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    OFFSET          reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    INNER           reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    LEFT            reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    RIGHT           reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    FULL            reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    PUNTO           reduce using rule 36 (S1 -> ALIAS COMA TABLA .)
    PARDER          reduce using rule 36 (S1 -> ALIAS COMA TABLA .)


state 252

    (244) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES . PUNTOCOMA
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    PUNTOCOMA       shift and go to state 340
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 253

    (251) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN . ID SET NOT NULL PUNTOCOMA

    ID              shift and go to state 341


state 254

    (247) DML_COMANDOS -> ALTER TABLE ID ADD COLUMN . ID TIPO_CAMPO PUNTOCOMA

    ID              shift and go to state 342


state 255

    (252) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN . KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA

    KEY             shift and go to state 343


state 256

    (253) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT . ID UNIQUE PARIZQ ID PARDER PUNTOCOMA

    ID              shift and go to state 344


state 257

    (248) DML_COMANDOS -> ALTER TABLE ID DROP COLUMN . CAMPOSC PUNTOCOMA
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 149
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    CAMPOSC                        shift and go to state 345

state 258

    (250) DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT . ID PUNTOCOMA

    ID              shift and go to state 346


state 259

    (249) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN . ID TO ID PUNTOCOMA

    ID              shift and go to state 347


state 260

    (272) ALTER_DATABASE_OP -> RENAME TO . ID

    ID              shift and go to state 348


state 261

    (273) ALTER_DATABASE_OP -> OWNER TO . ALTER_TABLE_OP_OW
    (274) ALTER_TABLE_OP_OW -> . ID
    (275) ALTER_TABLE_OP_OW -> . CURRENT_USER
    (276) ALTER_TABLE_OP_OW -> . SESSION_USER

    ID              shift and go to state 350
    CURRENT_USER    shift and go to state 351
    SESSION_USER    shift and go to state 352

    ALTER_TABLE_OP_OW              shift and go to state 349

state 262

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .
    (150) UNIONS -> UNIONS . UNIONN
    (152) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (153) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (154) UNIONN -> . PUNTOCOMA
    (155) COMPORTAMIENTO -> . UNION
    (156) COMPORTAMIENTO -> . INTERSECT
    (157) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    CREATE          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    INSERT          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    UPDATE          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DELETE          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DROP            reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    ALTER           reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    SHOW            reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    $end            reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PUNTOCOMA       shift and go to state 184
    UNION           shift and go to state 188
    INTERSECT       shift and go to state 189
    EXCEPT          shift and go to state 190

  ! PUNTOCOMA       [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! UNION           [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! INTERSECT       [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! EXCEPT          [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]

    UNIONN                         shift and go to state 263
    COMPORTAMIENTO                 shift and go to state 183

state 263

    (150) UNIONS -> UNIONS UNIONN .

    PUNTOCOMA       reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    UNION           reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    INTERSECT       reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    EXCEPT          reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    SELECT          reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    CREATE          reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    INSERT          reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    UPDATE          reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    DELETE          reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    DROP            reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    ALTER           reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    SHOW            reduce using rule 150 (UNIONS -> UNIONS UNIONN .)
    $end            reduce using rule 150 (UNIONS -> UNIONS UNIONN .)


state 264

    (38) CUERPO -> WHERE CONDICIONES .
    (78) INNERR -> WHERE CONDICIONES .
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 38 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for UNION resolved using rule 38 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for INTERSECT resolved using rule 38 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for EXCEPT resolved using rule 38 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for PARDER resolved using rule 38 (CUERPO -> WHERE CONDICIONES .)
    PUNTOCOMA       reduce using rule 38 (CUERPO -> WHERE CONDICIONES .)
    UNION           reduce using rule 38 (CUERPO -> WHERE CONDICIONES .)
    INTERSECT       reduce using rule 38 (CUERPO -> WHERE CONDICIONES .)
    EXCEPT          reduce using rule 38 (CUERPO -> WHERE CONDICIONES .)
    PARDER          reduce using rule 38 (CUERPO -> WHERE CONDICIONES .)
    JOIN            reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    WHERE           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    INNER           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    LEFT            reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    RIGHT           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    FULL            reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    GROUP           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    LIMIT           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    OFFSET          reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

  ! PUNTOCOMA       [ reduce using rule 78 (INNERR -> WHERE CONDICIONES .) ]
  ! UNION           [ reduce using rule 78 (INNERR -> WHERE CONDICIONES .) ]
  ! INTERSECT       [ reduce using rule 78 (INNERR -> WHERE CONDICIONES .) ]
  ! EXCEPT          [ reduce using rule 78 (INNERR -> WHERE CONDICIONES .) ]
  ! PARDER          [ reduce using rule 78 (INNERR -> WHERE CONDICIONES .) ]

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 265

    (40) MORES -> MORES MOREE .

    JOIN            reduce using rule 40 (MORES -> MORES MOREE .)
    WHERE           reduce using rule 40 (MORES -> MORES MOREE .)
    GROUP           reduce using rule 40 (MORES -> MORES MOREE .)
    LIMIT           reduce using rule 40 (MORES -> MORES MOREE .)
    OFFSET          reduce using rule 40 (MORES -> MORES MOREE .)
    INNER           reduce using rule 40 (MORES -> MORES MOREE .)
    LEFT            reduce using rule 40 (MORES -> MORES MOREE .)
    RIGHT           reduce using rule 40 (MORES -> MORES MOREE .)
    FULL            reduce using rule 40 (MORES -> MORES MOREE .)
    PUNTOCOMA       reduce using rule 40 (MORES -> MORES MOREE .)
    UNION           reduce using rule 40 (MORES -> MORES MOREE .)
    INTERSECT       reduce using rule 40 (MORES -> MORES MOREE .)
    EXCEPT          reduce using rule 40 (MORES -> MORES MOREE .)
    PARDER          reduce using rule 40 (MORES -> MORES MOREE .)


state 266

    (78) INNERR -> WHERE . CONDICIONES
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 353
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 267

    (152) UNIONN -> COMPORTAMIENTO ALL . DQL_COMANDOS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (8) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (10) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (281) DQL_COMANDOS -> . SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA
    (286) DQL_COMANDOS -> . SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA

    SELECT          shift and go to state 7

    DQL_COMANDOS                   shift and go to state 354

state 268

    (153) UNIONN -> COMPORTAMIENTO DQL_COMANDOS .

    PUNTOCOMA       reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    UNION           reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    INTERSECT       reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    EXCEPT          reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    SELECT          reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    CREATE          reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    INSERT          reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    UPDATE          reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    DELETE          reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    DROP            reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    ALTER           reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    SHOW            reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    $end            reduce using rule 153 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)


state 269

    (72) INNERS -> INNERS INNERR .

    JOIN            reduce using rule 72 (INNERS -> INNERS INNERR .)
    WHERE           reduce using rule 72 (INNERS -> INNERS INNERR .)
    INNER           reduce using rule 72 (INNERS -> INNERS INNERR .)
    LEFT            reduce using rule 72 (INNERS -> INNERS INNERR .)
    RIGHT           reduce using rule 72 (INNERS -> INNERS INNERR .)
    FULL            reduce using rule 72 (INNERS -> INNERS INNERR .)
    GROUP           reduce using rule 72 (INNERS -> INNERS INNERR .)
    LIMIT           reduce using rule 72 (INNERS -> INNERS INNERR .)
    OFFSET          reduce using rule 72 (INNERS -> INNERS INNERR .)
    PUNTOCOMA       reduce using rule 72 (INNERS -> INNERS INNERR .)
    UNION           reduce using rule 72 (INNERS -> INNERS INNERR .)
    INTERSECT       reduce using rule 72 (INNERS -> INNERS INNERR .)
    EXCEPT          reduce using rule 72 (INNERS -> INNERS INNERR .)
    PARDER          reduce using rule 72 (INNERS -> INNERS INNERR .)


state 270

    (92) GROUPS -> GROUPS GROUPP .

    GROUP           reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    JOIN            reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    WHERE           reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    LIMIT           reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    OFFSET          reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    INNER           reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    LEFT            reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    RIGHT           reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    FULL            reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    PUNTOCOMA       reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    UNION           reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    INTERSECT       reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    EXCEPT          reduce using rule 92 (GROUPS -> GROUPS GROUPP .)
    PARDER          reduce using rule 92 (GROUPS -> GROUPS GROUPP .)


state 271

    (118) LIMITS -> LIMITS LIMITT .

    LIMIT           reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    OFFSET          reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    JOIN            reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    WHERE           reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    GROUP           reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    INNER           reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    LEFT            reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    RIGHT           reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    FULL            reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    PUNTOCOMA       reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    UNION           reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    INTERSECT       reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    EXCEPT          reduce using rule 118 (LIMITS -> LIMITS LIMITT .)
    PARDER          reduce using rule 118 (LIMITS -> LIMITS LIMITT .)


state 272

    (74) INNERR -> TIPOS_INNER JOIN . TABLA_REF ON CONDICIONES
    (76) INNERR -> TIPOS_INNER JOIN . TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (89) TABLA_REF -> . ID
    (90) TABLA_REF -> . ID AS ID
    (91) TABLA_REF -> . ID ID

    ID              shift and go to state 274

    TABLA_REF                      shift and go to state 355

state 273

    (75) INNERR -> JOIN TABLA_REF . ON CONDICIONES
    (77) INNERR -> JOIN TABLA_REF . USING PARIZQ SUB_COLUMN PARDER

    ON              shift and go to state 356
    USING           shift and go to state 357


state 274

    (89) TABLA_REF -> ID .
    (90) TABLA_REF -> ID . AS ID
    (91) TABLA_REF -> ID . ID

    ON              reduce using rule 89 (TABLA_REF -> ID .)
    USING           reduce using rule 89 (TABLA_REF -> ID .)
    AS              shift and go to state 359
    ID              shift and go to state 358


state 275

    (94) GROUPP -> GROUP BY . EXPRE_LIST MORE_ORDER
    (95) GROUPP -> GROUP BY . EXPRE_LIST
    (96) EXPRE_LIST -> . EXPRE_LIST EXPRES
    (97) EXPRE_LIST -> . EXPRES
    (98) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (99) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (100) EXPRES -> . CAMPOS S2
    (101) EXPRES -> . CAMPOS
    (102) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (103) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (104) EXPRES -> . CAMPOS S2 STATE
    (105) EXPRES -> . CAMPOS STATE
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO

    ID              shift and go to state 364
    ASTERISCO       shift and go to state 33

    EXPRE_LIST                     shift and go to state 360
    EXPRES                         shift and go to state 361
    NOMBRE_T                       shift and go to state 362
    CAMPOS                         shift and go to state 363

state 276

    (120) LIMITT -> LIMIT EXPRE_NUM .

    LIMIT           reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    OFFSET          reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    JOIN            reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    WHERE           reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    GROUP           reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    INNER           reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    LEFT            reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    RIGHT           reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    FULL            reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    PUNTOCOMA       reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    UNION           reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    INTERSECT       reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    EXCEPT          reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)
    PARDER          reduce using rule 120 (LIMITT -> LIMIT EXPRE_NUM .)


state 277

    (122) EXPRE_NUM -> ENTERO .

    LIMIT           reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    OFFSET          reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    JOIN            reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    WHERE           reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    GROUP           reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    INNER           reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    LEFT            reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    RIGHT           reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    FULL            reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    PUNTOCOMA       reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    UNION           reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    INTERSECT       reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    EXCEPT          reduce using rule 122 (EXPRE_NUM -> ENTERO .)
    PARDER          reduce using rule 122 (EXPRE_NUM -> ENTERO .)


state 278

    (123) EXPRE_NUM -> ALL .

    LIMIT           reduce using rule 123 (EXPRE_NUM -> ALL .)
    OFFSET          reduce using rule 123 (EXPRE_NUM -> ALL .)
    JOIN            reduce using rule 123 (EXPRE_NUM -> ALL .)
    WHERE           reduce using rule 123 (EXPRE_NUM -> ALL .)
    GROUP           reduce using rule 123 (EXPRE_NUM -> ALL .)
    INNER           reduce using rule 123 (EXPRE_NUM -> ALL .)
    LEFT            reduce using rule 123 (EXPRE_NUM -> ALL .)
    RIGHT           reduce using rule 123 (EXPRE_NUM -> ALL .)
    FULL            reduce using rule 123 (EXPRE_NUM -> ALL .)
    PUNTOCOMA       reduce using rule 123 (EXPRE_NUM -> ALL .)
    UNION           reduce using rule 123 (EXPRE_NUM -> ALL .)
    INTERSECT       reduce using rule 123 (EXPRE_NUM -> ALL .)
    EXCEPT          reduce using rule 123 (EXPRE_NUM -> ALL .)
    PARDER          reduce using rule 123 (EXPRE_NUM -> ALL .)


state 279

    (121) LIMITT -> OFFSET EXPRE_NUM .

    LIMIT           reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    OFFSET          reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    JOIN            reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    WHERE           reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    GROUP           reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    INNER           reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    LEFT            reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    RIGHT           reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    FULL            reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    PUNTOCOMA       reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    UNION           reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    INTERSECT       reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    EXCEPT          reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)
    PARDER          reduce using rule 121 (LIMITT -> OFFSET EXPRE_NUM .)


state 280

    (81) TIPOS_INNER -> INNER OUTER .

    JOIN            reduce using rule 81 (TIPOS_INNER -> INNER OUTER .)


state 281

    (83) TIPOS_INNER -> LEFT OUTER .

    JOIN            reduce using rule 83 (TIPOS_INNER -> LEFT OUTER .)


state 282

    (85) TIPOS_INNER -> RIGHT OUTER .

    JOIN            reduce using rule 85 (TIPOS_INNER -> RIGHT OUTER .)


state 283

    (87) TIPOS_INNER -> FULL OUTER .

    JOIN            reduce using rule 87 (TIPOS_INNER -> FULL OUTER .)


state 284

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO . UNIONS
    (150) UNIONS -> . UNIONS UNIONN
    (151) UNIONS -> . UNIONN
    (152) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (153) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (154) UNIONN -> . PUNTOCOMA
    (155) COMPORTAMIENTO -> . UNION
    (156) COMPORTAMIENTO -> . INTERSECT
    (157) COMPORTAMIENTO -> . EXCEPT

    PUNTOCOMA       shift and go to state 184
    UNION           shift and go to state 188
    INTERSECT       shift and go to state 189
    EXCEPT          shift and go to state 190

    UNIONS                         shift and go to state 365
    UNIONN                         shift and go to state 181
    COMPORTAMIENTO                 shift and go to state 183

state 285

    (10) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .
    (150) UNIONS -> UNIONS . UNIONN
    (152) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (153) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (154) UNIONN -> . PUNTOCOMA
    (155) COMPORTAMIENTO -> . UNION
    (156) COMPORTAMIENTO -> . INTERSECT
    (157) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    CREATE          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    INSERT          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    UPDATE          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DELETE          reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DROP            reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    ALTER           reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    SHOW            reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    $end            reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PUNTOCOMA       shift and go to state 184
    UNION           shift and go to state 188
    INTERSECT       shift and go to state 189
    EXCEPT          shift and go to state 190

  ! PUNTOCOMA       [ reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! UNION           [ reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! INTERSECT       [ reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! EXCEPT          [ reduce using rule 10 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]

    UNIONN                         shift and go to state 263
    COMPORTAMIENTO                 shift and go to state 183

state 286

    (281) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP . CADENASIMPLE PARDER PUNTOCOMA

    CADENASIMPLE    shift and go to state 366


state 287

    (130) AS_NO -> COMA QUERY .
    (125) SUBQUERYS -> QUERY .

  ! reduce/reduce conflict for PARIZQ resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for EXISTS resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for ID resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for ENTERO resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for CADENASIMPLE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for CADENADOBLE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for IN resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for NOT resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for IGUAL resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MAYOR resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MENOR resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 125 (SUBQUERYS -> QUERY .)
    FROM            reduce using rule 130 (AS_NO -> COMA QUERY .)
    ASTERISCO       reduce using rule 130 (AS_NO -> COMA QUERY .)
    CASE            reduce using rule 130 (AS_NO -> COMA QUERY .)
    GREATEST        reduce using rule 130 (AS_NO -> COMA QUERY .)
    LEAST           reduce using rule 130 (AS_NO -> COMA QUERY .)
    SET             reduce using rule 130 (AS_NO -> COMA QUERY .)
    DEFAULT         reduce using rule 130 (AS_NO -> COMA QUERY .)
    VALUES          reduce using rule 130 (AS_NO -> COMA QUERY .)
    WHERE           reduce using rule 130 (AS_NO -> COMA QUERY .)
    PUNTOCOMA       reduce using rule 130 (AS_NO -> COMA QUERY .)
    UNION           reduce using rule 130 (AS_NO -> COMA QUERY .)
    INTERSECT       reduce using rule 130 (AS_NO -> COMA QUERY .)
    EXCEPT          reduce using rule 130 (AS_NO -> COMA QUERY .)
    JOIN            reduce using rule 130 (AS_NO -> COMA QUERY .)
    GROUP           reduce using rule 130 (AS_NO -> COMA QUERY .)
    LIMIT           reduce using rule 130 (AS_NO -> COMA QUERY .)
    OFFSET          reduce using rule 130 (AS_NO -> COMA QUERY .)
    INNER           reduce using rule 130 (AS_NO -> COMA QUERY .)
    LEFT            reduce using rule 130 (AS_NO -> COMA QUERY .)
    RIGHT           reduce using rule 130 (AS_NO -> COMA QUERY .)
    FULL            reduce using rule 130 (AS_NO -> COMA QUERY .)
    PUNTO           reduce using rule 130 (AS_NO -> COMA QUERY .)
    PARDER          reduce using rule 130 (AS_NO -> COMA QUERY .)
    AND             reduce using rule 130 (AS_NO -> COMA QUERY .)
    OR              reduce using rule 130 (AS_NO -> COMA QUERY .)
    THEN            reduce using rule 130 (AS_NO -> COMA QUERY .)
    ELSE            reduce using rule 130 (AS_NO -> COMA QUERY .)
    END             reduce using rule 130 (AS_NO -> COMA QUERY .)
    WHEN            reduce using rule 130 (AS_NO -> COMA QUERY .)
    PARIZQ          reduce using rule 125 (SUBQUERYS -> QUERY .)
    EXISTS          reduce using rule 125 (SUBQUERYS -> QUERY .)
    ID              reduce using rule 125 (SUBQUERYS -> QUERY .)
    ENTERO          reduce using rule 125 (SUBQUERYS -> QUERY .)
    FLOTANTE        reduce using rule 125 (SUBQUERYS -> QUERY .)
    CADENASIMPLE    reduce using rule 125 (SUBQUERYS -> QUERY .)
    CADENADOBLE     reduce using rule 125 (SUBQUERYS -> QUERY .)
    IN              reduce using rule 125 (SUBQUERYS -> QUERY .)
    NOT             reduce using rule 125 (SUBQUERYS -> QUERY .)
    IGUAL           reduce using rule 125 (SUBQUERYS -> QUERY .)
    DIFERENTE       reduce using rule 125 (SUBQUERYS -> QUERY .)
    MAYOR           reduce using rule 125 (SUBQUERYS -> QUERY .)
    MENOR           reduce using rule 125 (SUBQUERYS -> QUERY .)
    MENORIGUAL      reduce using rule 125 (SUBQUERYS -> QUERY .)
    MAYORIGUAL      reduce using rule 125 (SUBQUERYS -> QUERY .)

  ! PARIZQ          [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! EXISTS          [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! ID              [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! ENTERO          [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! FLOTANTE        [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! CADENASIMPLE    [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! CADENADOBLE     [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! IN              [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! NOT             [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! IGUAL           [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! DIFERENTE       [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! MAYOR           [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! MENOR           [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! MENORIGUAL      [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]
  ! MAYORIGUAL      [ reduce using rule 130 (AS_NO -> COMA QUERY .) ]


state 288

    (131) AS_NO -> AS NO_N .
    (132) AS_NO -> AS NO_N . COMA QUERY

    PARIZQ          reduce using rule 131 (AS_NO -> AS NO_N .)
    EXISTS          reduce using rule 131 (AS_NO -> AS NO_N .)
    ID              reduce using rule 131 (AS_NO -> AS NO_N .)
    ENTERO          reduce using rule 131 (AS_NO -> AS NO_N .)
    FLOTANTE        reduce using rule 131 (AS_NO -> AS NO_N .)
    CADENASIMPLE    reduce using rule 131 (AS_NO -> AS NO_N .)
    CADENADOBLE     reduce using rule 131 (AS_NO -> AS NO_N .)
    FROM            reduce using rule 131 (AS_NO -> AS NO_N .)
    ASTERISCO       reduce using rule 131 (AS_NO -> AS NO_N .)
    CASE            reduce using rule 131 (AS_NO -> AS NO_N .)
    GREATEST        reduce using rule 131 (AS_NO -> AS NO_N .)
    LEAST           reduce using rule 131 (AS_NO -> AS NO_N .)
    IN              reduce using rule 131 (AS_NO -> AS NO_N .)
    NOT             reduce using rule 131 (AS_NO -> AS NO_N .)
    IGUAL           reduce using rule 131 (AS_NO -> AS NO_N .)
    DIFERENTE       reduce using rule 131 (AS_NO -> AS NO_N .)
    MAYOR           reduce using rule 131 (AS_NO -> AS NO_N .)
    MENOR           reduce using rule 131 (AS_NO -> AS NO_N .)
    MENORIGUAL      reduce using rule 131 (AS_NO -> AS NO_N .)
    MAYORIGUAL      reduce using rule 131 (AS_NO -> AS NO_N .)
    SET             reduce using rule 131 (AS_NO -> AS NO_N .)
    DEFAULT         reduce using rule 131 (AS_NO -> AS NO_N .)
    VALUES          reduce using rule 131 (AS_NO -> AS NO_N .)
    WHERE           reduce using rule 131 (AS_NO -> AS NO_N .)
    PUNTOCOMA       reduce using rule 131 (AS_NO -> AS NO_N .)
    UNION           reduce using rule 131 (AS_NO -> AS NO_N .)
    INTERSECT       reduce using rule 131 (AS_NO -> AS NO_N .)
    EXCEPT          reduce using rule 131 (AS_NO -> AS NO_N .)
    JOIN            reduce using rule 131 (AS_NO -> AS NO_N .)
    GROUP           reduce using rule 131 (AS_NO -> AS NO_N .)
    LIMIT           reduce using rule 131 (AS_NO -> AS NO_N .)
    OFFSET          reduce using rule 131 (AS_NO -> AS NO_N .)
    INNER           reduce using rule 131 (AS_NO -> AS NO_N .)
    LEFT            reduce using rule 131 (AS_NO -> AS NO_N .)
    RIGHT           reduce using rule 131 (AS_NO -> AS NO_N .)
    FULL            reduce using rule 131 (AS_NO -> AS NO_N .)
    PUNTO           reduce using rule 131 (AS_NO -> AS NO_N .)
    PARDER          reduce using rule 131 (AS_NO -> AS NO_N .)
    AND             reduce using rule 131 (AS_NO -> AS NO_N .)
    OR              reduce using rule 131 (AS_NO -> AS NO_N .)
    THEN            reduce using rule 131 (AS_NO -> AS NO_N .)
    ELSE            reduce using rule 131 (AS_NO -> AS NO_N .)
    END             reduce using rule 131 (AS_NO -> AS NO_N .)
    WHEN            reduce using rule 131 (AS_NO -> AS NO_N .)
    COMA            shift and go to state 367


state 289

    (134) AS_NO -> NO_N COMA . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY

    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ID              shift and go to state 77
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    QUERY                          shift and go to state 368
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75

state 290

    (146) QUE_SUBS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS . CUERPO
    (147) QUE_SUBS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS .
    (29) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (38) CUERPO -> . WHERE CONDICIONES
    (39) CUERPO -> . MORES
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (40) MORES -> . MORES MOREE
    (41) MORES -> . MOREE
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (42) MOREE -> . INNERS
    (43) MOREE -> . GROUPS
    (44) MOREE -> . LIMITS
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (72) INNERS -> . INNERS INNERR
    (73) INNERS -> . INNERR
    (92) GROUPS -> . GROUPS GROUPP
    (93) GROUPS -> . GROUPP
    (118) LIMITS -> . LIMITS LIMITT
    (119) LIMITS -> . LIMITT
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (74) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (75) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (76) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (77) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (78) INNERR -> . WHERE CONDICIONES
    (94) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (95) GROUPP -> . GROUP BY EXPRE_LIST
    (120) LIMITT -> . LIMIT EXPRE_NUM
    (121) LIMITT -> . OFFSET EXPRE_NUM
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (81) TIPOS_INNER -> . INNER OUTER
    (82) TIPOS_INNER -> . INNER
    (83) TIPOS_INNER -> . LEFT OUTER
    (84) TIPOS_INNER -> . LEFT
    (85) TIPOS_INNER -> . RIGHT OUTER
    (86) TIPOS_INNER -> . RIGHT
    (87) TIPOS_INNER -> . FULL OUTER
    (88) TIPOS_INNER -> . FULL
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    PARDER          reduce using rule 147 (QUE_SUBS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS .)
    WHERE           shift and go to state 179
    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    JOIN            shift and go to state 195
    GROUP           shift and go to state 196
    LIMIT           shift and go to state 197
    OFFSET          shift and go to state 198
    INNER           shift and go to state 199
    LEFT            shift and go to state 200
    RIGHT           shift and go to state 201
    FULL            shift and go to state 202
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    CUERPO                         shift and go to state 369
    TABLA                          shift and go to state 100
    MORES                          shift and go to state 180
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    MOREE                          shift and go to state 182
    QUERY                          shift and go to state 38
    INNERS                         shift and go to state 185
    GROUPS                         shift and go to state 186
    LIMITS                         shift and go to state 187
    ATE_QUE                        shift and go to state 39
    INNERR                         shift and go to state 191
    GROUPP                         shift and go to state 192
    LIMITT                         shift and go to state 193
    EXPRESIONNE                    shift and go to state 36
    TIPOS_INNER                    shift and go to state 194
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 291

    (148) QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS FROM . NOMBRES_TABLAS CUERPO
    (149) QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS FROM . NOMBRES_TABLAS
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    NOMBRES_TABLAS                 shift and go to state 370
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 292

    (286) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL . CADENASIMPLE PARDER PUNTOCOMA

    CADENASIMPLE    shift and go to state 371


state 293

    (25) S -> AS ALIAS COMA LISTAA .

    FROM            reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    ID              reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    ASTERISCO       reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    CASE            reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    GREATEST        reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    LEAST           reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    PARIZQ          reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    EXISTS          reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    ENTERO          reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    FLOTANTE        reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    CADENASIMPLE    reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)
    CADENADOBLE     reduce using rule 25 (S -> AS ALIAS COMA LISTAA .)


state 294

    (161) CUERPOO -> WHEN CONDICIONES EXPRESIONNE . END
    (162) CUERPOO -> WHEN CONDICIONES EXPRESIONNE . ELSE EXPRESIONNE END
    (168) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE . THEN EXPRESIONNE
    (169) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE . ELSE EXPRESIONNE THEN EXPRESIONNE
    (50) CONDICION_REL -> EXPRESIONNE . OPERADOR EXPRESIONNE
    (52) CONDICION_REL -> EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN

  ! shift/reduce conflict for THEN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    END             shift and go to state 372
    ELSE            shift and go to state 373
    THEN            shift and go to state 296
    AND             reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    OR              reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    ID              reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    ENTERO          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    FLOTANTE        reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    CADENADOBLE     reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    PARIZQ          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    EXISTS          reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .)
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    IN              shift and go to state 84
    NOT             shift and go to state 85

  ! THEN            [ reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .) ]
  ! NOT             [ reduce using rule 52 (CONDICION_REL -> EXPRESIONNE .) ]

    OPERADOR                       shift and go to state 221
    OPCIONALESS                    shift and go to state 82

state 295

    (167) WHEN_UNI -> WHEN CONDICIONES THEN EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    WHEN            reduce using rule 167 (WHEN_UNI -> WHEN CONDICIONES THEN EXPRESIONNE .)
    END             reduce using rule 167 (WHEN_UNI -> WHEN CONDICIONES THEN EXPRESIONNE .)
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 296

    (168) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE THEN . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 374
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 297

    (169) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE ELSE . EXPRESIONNE THEN EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 375
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 298

    (50) CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

  ! shift/reduce conflict for NOT resolved as shift
    AND             reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    OR              reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    THEN            reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    ID              reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    ENTERO          reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    FLOTANTE        reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    CADENADOBLE     reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    PARIZQ          reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    EXISTS          reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    PUNTOCOMA       reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    UNION           reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    INTERSECT       reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    EXCEPT          reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    JOIN            reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    WHERE           reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    INNER           reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    LEFT            reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    RIGHT           reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    FULL            reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    GROUP           reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    LIMIT           reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    OFFSET          reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    PARDER          reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

  ! NOT             [ reduce using rule 50 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .) ]

    OPERADOR                       shift and go to state 83
    OPCIONALESS                    shift and go to state 82

state 299

    (47) CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL . OTRO_LOGICO
    (48) CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .
    (53) OTRO_LOGICO -> . SIMBOLO_LOGICO CONDICIONES
    (57) SIMBOLO_LOGICO -> . AND
    (58) SIMBOLO_LOGICO -> . OR

    THEN            reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    ID              reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    ENTERO          reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    FLOTANTE        reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    CADENASIMPLE    reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    CADENADOBLE     reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    PARIZQ          reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    NOT             reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    EXISTS          reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    PUNTOCOMA       reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    UNION           reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    INTERSECT       reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    EXCEPT          reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    JOIN            reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    WHERE           reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    INNER           reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    LEFT            reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    RIGHT           reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    FULL            reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    GROUP           reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    LIMIT           reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    OFFSET          reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    PARDER          reduce using rule 48 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    AND             shift and go to state 223
    OR              shift and go to state 224

    SIMBOLO_LOGICO                 shift and go to state 376
    OTRO_LOGICO                    shift and go to state 377

state 300

    (127) QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .

    PARIZQ          reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    EXISTS          reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    ID              reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    ENTERO          reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    FLOTANTE        reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    CADENASIMPLE    reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    CADENADOBLE     reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    FROM            reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    ASTERISCO       reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    CASE            reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    GREATEST        reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    LEAST           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    IN              reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    NOT             reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    IGUAL           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    DIFERENTE       reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    MAYOR           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    MENOR           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    MENORIGUAL      reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    MAYORIGUAL      reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    SET             reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    DEFAULT         reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    VALUES          reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    WHERE           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    PUNTOCOMA       reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    UNION           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    INTERSECT       reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    EXCEPT          reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    JOIN            reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    GROUP           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    LIMIT           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    OFFSET          reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    INNER           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    LEFT            reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    RIGHT           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    FULL            reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    PUNTO           reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    PARDER          reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    AND             reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    OR              reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    THEN            reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    ELSE            reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    END             reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    WHEN            reduce using rule 127 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)


state 301

    (170) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER . PUNTOCOMA
    (171) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER . INHERITS PARIZQ ID PARDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 378
    INHERITS        shift and go to state 379


state 302

    (173) LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .

    CONSTRAINT      reduce using rule 173 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    UNIQUE          reduce using rule 173 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    PRIMARY         reduce using rule 173 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    FOREIGN         reduce using rule 173 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    ID              reduce using rule 173 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    PARDER          reduce using rule 173 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)


state 303

    (175) LISTA2 -> NOMBRE_T TIPO_CAMPO . VALIDACIONES_CREATE_TABLE COMA
    (176) LISTA2 -> NOMBRE_T TIPO_CAMPO . VALIDACIONES_CREATE_TABLE
    (208) VALIDACIONES_CREATE_TABLE -> . LISTA3
    (209) LISTA3 -> . VALIDACION_CAMPO_CREATE
    (210) LISTA3 -> . VALIDACION_CAMPO_CREATE_VACIO
    (211) LISTA3 -> . LISTA3 VALIDACION_CAMPO_CREATE
    (212) VALIDACION_CAMPO_CREATE -> . NOT NULL
    (213) VALIDACION_CAMPO_CREATE -> . PRIMARY KEY
    (214) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENASIMPLE
    (215) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENADOBLE
    (216) VALIDACION_CAMPO_CREATE -> . DEFAULT DECIMAL
    (217) VALIDACION_CAMPO_CREATE -> . DEFAULT ENTERO
    (218) VALIDACION_CAMPO_CREATE -> . DEFAULT ID
    (220) VALIDACION_CAMPO_CREATE -> . NULL
    (221) VALIDACION_CAMPO_CREATE -> . CONSTRAINT ID UNIQUE
    (222) VALIDACION_CAMPO_CREATE -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER
    (219) VALIDACION_CAMPO_CREATE_VACIO -> .

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PRIMARY resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for CONSTRAINT resolved as shift
    NOT             shift and go to state 384
    PRIMARY         shift and go to state 386
    DEFAULT         shift and go to state 387
    NULL            shift and go to state 385
    CONSTRAINT      shift and go to state 388
    COMA            reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    UNIQUE          reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    FOREIGN         reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    ID              reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    PARDER          reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .)

  ! NOT             [ reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]
  ! PRIMARY         [ reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]
  ! DEFAULT         [ reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]
  ! NULL            [ reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]
  ! CONSTRAINT      [ reduce using rule 219 (VALIDACION_CAMPO_CREATE_VACIO -> .) ]

    VALIDACIONES_CREATE_TABLE      shift and go to state 380
    LISTA3                         shift and go to state 381
    VALIDACION_CAMPO_CREATE        shift and go to state 382
    VALIDACION_CAMPO_CREATE_VACIO  shift and go to state 383

state 304

    (193) TIPO_CAMPO -> SMALLINT .

    NOT             reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    PRIMARY         reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    DEFAULT         reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    NULL            reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    CONSTRAINT      reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    COMA            reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    UNIQUE          reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    FOREIGN         reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    ID              reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    PARDER          reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)
    PUNTOCOMA       reduce using rule 193 (TIPO_CAMPO -> SMALLINT .)


state 305

    (194) TIPO_CAMPO -> INTEGER .

    NOT             reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    PRIMARY         reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    DEFAULT         reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    NULL            reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    CONSTRAINT      reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    COMA            reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    UNIQUE          reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    FOREIGN         reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    ID              reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    PARDER          reduce using rule 194 (TIPO_CAMPO -> INTEGER .)
    PUNTOCOMA       reduce using rule 194 (TIPO_CAMPO -> INTEGER .)


state 306

    (195) TIPO_CAMPO -> INT .

    NOT             reduce using rule 195 (TIPO_CAMPO -> INT .)
    PRIMARY         reduce using rule 195 (TIPO_CAMPO -> INT .)
    DEFAULT         reduce using rule 195 (TIPO_CAMPO -> INT .)
    NULL            reduce using rule 195 (TIPO_CAMPO -> INT .)
    CONSTRAINT      reduce using rule 195 (TIPO_CAMPO -> INT .)
    COMA            reduce using rule 195 (TIPO_CAMPO -> INT .)
    UNIQUE          reduce using rule 195 (TIPO_CAMPO -> INT .)
    FOREIGN         reduce using rule 195 (TIPO_CAMPO -> INT .)
    ID              reduce using rule 195 (TIPO_CAMPO -> INT .)
    PARDER          reduce using rule 195 (TIPO_CAMPO -> INT .)
    PUNTOCOMA       reduce using rule 195 (TIPO_CAMPO -> INT .)


state 307

    (196) TIPO_CAMPO -> BIGINT .

    NOT             reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    PRIMARY         reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    DEFAULT         reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    NULL            reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    CONSTRAINT      reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    COMA            reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    UNIQUE          reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    FOREIGN         reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    ID              reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    PARDER          reduce using rule 196 (TIPO_CAMPO -> BIGINT .)
    PUNTOCOMA       reduce using rule 196 (TIPO_CAMPO -> BIGINT .)


state 308

    (197) TIPO_CAMPO -> DECIMAL .

    NOT             reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    PRIMARY         reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    DEFAULT         reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    NULL            reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    CONSTRAINT      reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    COMA            reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    UNIQUE          reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    FOREIGN         reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    ID              reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    PARDER          reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)
    PUNTOCOMA       reduce using rule 197 (TIPO_CAMPO -> DECIMAL .)


state 309

    (198) TIPO_CAMPO -> REAL .

    NOT             reduce using rule 198 (TIPO_CAMPO -> REAL .)
    PRIMARY         reduce using rule 198 (TIPO_CAMPO -> REAL .)
    DEFAULT         reduce using rule 198 (TIPO_CAMPO -> REAL .)
    NULL            reduce using rule 198 (TIPO_CAMPO -> REAL .)
    CONSTRAINT      reduce using rule 198 (TIPO_CAMPO -> REAL .)
    COMA            reduce using rule 198 (TIPO_CAMPO -> REAL .)
    UNIQUE          reduce using rule 198 (TIPO_CAMPO -> REAL .)
    FOREIGN         reduce using rule 198 (TIPO_CAMPO -> REAL .)
    ID              reduce using rule 198 (TIPO_CAMPO -> REAL .)
    PARDER          reduce using rule 198 (TIPO_CAMPO -> REAL .)
    PUNTOCOMA       reduce using rule 198 (TIPO_CAMPO -> REAL .)


state 310

    (199) TIPO_CAMPO -> MONEY .

    NOT             reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    PRIMARY         reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    DEFAULT         reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    NULL            reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    CONSTRAINT      reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    COMA            reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    UNIQUE          reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    FOREIGN         reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    ID              reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    PARDER          reduce using rule 199 (TIPO_CAMPO -> MONEY .)
    PUNTOCOMA       reduce using rule 199 (TIPO_CAMPO -> MONEY .)


state 311

    (200) TIPO_CAMPO -> FLOAT .

    NOT             reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    PRIMARY         reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    DEFAULT         reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    NULL            reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    CONSTRAINT      reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    COMA            reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    UNIQUE          reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    FOREIGN         reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    ID              reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    PARDER          reduce using rule 200 (TIPO_CAMPO -> FLOAT .)
    PUNTOCOMA       reduce using rule 200 (TIPO_CAMPO -> FLOAT .)


state 312

    (201) TIPO_CAMPO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 389


state 313

    (202) TIPO_CAMPO -> CHARACTER . VARYING PARIZQ EXPNUMERICA PARDER
    (204) TIPO_CAMPO -> CHARACTER . PARIZQ EXPNUMERICA PARDER

    VARYING         shift and go to state 390
    PARIZQ          shift and go to state 391


state 314

    (203) TIPO_CAMPO -> VARCHAR . PARIZQ EXPNUMERICA PARDER

    PARIZQ          shift and go to state 392


state 315

    (205) TIPO_CAMPO -> CHAR . PARIZQ EXPNUMERICA PARDER

    PARIZQ          shift and go to state 393


state 316

    (206) TIPO_CAMPO -> TEXT .

    NOT             reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    PRIMARY         reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    DEFAULT         reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    NULL            reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    CONSTRAINT      reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    COMA            reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    UNIQUE          reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    FOREIGN         reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    ID              reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    PARDER          reduce using rule 206 (TIPO_CAMPO -> TEXT .)
    PUNTOCOMA       reduce using rule 206 (TIPO_CAMPO -> TEXT .)


state 317

    (207) TIPO_CAMPO -> BOOLEAN .

    NOT             reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    PRIMARY         reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    DEFAULT         reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    NULL            reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    CONSTRAINT      reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    COMA            reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    UNIQUE          reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    FOREIGN         reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    ID              reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    PARDER          reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 207 (TIPO_CAMPO -> BOOLEAN .)


state 318

    (177) LISTA2 -> CONSTRAINT ID . UNIQUE
    (178) LISTA2 -> CONSTRAINT ID . UNIQUE COMA
    (179) LISTA2 -> CONSTRAINT ID . CHECK PARIZQ CONDICIONES PARDER
    (180) LISTA2 -> CONSTRAINT ID . CHECK PARIZQ CONDICIONES PARDER COMA
    (183) LISTA2 -> CONSTRAINT ID . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER
    (184) LISTA2 -> CONSTRAINT ID . PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA

    UNIQUE          shift and go to state 394
    CHECK           shift and go to state 395
    PRIMARY         shift and go to state 396


state 319

    (181) LISTA2 -> UNIQUE PARIZQ . LISTA_DE_IDS PARDER COMA
    (182) LISTA2 -> UNIQUE PARIZQ . LISTA_DE_IDS PARDER
    (189) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (190) LISTA_DE_IDS -> . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    ID              shift and go to state 399

    LISTA_DE_IDS                   shift and go to state 397
    LISTA_ID_                      shift and go to state 398

state 320

    (185) LISTA2 -> PRIMARY KEY . PARIZQ LISTA_DE_IDS PARDER COMA
    (187) LISTA2 -> PRIMARY KEY . PARIZQ LISTA_DE_IDS PARDER

    PARIZQ          shift and go to state 400


state 321

    (186) LISTA2 -> FOREIGN KEY . PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (188) LISTA2 -> FOREIGN KEY . PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER

    PARIZQ          shift and go to state 401


state 322

    (259) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE . MODE_DATABASE
    (266) MODE_DATABASE -> . MODE IGUAL ENTERO
    (267) MODE_DATABASE -> .

    MODE            shift and go to state 403
    SELECT          reduce using rule 267 (MODE_DATABASE -> .)
    CREATE          reduce using rule 267 (MODE_DATABASE -> .)
    INSERT          reduce using rule 267 (MODE_DATABASE -> .)
    UPDATE          reduce using rule 267 (MODE_DATABASE -> .)
    DELETE          reduce using rule 267 (MODE_DATABASE -> .)
    DROP            reduce using rule 267 (MODE_DATABASE -> .)
    ALTER           reduce using rule 267 (MODE_DATABASE -> .)
    SHOW            reduce using rule 267 (MODE_DATABASE -> .)
    $end            reduce using rule 267 (MODE_DATABASE -> .)

    MODE_DATABASE                  shift and go to state 402

state 323

    (264) OWNER_DATABASE -> OWNER . IGUAL ID

    IGUAL           shift and go to state 404


state 324

    (262) IF_NOT_EXISTIS -> IF NOT EXISTS .

    ID              reduce using rule 262 (IF_NOT_EXISTIS -> IF NOT EXISTS .)


state 325

    (224) DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .

    SELECT          reduce using rule 224 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    CREATE          reduce using rule 224 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    INSERT          reduce using rule 224 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    UPDATE          reduce using rule 224 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    DELETE          reduce using rule 224 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    DROP            reduce using rule 224 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    ALTER           reduce using rule 224 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    SHOW            reduce using rule 224 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)
    $end            reduce using rule 224 (DML_COMANDOS -> INSERT INTO NOMBRES_TABLAS DEFAULT VALUES PUNTOCOMA .)


state 326

    (292) EXPNUMERICA -> PARIZQ . EXPNUMERICA PARDER
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 405

state 327

    (226) DATOS -> VALUES PARIZQ VALORES . PARDER
    (231) VALORES -> VALORES . VALOR
    (233) VALOR -> . EXPRESION_GLOBAL COMA
    (234) VALOR -> . EXPRESION_GLOBAL
    (254) EXPRESION_GLOBAL -> . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARDER          shift and go to state 406
    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    VALOR                          shift and go to state 407
    EXPRESION_GLOBAL               shift and go to state 329
    EXPNUMERICA                    shift and go to state 330

state 328

    (232) VALORES -> VALOR .

    PARDER          reduce using rule 232 (VALORES -> VALOR .)
    PARIZQ          reduce using rule 232 (VALORES -> VALOR .)
    ID              reduce using rule 232 (VALORES -> VALOR .)
    ENTERO          reduce using rule 232 (VALORES -> VALOR .)
    FLOTANTE        reduce using rule 232 (VALORES -> VALOR .)


state 329

    (233) VALOR -> EXPRESION_GLOBAL . COMA
    (234) VALOR -> EXPRESION_GLOBAL .

    COMA            shift and go to state 408
    PARDER          reduce using rule 234 (VALOR -> EXPRESION_GLOBAL .)
    PARIZQ          reduce using rule 234 (VALOR -> EXPRESION_GLOBAL .)
    ID              reduce using rule 234 (VALOR -> EXPRESION_GLOBAL .)
    ENTERO          reduce using rule 234 (VALOR -> EXPRESION_GLOBAL .)
    FLOTANTE        reduce using rule 234 (VALOR -> EXPRESION_GLOBAL .)


state 330

    (254) EXPRESION_GLOBAL -> EXPNUMERICA .
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    COMA            reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    PARDER          reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    PARIZQ          reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    ID              reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    ENTERO          reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    FLOTANTE        reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    WHERE           reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    EXISTS          reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    CADENADOBLE     reduce using rule 254 (EXPRESION_GLOBAL -> EXPNUMERICA .)
    MAS             shift and go to state 409
    MENOS           shift and go to state 410
    ASTERISCO       shift and go to state 411
    DIVISION        shift and go to state 412
    PORCENTAJE      shift and go to state 413


state 331

    (293) EXPNUMERICA -> ID .

    MAS             reduce using rule 293 (EXPNUMERICA -> ID .)
    MENOS           reduce using rule 293 (EXPNUMERICA -> ID .)
    ASTERISCO       reduce using rule 293 (EXPNUMERICA -> ID .)
    DIVISION        reduce using rule 293 (EXPNUMERICA -> ID .)
    PORCENTAJE      reduce using rule 293 (EXPNUMERICA -> ID .)
    COMA            reduce using rule 293 (EXPNUMERICA -> ID .)
    PARDER          reduce using rule 293 (EXPNUMERICA -> ID .)
    PARIZQ          reduce using rule 293 (EXPNUMERICA -> ID .)
    ID              reduce using rule 293 (EXPNUMERICA -> ID .)
    ENTERO          reduce using rule 293 (EXPNUMERICA -> ID .)
    FLOTANTE        reduce using rule 293 (EXPNUMERICA -> ID .)
    WHERE           reduce using rule 293 (EXPNUMERICA -> ID .)
    PUNTOCOMA       reduce using rule 293 (EXPNUMERICA -> ID .)
    EXISTS          reduce using rule 293 (EXPNUMERICA -> ID .)
    CADENASIMPLE    reduce using rule 293 (EXPNUMERICA -> ID .)
    CADENADOBLE     reduce using rule 293 (EXPNUMERICA -> ID .)


state 332

    (294) EXPNUMERICA -> ENTERO .

    MAS             reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    MENOS           reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    ASTERISCO       reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    DIVISION        reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    PORCENTAJE      reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    COMA            reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    PARDER          reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    PARIZQ          reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    ID              reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    ENTERO          reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    FLOTANTE        reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    WHERE           reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    PUNTOCOMA       reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    EXISTS          reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    CADENASIMPLE    reduce using rule 294 (EXPNUMERICA -> ENTERO .)
    CADENADOBLE     reduce using rule 294 (EXPNUMERICA -> ENTERO .)


state 333

    (295) EXPNUMERICA -> FLOTANTE .

    MAS             reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    MENOS           reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    ASTERISCO       reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    DIVISION        reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    PORCENTAJE      reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    COMA            reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    PARDER          reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    PARIZQ          reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    ID              reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    ENTERO          reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    FLOTANTE        reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    WHERE           reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    EXISTS          reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    CADENASIMPLE    reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)
    CADENADOBLE     reduce using rule 295 (EXPNUMERICA -> FLOTANTE .)


state 334

    (225) DATOS -> PARIZQ COLUMNAS PARDER . VALUES PARIZQ VALORES PARDER

    VALUES          shift and go to state 414


state 335

    (227) COLUMNAS -> COLUMNAS COLUMNA .

    PARDER          reduce using rule 227 (COLUMNAS -> COLUMNAS COLUMNA .)
    ID              reduce using rule 227 (COLUMNAS -> COLUMNAS COLUMNA .)


state 336

    (229) COLUMNA -> ID COMA .

    PARDER          reduce using rule 229 (COLUMNA -> ID COMA .)
    ID              reduce using rule 229 (COLUMNA -> ID COMA .)


state 337

    (239) CAMPO -> NOMBRES_TABLAS PUNTO ID . IGUAL EXPRESION_GLOBAL
    (240) CAMPO -> NOMBRES_TABLAS PUNTO ID . IGUAL EXPRESION_GLOBAL C

    IGUAL           shift and go to state 415


state 338

    (235) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES . PUNTOCOMA
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    PUNTOCOMA       shift and go to state 416
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 339

    (241) CAMPO -> ID IGUAL EXPRESION_GLOBAL .
    (242) CAMPO -> ID IGUAL EXPRESION_GLOBAL . C
    (243) C -> . COMA CAMPO

    WHERE           reduce using rule 241 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    PUNTOCOMA       reduce using rule 241 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    ID              reduce using rule 241 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    PARIZQ          reduce using rule 241 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    EXISTS          reduce using rule 241 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    ENTERO          reduce using rule 241 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    FLOTANTE        reduce using rule 241 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    CADENASIMPLE    reduce using rule 241 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    CADENADOBLE     reduce using rule 241 (CAMPO -> ID IGUAL EXPRESION_GLOBAL .)
    COMA            shift and go to state 418

    C                              shift and go to state 417

state 340

    (244) DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .

    SELECT          reduce using rule 244 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    CREATE          reduce using rule 244 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    INSERT          reduce using rule 244 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    UPDATE          reduce using rule 244 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    DELETE          reduce using rule 244 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    DROP            reduce using rule 244 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    ALTER           reduce using rule 244 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    SHOW            reduce using rule 244 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)
    $end            reduce using rule 244 (DML_COMANDOS -> DELETE FROM NOMBRES_TABLAS WHERE CONDICIONES PUNTOCOMA .)


state 341

    (251) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID . SET NOT NULL PUNTOCOMA

    SET             shift and go to state 419


state 342

    (247) DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID . TIPO_CAMPO PUNTOCOMA
    (193) TIPO_CAMPO -> . SMALLINT
    (194) TIPO_CAMPO -> . INTEGER
    (195) TIPO_CAMPO -> . INT
    (196) TIPO_CAMPO -> . BIGINT
    (197) TIPO_CAMPO -> . DECIMAL
    (198) TIPO_CAMPO -> . REAL
    (199) TIPO_CAMPO -> . MONEY
    (200) TIPO_CAMPO -> . FLOAT
    (201) TIPO_CAMPO -> . DOUBLE PRECISION
    (202) TIPO_CAMPO -> . CHARACTER VARYING PARIZQ EXPNUMERICA PARDER
    (203) TIPO_CAMPO -> . VARCHAR PARIZQ EXPNUMERICA PARDER
    (204) TIPO_CAMPO -> . CHARACTER PARIZQ EXPNUMERICA PARDER
    (205) TIPO_CAMPO -> . CHAR PARIZQ EXPNUMERICA PARDER
    (206) TIPO_CAMPO -> . TEXT
    (207) TIPO_CAMPO -> . BOOLEAN

    SMALLINT        shift and go to state 304
    INTEGER         shift and go to state 305
    INT             shift and go to state 306
    BIGINT          shift and go to state 307
    DECIMAL         shift and go to state 308
    REAL            shift and go to state 309
    MONEY           shift and go to state 310
    FLOAT           shift and go to state 311
    DOUBLE          shift and go to state 312
    CHARACTER       shift and go to state 313
    VARCHAR         shift and go to state 314
    CHAR            shift and go to state 315
    TEXT            shift and go to state 316
    BOOLEAN         shift and go to state 317

    TIPO_CAMPO                     shift and go to state 420

state 343

    (252) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY . PARIZQ ID PARDER REFERENCES ID PUNTOCOMA

    PARIZQ          shift and go to state 421


state 344

    (253) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID . UNIQUE PARIZQ ID PARDER PUNTOCOMA

    UNIQUE          shift and go to state 422


state 345

    (248) DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC . PUNTOCOMA

    PUNTOCOMA       shift and go to state 423


state 346

    (250) DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 424


state 347

    (249) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID . TO ID PUNTOCOMA

    TO              shift and go to state 425


state 348

    (272) ALTER_DATABASE_OP -> RENAME TO ID .

    SELECT          reduce using rule 272 (ALTER_DATABASE_OP -> RENAME TO ID .)
    CREATE          reduce using rule 272 (ALTER_DATABASE_OP -> RENAME TO ID .)
    INSERT          reduce using rule 272 (ALTER_DATABASE_OP -> RENAME TO ID .)
    UPDATE          reduce using rule 272 (ALTER_DATABASE_OP -> RENAME TO ID .)
    DELETE          reduce using rule 272 (ALTER_DATABASE_OP -> RENAME TO ID .)
    DROP            reduce using rule 272 (ALTER_DATABASE_OP -> RENAME TO ID .)
    ALTER           reduce using rule 272 (ALTER_DATABASE_OP -> RENAME TO ID .)
    SHOW            reduce using rule 272 (ALTER_DATABASE_OP -> RENAME TO ID .)
    $end            reduce using rule 272 (ALTER_DATABASE_OP -> RENAME TO ID .)


state 349

    (273) ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .

    SELECT          reduce using rule 273 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    CREATE          reduce using rule 273 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    INSERT          reduce using rule 273 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    UPDATE          reduce using rule 273 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    DELETE          reduce using rule 273 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    DROP            reduce using rule 273 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    ALTER           reduce using rule 273 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    SHOW            reduce using rule 273 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    $end            reduce using rule 273 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)


state 350

    (274) ALTER_TABLE_OP_OW -> ID .

    SELECT          reduce using rule 274 (ALTER_TABLE_OP_OW -> ID .)
    CREATE          reduce using rule 274 (ALTER_TABLE_OP_OW -> ID .)
    INSERT          reduce using rule 274 (ALTER_TABLE_OP_OW -> ID .)
    UPDATE          reduce using rule 274 (ALTER_TABLE_OP_OW -> ID .)
    DELETE          reduce using rule 274 (ALTER_TABLE_OP_OW -> ID .)
    DROP            reduce using rule 274 (ALTER_TABLE_OP_OW -> ID .)
    ALTER           reduce using rule 274 (ALTER_TABLE_OP_OW -> ID .)
    SHOW            reduce using rule 274 (ALTER_TABLE_OP_OW -> ID .)
    $end            reduce using rule 274 (ALTER_TABLE_OP_OW -> ID .)


state 351

    (275) ALTER_TABLE_OP_OW -> CURRENT_USER .

    SELECT          reduce using rule 275 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    CREATE          reduce using rule 275 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    INSERT          reduce using rule 275 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    UPDATE          reduce using rule 275 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    DELETE          reduce using rule 275 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    DROP            reduce using rule 275 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    ALTER           reduce using rule 275 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    SHOW            reduce using rule 275 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    $end            reduce using rule 275 (ALTER_TABLE_OP_OW -> CURRENT_USER .)


state 352

    (276) ALTER_TABLE_OP_OW -> SESSION_USER .

    SELECT          reduce using rule 276 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    CREATE          reduce using rule 276 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    INSERT          reduce using rule 276 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    UPDATE          reduce using rule 276 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    DELETE          reduce using rule 276 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    DROP            reduce using rule 276 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    ALTER           reduce using rule 276 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    SHOW            reduce using rule 276 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    $end            reduce using rule 276 (ALTER_TABLE_OP_OW -> SESSION_USER .)


state 353

    (78) INNERR -> WHERE CONDICIONES .
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    JOIN            reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    WHERE           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    INNER           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    LEFT            reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    RIGHT           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    FULL            reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    GROUP           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    LIMIT           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    OFFSET          reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    PUNTOCOMA       reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    UNION           reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    INTERSECT       reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    EXCEPT          reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    PARDER          reduce using rule 78 (INNERR -> WHERE CONDICIONES .)
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 354

    (152) UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .

    PUNTOCOMA       reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    UNION           reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    INTERSECT       reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    EXCEPT          reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    SELECT          reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    CREATE          reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    INSERT          reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    UPDATE          reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    DELETE          reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    DROP            reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    ALTER           reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    SHOW            reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    $end            reduce using rule 152 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)


state 355

    (74) INNERR -> TIPOS_INNER JOIN TABLA_REF . ON CONDICIONES
    (76) INNERR -> TIPOS_INNER JOIN TABLA_REF . USING PARIZQ SUB_COLUMN PARDER

    ON              shift and go to state 426
    USING           shift and go to state 427


state 356

    (75) INNERR -> JOIN TABLA_REF ON . CONDICIONES
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 428
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 357

    (77) INNERR -> JOIN TABLA_REF USING . PARIZQ SUB_COLUMN PARDER

    PARIZQ          shift and go to state 429


state 358

    (91) TABLA_REF -> ID ID .

    ON              reduce using rule 91 (TABLA_REF -> ID ID .)
    USING           reduce using rule 91 (TABLA_REF -> ID ID .)


state 359

    (90) TABLA_REF -> ID AS . ID

    ID              shift and go to state 430


state 360

    (94) GROUPP -> GROUP BY EXPRE_LIST . MORE_ORDER
    (95) GROUPP -> GROUP BY EXPRE_LIST .
    (96) EXPRE_LIST -> EXPRE_LIST . EXPRES
    (111) MORE_ORDER -> . HAVING CONDICIONES
    (98) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (99) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (100) EXPRES -> . CAMPOS S2
    (101) EXPRES -> . CAMPOS
    (102) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (103) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (104) EXPRES -> . CAMPOS S2 STATE
    (105) EXPRES -> . CAMPOS STATE
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO

    GROUP           reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    JOIN            reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    WHERE           reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    LIMIT           reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    OFFSET          reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    INNER           reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    LEFT            reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    RIGHT           reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    FULL            reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    PUNTOCOMA       reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    UNION           reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    INTERSECT       reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    EXCEPT          reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    PARDER          reduce using rule 95 (GROUPP -> GROUP BY EXPRE_LIST .)
    HAVING          shift and go to state 433
    ID              shift and go to state 364
    ASTERISCO       shift and go to state 33

    MORE_ORDER                     shift and go to state 431
    EXPRES                         shift and go to state 432
    NOMBRE_T                       shift and go to state 362
    CAMPOS                         shift and go to state 363

state 361

    (97) EXPRE_LIST -> EXPRES .

    HAVING          reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    ID              reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    ASTERISCO       reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    GROUP           reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    JOIN            reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    WHERE           reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    LIMIT           reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    OFFSET          reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    INNER           reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    LEFT            reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    RIGHT           reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    FULL            reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    PUNTOCOMA       reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    UNION           reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    INTERSECT       reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    EXCEPT          reduce using rule 97 (EXPRE_LIST -> EXPRES .)
    PARDER          reduce using rule 97 (EXPRE_LIST -> EXPRES .)


state 362

    (98) EXPRES -> NOMBRE_T . PUNTO CAMPOS S2
    (99) EXPRES -> NOMBRE_T . PUNTO CAMPOS
    (102) EXPRES -> NOMBRE_T . PUNTO CAMPOS S2 STATE
    (103) EXPRES -> NOMBRE_T . PUNTO CAMPOS STATE

    PUNTO           shift and go to state 434


state 363

    (100) EXPRES -> CAMPOS . S2
    (101) EXPRES -> CAMPOS .
    (104) EXPRES -> CAMPOS . S2 STATE
    (105) EXPRES -> CAMPOS . STATE
    (106) S2 -> . COMA EXPRES
    (107) S2 -> . AS ALIAS
    (108) S2 -> . AS ALIAS COMA EXPRES
    (109) S2 -> . ALIAS
    (110) S2 -> . ALIAS COMA EXPRES
    (112) STATE -> . ASC
    (113) STATE -> . ASC NULLS FIRST
    (114) STATE -> . ASC NULLS LAST
    (115) STATE -> . DESC
    (116) STATE -> . DESC NULLS FIRST
    (117) STATE -> . DESC NULLS LAST
    (22) ALIAS -> . ID

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    HAVING          reduce using rule 101 (EXPRES -> CAMPOS .)
    ASTERISCO       reduce using rule 101 (EXPRES -> CAMPOS .)
    GROUP           reduce using rule 101 (EXPRES -> CAMPOS .)
    JOIN            reduce using rule 101 (EXPRES -> CAMPOS .)
    WHERE           reduce using rule 101 (EXPRES -> CAMPOS .)
    LIMIT           reduce using rule 101 (EXPRES -> CAMPOS .)
    OFFSET          reduce using rule 101 (EXPRES -> CAMPOS .)
    INNER           reduce using rule 101 (EXPRES -> CAMPOS .)
    LEFT            reduce using rule 101 (EXPRES -> CAMPOS .)
    RIGHT           reduce using rule 101 (EXPRES -> CAMPOS .)
    FULL            reduce using rule 101 (EXPRES -> CAMPOS .)
    PUNTOCOMA       reduce using rule 101 (EXPRES -> CAMPOS .)
    UNION           reduce using rule 101 (EXPRES -> CAMPOS .)
    INTERSECT       reduce using rule 101 (EXPRES -> CAMPOS .)
    EXCEPT          reduce using rule 101 (EXPRES -> CAMPOS .)
    PARDER          reduce using rule 101 (EXPRES -> CAMPOS .)
    COMA            shift and go to state 437
    AS              shift and go to state 438
    ASC             shift and go to state 440
    DESC            shift and go to state 441
    ID              shift and go to state 74

  ! ID              [ reduce using rule 101 (EXPRES -> CAMPOS .) ]
  ! ASC             [ reduce using rule 101 (EXPRES -> CAMPOS .) ]
  ! DESC            [ reduce using rule 101 (EXPRES -> CAMPOS .) ]

    S2                             shift and go to state 435
    STATE                          shift and go to state 436
    ALIAS                          shift and go to state 439

state 364

    (21) NOMBRE_T -> ID .
    (19) CAMPOS -> ID .

    PUNTO           reduce using rule 21 (NOMBRE_T -> ID .)
    COMA            reduce using rule 19 (CAMPOS -> ID .)
    AS              reduce using rule 19 (CAMPOS -> ID .)
    ASC             reduce using rule 19 (CAMPOS -> ID .)
    DESC            reduce using rule 19 (CAMPOS -> ID .)
    ID              reduce using rule 19 (CAMPOS -> ID .)
    HAVING          reduce using rule 19 (CAMPOS -> ID .)
    ASTERISCO       reduce using rule 19 (CAMPOS -> ID .)
    GROUP           reduce using rule 19 (CAMPOS -> ID .)
    JOIN            reduce using rule 19 (CAMPOS -> ID .)
    WHERE           reduce using rule 19 (CAMPOS -> ID .)
    LIMIT           reduce using rule 19 (CAMPOS -> ID .)
    OFFSET          reduce using rule 19 (CAMPOS -> ID .)
    INNER           reduce using rule 19 (CAMPOS -> ID .)
    LEFT            reduce using rule 19 (CAMPOS -> ID .)
    RIGHT           reduce using rule 19 (CAMPOS -> ID .)
    FULL            reduce using rule 19 (CAMPOS -> ID .)
    PUNTOCOMA       reduce using rule 19 (CAMPOS -> ID .)
    UNION           reduce using rule 19 (CAMPOS -> ID .)
    INTERSECT       reduce using rule 19 (CAMPOS -> ID .)
    EXCEPT          reduce using rule 19 (CAMPOS -> ID .)
    PARDER          reduce using rule 19 (CAMPOS -> ID .)


state 365

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .
    (150) UNIONS -> UNIONS . UNIONN
    (152) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (153) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (154) UNIONN -> . PUNTOCOMA
    (155) COMPORTAMIENTO -> . UNION
    (156) COMPORTAMIENTO -> . INTERSECT
    (157) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    CREATE          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    INSERT          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    UPDATE          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DELETE          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DROP            reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    ALTER           reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    SHOW            reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    $end            reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PUNTOCOMA       shift and go to state 184
    UNION           shift and go to state 188
    INTERSECT       shift and go to state 189
    EXCEPT          shift and go to state 190

  ! PUNTOCOMA       [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! UNION           [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! INTERSECT       [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! EXCEPT          [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]

    UNIONN                         shift and go to state 263
    COMPORTAMIENTO                 shift and go to state 183

state 366

    (281) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE . PARDER PUNTOCOMA

    PARDER          shift and go to state 442


state 367

    (132) AS_NO -> AS NO_N COMA . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY

    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ID              shift and go to state 77
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    QUERY                          shift and go to state 443
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75

state 368

    (134) AS_NO -> NO_N COMA QUERY .
    (125) SUBQUERYS -> QUERY .

  ! reduce/reduce conflict for PARIZQ resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for EXISTS resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for ID resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for ENTERO resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for CADENASIMPLE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for CADENADOBLE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for IN resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for NOT resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for IGUAL resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MAYOR resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MENOR resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 125 (SUBQUERYS -> QUERY .)
    FROM            reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    ASTERISCO       reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    CASE            reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    GREATEST        reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    LEAST           reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    SET             reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    DEFAULT         reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    VALUES          reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    WHERE           reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    PUNTOCOMA       reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    UNION           reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    INTERSECT       reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    EXCEPT          reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    JOIN            reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    GROUP           reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    LIMIT           reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    OFFSET          reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    INNER           reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    LEFT            reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    RIGHT           reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    FULL            reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    PUNTO           reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    PARDER          reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    AND             reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    OR              reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    THEN            reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    ELSE            reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    END             reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    WHEN            reduce using rule 134 (AS_NO -> NO_N COMA QUERY .)
    PARIZQ          reduce using rule 125 (SUBQUERYS -> QUERY .)
    EXISTS          reduce using rule 125 (SUBQUERYS -> QUERY .)
    ID              reduce using rule 125 (SUBQUERYS -> QUERY .)
    ENTERO          reduce using rule 125 (SUBQUERYS -> QUERY .)
    FLOTANTE        reduce using rule 125 (SUBQUERYS -> QUERY .)
    CADENASIMPLE    reduce using rule 125 (SUBQUERYS -> QUERY .)
    CADENADOBLE     reduce using rule 125 (SUBQUERYS -> QUERY .)
    IN              reduce using rule 125 (SUBQUERYS -> QUERY .)
    NOT             reduce using rule 125 (SUBQUERYS -> QUERY .)
    IGUAL           reduce using rule 125 (SUBQUERYS -> QUERY .)
    DIFERENTE       reduce using rule 125 (SUBQUERYS -> QUERY .)
    MAYOR           reduce using rule 125 (SUBQUERYS -> QUERY .)
    MENOR           reduce using rule 125 (SUBQUERYS -> QUERY .)
    MENORIGUAL      reduce using rule 125 (SUBQUERYS -> QUERY .)
    MAYORIGUAL      reduce using rule 125 (SUBQUERYS -> QUERY .)

  ! PARIZQ          [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! EXISTS          [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! ID              [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! ENTERO          [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! FLOTANTE        [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! CADENASIMPLE    [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! CADENADOBLE     [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! IN              [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! NOT             [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! IGUAL           [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! DIFERENTE       [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! MAYOR           [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! MENOR           [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! MENORIGUAL      [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]
  ! MAYORIGUAL      [ reduce using rule 134 (AS_NO -> NO_N COMA QUERY .) ]


state 369

    (146) QUE_SUBS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO .

    PARDER          reduce using rule 146 (QUE_SUBS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO .)


state 370

    (148) QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS . CUERPO
    (149) QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS .
    (29) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (38) CUERPO -> . WHERE CONDICIONES
    (39) CUERPO -> . MORES
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (40) MORES -> . MORES MOREE
    (41) MORES -> . MOREE
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (42) MOREE -> . INNERS
    (43) MOREE -> . GROUPS
    (44) MOREE -> . LIMITS
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (72) INNERS -> . INNERS INNERR
    (73) INNERS -> . INNERR
    (92) GROUPS -> . GROUPS GROUPP
    (93) GROUPS -> . GROUPP
    (118) LIMITS -> . LIMITS LIMITT
    (119) LIMITS -> . LIMITT
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (74) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (75) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (76) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (77) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (78) INNERR -> . WHERE CONDICIONES
    (94) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (95) GROUPP -> . GROUP BY EXPRE_LIST
    (120) LIMITT -> . LIMIT EXPRE_NUM
    (121) LIMITT -> . OFFSET EXPRE_NUM
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (81) TIPOS_INNER -> . INNER OUTER
    (82) TIPOS_INNER -> . INNER
    (83) TIPOS_INNER -> . LEFT OUTER
    (84) TIPOS_INNER -> . LEFT
    (85) TIPOS_INNER -> . RIGHT OUTER
    (86) TIPOS_INNER -> . RIGHT
    (87) TIPOS_INNER -> . FULL OUTER
    (88) TIPOS_INNER -> . FULL
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    PARDER          reduce using rule 149 (QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS .)
    WHERE           shift and go to state 179
    ID              shift and go to state 54
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    JOIN            shift and go to state 195
    GROUP           shift and go to state 196
    LIMIT           shift and go to state 197
    OFFSET          shift and go to state 198
    INNER           shift and go to state 199
    LEFT            shift and go to state 200
    RIGHT           shift and go to state 201
    FULL            shift and go to state 202
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    CUERPO                         shift and go to state 444
    TABLA                          shift and go to state 100
    MORES                          shift and go to state 180
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    MOREE                          shift and go to state 182
    QUERY                          shift and go to state 38
    INNERS                         shift and go to state 185
    GROUPS                         shift and go to state 186
    LIMITS                         shift and go to state 187
    ATE_QUE                        shift and go to state 39
    INNERR                         shift and go to state 191
    GROUPP                         shift and go to state 192
    LIMITT                         shift and go to state 193
    EXPRESIONNE                    shift and go to state 36
    TIPOS_INNER                    shift and go to state 194
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 371

    (286) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE . PARDER PUNTOCOMA

    PARDER          shift and go to state 445


state 372

    (161) CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .

    FROM            reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    ID              reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    ASTERISCO       reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    CASE            reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    GREATEST        reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    LEAST           reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    PARIZQ          reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    EXISTS          reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    ENTERO          reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    FLOTANTE        reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    CADENASIMPLE    reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)
    CADENADOBLE     reduce using rule 161 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE END .)


state 373

    (162) CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE . EXPRESIONNE END
    (169) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE ELSE . EXPRESIONNE THEN EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 446
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 374

    (168) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE THEN EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    WHEN            reduce using rule 168 (WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE THEN EXPRESIONNE .)
    END             reduce using rule 168 (WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE THEN EXPRESIONNE .)
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 375

    (169) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE . THEN EXPRESIONNE
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    THEN            shift and go to state 447
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 376

    (53) OTRO_LOGICO -> SIMBOLO_LOGICO . CONDICIONES
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 448
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 377

    (47) CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .

    THEN            reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    ID              reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    ENTERO          reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    FLOTANTE        reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    CADENASIMPLE    reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    CADENADOBLE     reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    PARIZQ          reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    NOT             reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    EXISTS          reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    PUNTOCOMA       reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    UNION           reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    INTERSECT       reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    EXCEPT          reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    JOIN            reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    WHERE           reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    INNER           reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    LEFT            reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    RIGHT           reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    FULL            reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    GROUP           reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    LIMIT           reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    OFFSET          reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    PARDER          reduce using rule 47 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)


state 378

    (170) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .

    SELECT          reduce using rule 170 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    CREATE          reduce using rule 170 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    INSERT          reduce using rule 170 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 170 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    DELETE          reduce using rule 170 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    DROP            reduce using rule 170 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    ALTER           reduce using rule 170 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    SHOW            reduce using rule 170 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    $end            reduce using rule 170 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)


state 379

    (171) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS . PARIZQ ID PARDER PUNTOCOMA

    PARIZQ          shift and go to state 449


state 380

    (175) LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE . COMA
    (176) LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .

    COMA            shift and go to state 450
    CONSTRAINT      reduce using rule 176 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    UNIQUE          reduce using rule 176 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    PRIMARY         reduce using rule 176 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    FOREIGN         reduce using rule 176 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    ID              reduce using rule 176 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    PARDER          reduce using rule 176 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)


state 381

    (208) VALIDACIONES_CREATE_TABLE -> LISTA3 .
    (211) LISTA3 -> LISTA3 . VALIDACION_CAMPO_CREATE
    (212) VALIDACION_CAMPO_CREATE -> . NOT NULL
    (213) VALIDACION_CAMPO_CREATE -> . PRIMARY KEY
    (214) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENASIMPLE
    (215) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENADOBLE
    (216) VALIDACION_CAMPO_CREATE -> . DEFAULT DECIMAL
    (217) VALIDACION_CAMPO_CREATE -> . DEFAULT ENTERO
    (218) VALIDACION_CAMPO_CREATE -> . DEFAULT ID
    (220) VALIDACION_CAMPO_CREATE -> . NULL
    (221) VALIDACION_CAMPO_CREATE -> . CONSTRAINT ID UNIQUE
    (222) VALIDACION_CAMPO_CREATE -> . CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER

  ! shift/reduce conflict for PRIMARY resolved as shift
  ! shift/reduce conflict for CONSTRAINT resolved as shift
    COMA            reduce using rule 208 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    UNIQUE          reduce using rule 208 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    FOREIGN         reduce using rule 208 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    ID              reduce using rule 208 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    PARDER          reduce using rule 208 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    NOT             shift and go to state 384
    PRIMARY         shift and go to state 386
    DEFAULT         shift and go to state 387
    NULL            shift and go to state 385
    CONSTRAINT      shift and go to state 388

  ! CONSTRAINT      [ reduce using rule 208 (VALIDACIONES_CREATE_TABLE -> LISTA3 .) ]
  ! PRIMARY         [ reduce using rule 208 (VALIDACIONES_CREATE_TABLE -> LISTA3 .) ]

    VALIDACION_CAMPO_CREATE        shift and go to state 451

state 382

    (209) LISTA3 -> VALIDACION_CAMPO_CREATE .

    NOT             reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    PRIMARY         reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    DEFAULT         reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    NULL            reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    CONSTRAINT      reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    COMA            reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    UNIQUE          reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    FOREIGN         reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    ID              reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    PARDER          reduce using rule 209 (LISTA3 -> VALIDACION_CAMPO_CREATE .)


state 383

    (210) LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .

    NOT             reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    PRIMARY         reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    DEFAULT         reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    NULL            reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    CONSTRAINT      reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    COMA            reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    UNIQUE          reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    FOREIGN         reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    ID              reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    PARDER          reduce using rule 210 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)


state 384

    (212) VALIDACION_CAMPO_CREATE -> NOT . NULL

    NULL            shift and go to state 452


state 385

    (220) VALIDACION_CAMPO_CREATE -> NULL .

    NOT             reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)
    PRIMARY         reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)
    DEFAULT         reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)
    NULL            reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)
    CONSTRAINT      reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)
    COMA            reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)
    UNIQUE          reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)
    FOREIGN         reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)
    ID              reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)
    PARDER          reduce using rule 220 (VALIDACION_CAMPO_CREATE -> NULL .)


state 386

    (213) VALIDACION_CAMPO_CREATE -> PRIMARY . KEY

    KEY             shift and go to state 453


state 387

    (214) VALIDACION_CAMPO_CREATE -> DEFAULT . CADENASIMPLE
    (215) VALIDACION_CAMPO_CREATE -> DEFAULT . CADENADOBLE
    (216) VALIDACION_CAMPO_CREATE -> DEFAULT . DECIMAL
    (217) VALIDACION_CAMPO_CREATE -> DEFAULT . ENTERO
    (218) VALIDACION_CAMPO_CREATE -> DEFAULT . ID

    CADENASIMPLE    shift and go to state 454
    CADENADOBLE     shift and go to state 455
    DECIMAL         shift and go to state 456
    ENTERO          shift and go to state 457
    ID              shift and go to state 458


state 388

    (221) VALIDACION_CAMPO_CREATE -> CONSTRAINT . ID UNIQUE
    (222) VALIDACION_CAMPO_CREATE -> CONSTRAINT . ID CHECK PARIZQ CONDICIONES PARDER

    ID              shift and go to state 459


state 389

    (201) TIPO_CAMPO -> DOUBLE PRECISION .

    NOT             reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    PRIMARY         reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    DEFAULT         reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    NULL            reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    CONSTRAINT      reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    COMA            reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    UNIQUE          reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    FOREIGN         reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    ID              reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    PARDER          reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)
    PUNTOCOMA       reduce using rule 201 (TIPO_CAMPO -> DOUBLE PRECISION .)


state 390

    (202) TIPO_CAMPO -> CHARACTER VARYING . PARIZQ EXPNUMERICA PARDER

    PARIZQ          shift and go to state 460


state 391

    (204) TIPO_CAMPO -> CHARACTER PARIZQ . EXPNUMERICA PARDER
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 461

state 392

    (203) TIPO_CAMPO -> VARCHAR PARIZQ . EXPNUMERICA PARDER
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 462

state 393

    (205) TIPO_CAMPO -> CHAR PARIZQ . EXPNUMERICA PARDER
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 463

state 394

    (177) LISTA2 -> CONSTRAINT ID UNIQUE .
    (178) LISTA2 -> CONSTRAINT ID UNIQUE . COMA

    CONSTRAINT      reduce using rule 177 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 177 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 177 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    FOREIGN         reduce using rule 177 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    ID              reduce using rule 177 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    PARDER          reduce using rule 177 (LISTA2 -> CONSTRAINT ID UNIQUE .)
    COMA            shift and go to state 464


state 395

    (179) LISTA2 -> CONSTRAINT ID CHECK . PARIZQ CONDICIONES PARDER
    (180) LISTA2 -> CONSTRAINT ID CHECK . PARIZQ CONDICIONES PARDER COMA

    PARIZQ          shift and go to state 465


state 396

    (183) LISTA2 -> CONSTRAINT ID PRIMARY . KEY PARIZQ LISTA_DE_IDS PARDER
    (184) LISTA2 -> CONSTRAINT ID PRIMARY . KEY PARIZQ LISTA_DE_IDS PARDER COMA

    KEY             shift and go to state 466


state 397

    (181) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS . PARDER COMA
    (182) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS . PARDER
    (189) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    PARDER          shift and go to state 467
    ID              shift and go to state 399

    LISTA_ID_                      shift and go to state 468

state 398

    (190) LISTA_DE_IDS -> LISTA_ID_ .

    PARDER          reduce using rule 190 (LISTA_DE_IDS -> LISTA_ID_ .)
    ID              reduce using rule 190 (LISTA_DE_IDS -> LISTA_ID_ .)


state 399

    (191) LISTA_ID_ -> ID . COMA
    (192) LISTA_ID_ -> ID .

    COMA            shift and go to state 469
    PARDER          reduce using rule 192 (LISTA_ID_ -> ID .)
    ID              reduce using rule 192 (LISTA_ID_ -> ID .)


state 400

    (185) LISTA2 -> PRIMARY KEY PARIZQ . LISTA_DE_IDS PARDER COMA
    (187) LISTA2 -> PRIMARY KEY PARIZQ . LISTA_DE_IDS PARDER
    (189) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (190) LISTA_DE_IDS -> . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    ID              shift and go to state 399

    LISTA_DE_IDS                   shift and go to state 470
    LISTA_ID_                      shift and go to state 398

state 401

    (186) LISTA2 -> FOREIGN KEY PARIZQ . LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (188) LISTA2 -> FOREIGN KEY PARIZQ . LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
    (189) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (190) LISTA_DE_IDS -> . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    ID              shift and go to state 399

    LISTA_DE_IDS                   shift and go to state 471
    LISTA_ID_                      shift and go to state 398

state 402

    (259) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .

    SELECT          reduce using rule 259 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    CREATE          reduce using rule 259 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    INSERT          reduce using rule 259 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    UPDATE          reduce using rule 259 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    DELETE          reduce using rule 259 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    DROP            reduce using rule 259 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    ALTER           reduce using rule 259 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    SHOW            reduce using rule 259 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    $end            reduce using rule 259 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)


state 403

    (266) MODE_DATABASE -> MODE . IGUAL ENTERO

    IGUAL           shift and go to state 472


state 404

    (264) OWNER_DATABASE -> OWNER IGUAL . ID

    ID              shift and go to state 473


state 405

    (292) EXPNUMERICA -> PARIZQ EXPNUMERICA . PARDER
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 474
    MAS             shift and go to state 409
    MENOS           shift and go to state 410
    ASTERISCO       shift and go to state 411
    DIVISION        shift and go to state 412
    PORCENTAJE      shift and go to state 413


state 406

    (226) DATOS -> VALUES PARIZQ VALORES PARDER .

    PUNTOCOMA       reduce using rule 226 (DATOS -> VALUES PARIZQ VALORES PARDER .)


state 407

    (231) VALORES -> VALORES VALOR .

    PARDER          reduce using rule 231 (VALORES -> VALORES VALOR .)
    PARIZQ          reduce using rule 231 (VALORES -> VALORES VALOR .)
    ID              reduce using rule 231 (VALORES -> VALORES VALOR .)
    ENTERO          reduce using rule 231 (VALORES -> VALORES VALOR .)
    FLOTANTE        reduce using rule 231 (VALORES -> VALORES VALOR .)


state 408

    (233) VALOR -> EXPRESION_GLOBAL COMA .

    PARDER          reduce using rule 233 (VALOR -> EXPRESION_GLOBAL COMA .)
    PARIZQ          reduce using rule 233 (VALOR -> EXPRESION_GLOBAL COMA .)
    ID              reduce using rule 233 (VALOR -> EXPRESION_GLOBAL COMA .)
    ENTERO          reduce using rule 233 (VALOR -> EXPRESION_GLOBAL COMA .)
    FLOTANTE        reduce using rule 233 (VALOR -> EXPRESION_GLOBAL COMA .)


state 409

    (287) EXPNUMERICA -> EXPNUMERICA MAS . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 475

state 410

    (288) EXPNUMERICA -> EXPNUMERICA MENOS . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 476

state 411

    (289) EXPNUMERICA -> EXPNUMERICA ASTERISCO . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 477

state 412

    (290) EXPNUMERICA -> EXPNUMERICA DIVISION . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 478

state 413

    (291) EXPNUMERICA -> EXPNUMERICA PORCENTAJE . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 479

state 414

    (225) DATOS -> PARIZQ COLUMNAS PARDER VALUES . PARIZQ VALORES PARDER

    PARIZQ          shift and go to state 480


state 415

    (239) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL . EXPRESION_GLOBAL
    (240) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL . EXPRESION_GLOBAL C
    (254) EXPRESION_GLOBAL -> . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPRESION_GLOBAL               shift and go to state 481
    EXPNUMERICA                    shift and go to state 330

state 416

    (235) DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .

    SELECT          reduce using rule 235 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    CREATE          reduce using rule 235 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    INSERT          reduce using rule 235 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    UPDATE          reduce using rule 235 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    DELETE          reduce using rule 235 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    DROP            reduce using rule 235 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    ALTER           reduce using rule 235 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    SHOW            reduce using rule 235 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)
    $end            reduce using rule 235 (DML_COMANDOS -> UPDATE NOMBRES_TABLAS SET CAMPOSN WHERE CONDICIONES PUNTOCOMA .)


state 417

    (242) CAMPO -> ID IGUAL EXPRESION_GLOBAL C .

    WHERE           reduce using rule 242 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    PUNTOCOMA       reduce using rule 242 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    ID              reduce using rule 242 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    PARIZQ          reduce using rule 242 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    EXISTS          reduce using rule 242 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    ENTERO          reduce using rule 242 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    FLOTANTE        reduce using rule 242 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    CADENASIMPLE    reduce using rule 242 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)
    CADENADOBLE     reduce using rule 242 (CAMPO -> ID IGUAL EXPRESION_GLOBAL C .)


state 418

    (243) C -> COMA . CAMPO
    (239) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL
    (240) CAMPO -> . NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C
    (241) CAMPO -> . ID IGUAL EXPRESION_GLOBAL
    (242) CAMPO -> . ID IGUAL EXPRESION_GLOBAL C
    (29) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (30) NOMBRES_TABLAS -> . TABLA
    (31) TABLA -> . NOMBRE_T
    (32) TABLA -> . NOMBRE_T S1
    (33) TABLA -> . SUBQUERYS
    (21) NOMBRE_T -> . ID
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 160
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45

    CAMPO                          shift and go to state 482
    NOMBRES_TABLAS                 shift and go to state 157
    TABLA                          shift and go to state 51
    NOMBRE_T                       shift and go to state 52
    SUBQUERYS                      shift and go to state 53
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39
    EXPRESIONNE                    shift and go to state 36
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42

state 419

    (251) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET . NOT NULL PUNTOCOMA

    NOT             shift and go to state 483


state 420

    (247) DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 484


state 421

    (252) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ . ID PARDER REFERENCES ID PUNTOCOMA

    ID              shift and go to state 485


state 422

    (253) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE . PARIZQ ID PARDER PUNTOCOMA

    PARIZQ          shift and go to state 486


state 423

    (248) DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .

    SELECT          reduce using rule 248 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    CREATE          reduce using rule 248 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    INSERT          reduce using rule 248 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    UPDATE          reduce using rule 248 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    DELETE          reduce using rule 248 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    DROP            reduce using rule 248 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    ALTER           reduce using rule 248 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    SHOW            reduce using rule 248 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)
    $end            reduce using rule 248 (DML_COMANDOS -> ALTER TABLE ID DROP COLUMN CAMPOSC PUNTOCOMA .)


state 424

    (250) DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .

    SELECT          reduce using rule 250 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    CREATE          reduce using rule 250 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    INSERT          reduce using rule 250 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    UPDATE          reduce using rule 250 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    DELETE          reduce using rule 250 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    DROP            reduce using rule 250 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    ALTER           reduce using rule 250 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    SHOW            reduce using rule 250 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)
    $end            reduce using rule 250 (DML_COMANDOS -> ALTER TABLE ID DROP CONSTRAINT ID PUNTOCOMA .)


state 425

    (249) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO . ID PUNTOCOMA

    ID              shift and go to state 487


state 426

    (74) INNERR -> TIPOS_INNER JOIN TABLA_REF ON . CONDICIONES
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 488
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 427

    (76) INNERR -> TIPOS_INNER JOIN TABLA_REF USING . PARIZQ SUB_COLUMN PARDER

    PARIZQ          shift and go to state 489


state 428

    (75) INNERR -> JOIN TABLA_REF ON CONDICIONES .
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    JOIN            reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    WHERE           reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    INNER           reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    LEFT            reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    RIGHT           reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    FULL            reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    GROUP           reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    LIMIT           reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    OFFSET          reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    PUNTOCOMA       reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    UNION           reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    INTERSECT       reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    EXCEPT          reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    PARDER          reduce using rule 75 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 429

    (77) INNERR -> JOIN TABLA_REF USING PARIZQ . SUB_COLUMN PARDER
    (79) SUB_COLUMN -> . JOIN EXPRESIONNE
    (80) SUB_COLUMN -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    JOIN            shift and go to state 490
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    SUB_COLUMN                     shift and go to state 491
    EXPRESIONNE                    shift and go to state 492
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 430

    (90) TABLA_REF -> ID AS ID .

    ON              reduce using rule 90 (TABLA_REF -> ID AS ID .)
    USING           reduce using rule 90 (TABLA_REF -> ID AS ID .)


state 431

    (94) GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .

    GROUP           reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    JOIN            reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    WHERE           reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    LIMIT           reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    OFFSET          reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    INNER           reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    LEFT            reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    RIGHT           reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    FULL            reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    PUNTOCOMA       reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    UNION           reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    INTERSECT       reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    EXCEPT          reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    PARDER          reduce using rule 94 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)


state 432

    (96) EXPRE_LIST -> EXPRE_LIST EXPRES .

    HAVING          reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    ID              reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    ASTERISCO       reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    GROUP           reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    JOIN            reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    WHERE           reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    LIMIT           reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    OFFSET          reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    INNER           reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    LEFT            reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    RIGHT           reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    FULL            reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    PUNTOCOMA       reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    UNION           reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    INTERSECT       reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    EXCEPT          reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    PARDER          reduce using rule 96 (EXPRE_LIST -> EXPRE_LIST EXPRES .)


state 433

    (111) MORE_ORDER -> HAVING . CONDICIONES
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 493
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 434

    (98) EXPRES -> NOMBRE_T PUNTO . CAMPOS S2
    (99) EXPRES -> NOMBRE_T PUNTO . CAMPOS
    (102) EXPRES -> NOMBRE_T PUNTO . CAMPOS S2 STATE
    (103) EXPRES -> NOMBRE_T PUNTO . CAMPOS STATE
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO

    ID              shift and go to state 125
    ASTERISCO       shift and go to state 33

    CAMPOS                         shift and go to state 494

state 435

    (100) EXPRES -> CAMPOS S2 .
    (104) EXPRES -> CAMPOS S2 . STATE
    (112) STATE -> . ASC
    (113) STATE -> . ASC NULLS FIRST
    (114) STATE -> . ASC NULLS LAST
    (115) STATE -> . DESC
    (116) STATE -> . DESC NULLS FIRST
    (117) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    ID              reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    ASTERISCO       reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    GROUP           reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    JOIN            reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    WHERE           reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    LIMIT           reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    OFFSET          reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    INNER           reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    LEFT            reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    RIGHT           reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    FULL            reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    PUNTOCOMA       reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    UNION           reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    INTERSECT       reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    EXCEPT          reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    PARDER          reduce using rule 100 (EXPRES -> CAMPOS S2 .)
    ASC             shift and go to state 440
    DESC            shift and go to state 441

  ! ASC             [ reduce using rule 100 (EXPRES -> CAMPOS S2 .) ]
  ! DESC            [ reduce using rule 100 (EXPRES -> CAMPOS S2 .) ]

    STATE                          shift and go to state 495

state 436

    (105) EXPRES -> CAMPOS STATE .

    HAVING          reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    ID              reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    ASTERISCO       reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    GROUP           reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    JOIN            reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    WHERE           reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    LIMIT           reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    OFFSET          reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    INNER           reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    LEFT            reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    RIGHT           reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    FULL            reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    PUNTOCOMA       reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    UNION           reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    INTERSECT       reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    EXCEPT          reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    PARDER          reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    ASC             reduce using rule 105 (EXPRES -> CAMPOS STATE .)
    DESC            reduce using rule 105 (EXPRES -> CAMPOS STATE .)


state 437

    (106) S2 -> COMA . EXPRES
    (98) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (99) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (100) EXPRES -> . CAMPOS S2
    (101) EXPRES -> . CAMPOS
    (102) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (103) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (104) EXPRES -> . CAMPOS S2 STATE
    (105) EXPRES -> . CAMPOS STATE
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO

    ID              shift and go to state 364
    ASTERISCO       shift and go to state 33

    EXPRES                         shift and go to state 496
    NOMBRE_T                       shift and go to state 362
    CAMPOS                         shift and go to state 363

state 438

    (107) S2 -> AS . ALIAS
    (108) S2 -> AS . ALIAS COMA EXPRES
    (22) ALIAS -> . ID

    ID              shift and go to state 74

    ALIAS                          shift and go to state 497

state 439

    (109) S2 -> ALIAS .
    (110) S2 -> ALIAS . COMA EXPRES

    ASC             reduce using rule 109 (S2 -> ALIAS .)
    DESC            reduce using rule 109 (S2 -> ALIAS .)
    HAVING          reduce using rule 109 (S2 -> ALIAS .)
    ID              reduce using rule 109 (S2 -> ALIAS .)
    ASTERISCO       reduce using rule 109 (S2 -> ALIAS .)
    GROUP           reduce using rule 109 (S2 -> ALIAS .)
    JOIN            reduce using rule 109 (S2 -> ALIAS .)
    WHERE           reduce using rule 109 (S2 -> ALIAS .)
    LIMIT           reduce using rule 109 (S2 -> ALIAS .)
    OFFSET          reduce using rule 109 (S2 -> ALIAS .)
    INNER           reduce using rule 109 (S2 -> ALIAS .)
    LEFT            reduce using rule 109 (S2 -> ALIAS .)
    RIGHT           reduce using rule 109 (S2 -> ALIAS .)
    FULL            reduce using rule 109 (S2 -> ALIAS .)
    PUNTOCOMA       reduce using rule 109 (S2 -> ALIAS .)
    UNION           reduce using rule 109 (S2 -> ALIAS .)
    INTERSECT       reduce using rule 109 (S2 -> ALIAS .)
    EXCEPT          reduce using rule 109 (S2 -> ALIAS .)
    PARDER          reduce using rule 109 (S2 -> ALIAS .)
    COMA            shift and go to state 498


state 440

    (112) STATE -> ASC .
    (113) STATE -> ASC . NULLS FIRST
    (114) STATE -> ASC . NULLS LAST

    HAVING          reduce using rule 112 (STATE -> ASC .)
    ID              reduce using rule 112 (STATE -> ASC .)
    ASTERISCO       reduce using rule 112 (STATE -> ASC .)
    GROUP           reduce using rule 112 (STATE -> ASC .)
    JOIN            reduce using rule 112 (STATE -> ASC .)
    WHERE           reduce using rule 112 (STATE -> ASC .)
    LIMIT           reduce using rule 112 (STATE -> ASC .)
    OFFSET          reduce using rule 112 (STATE -> ASC .)
    INNER           reduce using rule 112 (STATE -> ASC .)
    LEFT            reduce using rule 112 (STATE -> ASC .)
    RIGHT           reduce using rule 112 (STATE -> ASC .)
    FULL            reduce using rule 112 (STATE -> ASC .)
    PUNTOCOMA       reduce using rule 112 (STATE -> ASC .)
    UNION           reduce using rule 112 (STATE -> ASC .)
    INTERSECT       reduce using rule 112 (STATE -> ASC .)
    EXCEPT          reduce using rule 112 (STATE -> ASC .)
    PARDER          reduce using rule 112 (STATE -> ASC .)
    ASC             reduce using rule 112 (STATE -> ASC .)
    DESC            reduce using rule 112 (STATE -> ASC .)
    NULLS           shift and go to state 499


state 441

    (115) STATE -> DESC .
    (116) STATE -> DESC . NULLS FIRST
    (117) STATE -> DESC . NULLS LAST

    HAVING          reduce using rule 115 (STATE -> DESC .)
    ID              reduce using rule 115 (STATE -> DESC .)
    ASTERISCO       reduce using rule 115 (STATE -> DESC .)
    GROUP           reduce using rule 115 (STATE -> DESC .)
    JOIN            reduce using rule 115 (STATE -> DESC .)
    WHERE           reduce using rule 115 (STATE -> DESC .)
    LIMIT           reduce using rule 115 (STATE -> DESC .)
    OFFSET          reduce using rule 115 (STATE -> DESC .)
    INNER           reduce using rule 115 (STATE -> DESC .)
    LEFT            reduce using rule 115 (STATE -> DESC .)
    RIGHT           reduce using rule 115 (STATE -> DESC .)
    FULL            reduce using rule 115 (STATE -> DESC .)
    PUNTOCOMA       reduce using rule 115 (STATE -> DESC .)
    UNION           reduce using rule 115 (STATE -> DESC .)
    INTERSECT       reduce using rule 115 (STATE -> DESC .)
    EXCEPT          reduce using rule 115 (STATE -> DESC .)
    PARDER          reduce using rule 115 (STATE -> DESC .)
    ASC             reduce using rule 115 (STATE -> DESC .)
    DESC            reduce using rule 115 (STATE -> DESC .)
    NULLS           shift and go to state 500


state 442

    (281) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 501


state 443

    (132) AS_NO -> AS NO_N COMA QUERY .
    (125) SUBQUERYS -> QUERY .

  ! reduce/reduce conflict for PARIZQ resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for EXISTS resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for ID resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for ENTERO resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for CADENASIMPLE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for CADENADOBLE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for IN resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for NOT resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for IGUAL resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MAYOR resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MENOR resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 125 (SUBQUERYS -> QUERY .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 125 (SUBQUERYS -> QUERY .)
    FROM            reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    ASTERISCO       reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    CASE            reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    GREATEST        reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    LEAST           reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    SET             reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    DEFAULT         reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    VALUES          reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    WHERE           reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    PUNTOCOMA       reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    UNION           reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    INTERSECT       reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    EXCEPT          reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    JOIN            reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    GROUP           reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    LIMIT           reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    OFFSET          reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    INNER           reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    LEFT            reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    RIGHT           reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    FULL            reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    PUNTO           reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    PARDER          reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    AND             reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    OR              reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    THEN            reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    ELSE            reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    END             reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    WHEN            reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .)
    PARIZQ          reduce using rule 125 (SUBQUERYS -> QUERY .)
    EXISTS          reduce using rule 125 (SUBQUERYS -> QUERY .)
    ID              reduce using rule 125 (SUBQUERYS -> QUERY .)
    ENTERO          reduce using rule 125 (SUBQUERYS -> QUERY .)
    FLOTANTE        reduce using rule 125 (SUBQUERYS -> QUERY .)
    CADENASIMPLE    reduce using rule 125 (SUBQUERYS -> QUERY .)
    CADENADOBLE     reduce using rule 125 (SUBQUERYS -> QUERY .)
    IN              reduce using rule 125 (SUBQUERYS -> QUERY .)
    NOT             reduce using rule 125 (SUBQUERYS -> QUERY .)
    IGUAL           reduce using rule 125 (SUBQUERYS -> QUERY .)
    DIFERENTE       reduce using rule 125 (SUBQUERYS -> QUERY .)
    MAYOR           reduce using rule 125 (SUBQUERYS -> QUERY .)
    MENOR           reduce using rule 125 (SUBQUERYS -> QUERY .)
    MENORIGUAL      reduce using rule 125 (SUBQUERYS -> QUERY .)
    MAYORIGUAL      reduce using rule 125 (SUBQUERYS -> QUERY .)

  ! PARIZQ          [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! EXISTS          [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! ID              [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! ENTERO          [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! FLOTANTE        [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! CADENASIMPLE    [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! CADENADOBLE     [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! IN              [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! NOT             [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! IGUAL           [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! DIFERENTE       [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! MAYOR           [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! MENOR           [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! MENORIGUAL      [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]
  ! MAYORIGUAL      [ reduce using rule 132 (AS_NO -> AS NO_N COMA QUERY .) ]


state 444

    (148) QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO .

    PARDER          reduce using rule 148 (QUE_SUBS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO .)


state 445

    (286) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 502


state 446

    (162) CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE . END
    (169) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE . THEN EXPRESIONNE
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    END             shift and go to state 503
    THEN            shift and go to state 447
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 447

    (169) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE THEN . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 504
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 448

    (53) OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CADENASIMPLE resolved as shift
  ! shift/reduce conflict for CADENADOBLE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for EXISTS resolved as shift
    THEN            reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    PUNTOCOMA       reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    UNION           reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    INTERSECT       reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    EXCEPT          reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    JOIN            reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    WHERE           reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    INNER           reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    LEFT            reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    RIGHT           reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    FULL            reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    GROUP           reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    LIMIT           reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    OFFSET          reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    PARDER          reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

  ! NOT             [ reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! ID              [ reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! ENTERO          [ reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! FLOTANTE        [ reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! CADENASIMPLE    [ reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! CADENADOBLE     [ reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! PARIZQ          [ reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! EXISTS          [ reduce using rule 53 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 449

    (171) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ . ID PARDER PUNTOCOMA

    ID              shift and go to state 505


state 450

    (175) LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .

    CONSTRAINT      reduce using rule 175 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    UNIQUE          reduce using rule 175 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    PRIMARY         reduce using rule 175 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    FOREIGN         reduce using rule 175 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    ID              reduce using rule 175 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    PARDER          reduce using rule 175 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)


state 451

    (211) LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .

    NOT             reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    PRIMARY         reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    DEFAULT         reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    NULL            reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    CONSTRAINT      reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    COMA            reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    UNIQUE          reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    FOREIGN         reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    ID              reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)
    PARDER          reduce using rule 211 (LISTA3 -> LISTA3 VALIDACION_CAMPO_CREATE .)


state 452

    (212) VALIDACION_CAMPO_CREATE -> NOT NULL .

    NOT             reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    PRIMARY         reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    DEFAULT         reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    NULL            reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    CONSTRAINT      reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    COMA            reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    UNIQUE          reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    FOREIGN         reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    ID              reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    PARDER          reduce using rule 212 (VALIDACION_CAMPO_CREATE -> NOT NULL .)


state 453

    (213) VALIDACION_CAMPO_CREATE -> PRIMARY KEY .

    NOT             reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    PRIMARY         reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    DEFAULT         reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    NULL            reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    CONSTRAINT      reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    COMA            reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    UNIQUE          reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    FOREIGN         reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    ID              reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)
    PARDER          reduce using rule 213 (VALIDACION_CAMPO_CREATE -> PRIMARY KEY .)


state 454

    (214) VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .

    NOT             reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    PRIMARY         reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    DEFAULT         reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    NULL            reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    CONSTRAINT      reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    COMA            reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    UNIQUE          reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    FOREIGN         reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    ID              reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    PARDER          reduce using rule 214 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)


state 455

    (215) VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .

    NOT             reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    PRIMARY         reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    DEFAULT         reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    NULL            reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    CONSTRAINT      reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    COMA            reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    UNIQUE          reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    FOREIGN         reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    ID              reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    PARDER          reduce using rule 215 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)


state 456

    (216) VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .

    NOT             reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    PRIMARY         reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    DEFAULT         reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    NULL            reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    CONSTRAINT      reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    COMA            reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    UNIQUE          reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    FOREIGN         reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    ID              reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    PARDER          reduce using rule 216 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)


state 457

    (217) VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .

    NOT             reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    PRIMARY         reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    DEFAULT         reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    NULL            reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    CONSTRAINT      reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    COMA            reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    UNIQUE          reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    FOREIGN         reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    ID              reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    PARDER          reduce using rule 217 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)


state 458

    (218) VALIDACION_CAMPO_CREATE -> DEFAULT ID .

    NOT             reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    PRIMARY         reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    DEFAULT         reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    NULL            reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    CONSTRAINT      reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    COMA            reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    UNIQUE          reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    FOREIGN         reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    ID              reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)
    PARDER          reduce using rule 218 (VALIDACION_CAMPO_CREATE -> DEFAULT ID .)


state 459

    (221) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID . UNIQUE
    (222) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID . CHECK PARIZQ CONDICIONES PARDER

    UNIQUE          shift and go to state 506
    CHECK           shift and go to state 507


state 460

    (202) TIPO_CAMPO -> CHARACTER VARYING PARIZQ . EXPNUMERICA PARDER
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    EXPNUMERICA                    shift and go to state 508

state 461

    (204) TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA . PARDER
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 509
    MAS             shift and go to state 409
    MENOS           shift and go to state 410
    ASTERISCO       shift and go to state 411
    DIVISION        shift and go to state 412
    PORCENTAJE      shift and go to state 413


state 462

    (203) TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA . PARDER
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 510
    MAS             shift and go to state 409
    MENOS           shift and go to state 410
    ASTERISCO       shift and go to state 411
    DIVISION        shift and go to state 412
    PORCENTAJE      shift and go to state 413


state 463

    (205) TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA . PARDER
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 511
    MAS             shift and go to state 409
    MENOS           shift and go to state 410
    ASTERISCO       shift and go to state 411
    DIVISION        shift and go to state 412
    PORCENTAJE      shift and go to state 413


state 464

    (178) LISTA2 -> CONSTRAINT ID UNIQUE COMA .

    CONSTRAINT      reduce using rule 178 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    UNIQUE          reduce using rule 178 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    PRIMARY         reduce using rule 178 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    FOREIGN         reduce using rule 178 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    ID              reduce using rule 178 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)
    PARDER          reduce using rule 178 (LISTA2 -> CONSTRAINT ID UNIQUE COMA .)


state 465

    (179) LISTA2 -> CONSTRAINT ID CHECK PARIZQ . CONDICIONES PARDER
    (180) LISTA2 -> CONSTRAINT ID CHECK PARIZQ . CONDICIONES PARDER COMA
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 512
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 466

    (183) LISTA2 -> CONSTRAINT ID PRIMARY KEY . PARIZQ LISTA_DE_IDS PARDER
    (184) LISTA2 -> CONSTRAINT ID PRIMARY KEY . PARIZQ LISTA_DE_IDS PARDER COMA

    PARIZQ          shift and go to state 513


state 467

    (181) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER . COMA
    (182) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .

    COMA            shift and go to state 514
    CONSTRAINT      reduce using rule 182 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    UNIQUE          reduce using rule 182 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    PRIMARY         reduce using rule 182 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    FOREIGN         reduce using rule 182 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    ID              reduce using rule 182 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)
    PARDER          reduce using rule 182 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER .)


state 468

    (189) LISTA_DE_IDS -> LISTA_DE_IDS LISTA_ID_ .

    PARDER          reduce using rule 189 (LISTA_DE_IDS -> LISTA_DE_IDS LISTA_ID_ .)
    ID              reduce using rule 189 (LISTA_DE_IDS -> LISTA_DE_IDS LISTA_ID_ .)


state 469

    (191) LISTA_ID_ -> ID COMA .

    PARDER          reduce using rule 191 (LISTA_ID_ -> ID COMA .)
    ID              reduce using rule 191 (LISTA_ID_ -> ID COMA .)


state 470

    (185) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS . PARDER COMA
    (187) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS . PARDER
    (189) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    PARDER          shift and go to state 515
    ID              shift and go to state 399

    LISTA_ID_                      shift and go to state 468

state 471

    (186) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS . PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (188) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS . PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER
    (189) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    PARDER          shift and go to state 516
    ID              shift and go to state 399

    LISTA_ID_                      shift and go to state 468

state 472

    (266) MODE_DATABASE -> MODE IGUAL . ENTERO

    ENTERO          shift and go to state 517


state 473

    (264) OWNER_DATABASE -> OWNER IGUAL ID .

    MODE            reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)
    SELECT          reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)
    CREATE          reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)
    INSERT          reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)
    UPDATE          reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)
    DELETE          reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)
    DROP            reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)
    ALTER           reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)
    SHOW            reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)
    $end            reduce using rule 264 (OWNER_DATABASE -> OWNER IGUAL ID .)


state 474

    (292) EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .

    MAS             reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    MENOS           reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    ASTERISCO       reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    DIVISION        reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    PORCENTAJE      reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    PARIZQ          reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    ENTERO          reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    FLOTANTE        reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    WHERE           reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    EXISTS          reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    CADENASIMPLE    reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)
    CADENADOBLE     reduce using rule 292 (EXPNUMERICA -> PARIZQ EXPNUMERICA PARDER .)


state 475

    (287) EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    MAS             reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    MENOS           reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    PORCENTAJE      reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    COMA            reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    PARDER          reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    PARIZQ          reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    ID              reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    ENTERO          reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    FLOTANTE        reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    WHERE           reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    EXISTS          reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    CADENADOBLE     reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .)
    ASTERISCO       shift and go to state 411
    DIVISION        shift and go to state 412

  ! ASTERISCO       [ reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .) ]
  ! DIVISION        [ reduce using rule 287 (EXPNUMERICA -> EXPNUMERICA MAS EXPNUMERICA .) ]
  ! MAS             [ shift and go to state 409 ]
  ! MENOS           [ shift and go to state 410 ]
  ! PORCENTAJE      [ shift and go to state 413 ]


state 476

    (288) EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    MAS             reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    MENOS           reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    PORCENTAJE      reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    COMA            reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    PARDER          reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    PARIZQ          reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    ID              reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    ENTERO          reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    FLOTANTE        reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    WHERE           reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    EXISTS          reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    CADENADOBLE     reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .)
    ASTERISCO       shift and go to state 411
    DIVISION        shift and go to state 412

  ! ASTERISCO       [ reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .) ]
  ! DIVISION        [ reduce using rule 288 (EXPNUMERICA -> EXPNUMERICA MENOS EXPNUMERICA .) ]
  ! MAS             [ shift and go to state 409 ]
  ! MENOS           [ shift and go to state 410 ]
  ! PORCENTAJE      [ shift and go to state 413 ]


state 477

    (289) EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    MAS             reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    MENOS           reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    ASTERISCO       reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    DIVISION        reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    PORCENTAJE      reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    COMA            reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    PARDER          reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    PARIZQ          reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    ID              reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    ENTERO          reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    FLOTANTE        reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    WHERE           reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    EXISTS          reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)
    CADENADOBLE     reduce using rule 289 (EXPNUMERICA -> EXPNUMERICA ASTERISCO EXPNUMERICA .)

  ! MAS             [ shift and go to state 409 ]
  ! MENOS           [ shift and go to state 410 ]
  ! ASTERISCO       [ shift and go to state 411 ]
  ! DIVISION        [ shift and go to state 412 ]
  ! PORCENTAJE      [ shift and go to state 413 ]


state 478

    (290) EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    MAS             reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    MENOS           reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    ASTERISCO       reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    DIVISION        reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    PORCENTAJE      reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    COMA            reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    PARDER          reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    PARIZQ          reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    ID              reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    ENTERO          reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    FLOTANTE        reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    WHERE           reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    EXISTS          reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)
    CADENADOBLE     reduce using rule 290 (EXPNUMERICA -> EXPNUMERICA DIVISION EXPNUMERICA .)

  ! MAS             [ shift and go to state 409 ]
  ! MENOS           [ shift and go to state 410 ]
  ! ASTERISCO       [ shift and go to state 411 ]
  ! DIVISION        [ shift and go to state 412 ]
  ! PORCENTAJE      [ shift and go to state 413 ]


state 479

    (291) EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ASTERISCO resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for PORCENTAJE resolved as shift
    COMA            reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    PARDER          reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    PARIZQ          reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    ID              reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    ENTERO          reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    FLOTANTE        reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    WHERE           reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    PUNTOCOMA       reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    EXISTS          reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    CADENASIMPLE    reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    CADENADOBLE     reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .)
    MAS             shift and go to state 409
    MENOS           shift and go to state 410
    ASTERISCO       shift and go to state 411
    DIVISION        shift and go to state 412
    PORCENTAJE      shift and go to state 413

  ! MAS             [ reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]
  ! MENOS           [ reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]
  ! ASTERISCO       [ reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]
  ! DIVISION        [ reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]
  ! PORCENTAJE      [ reduce using rule 291 (EXPNUMERICA -> EXPNUMERICA PORCENTAJE EXPNUMERICA .) ]


state 480

    (225) DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ . VALORES PARDER
    (231) VALORES -> . VALORES VALOR
    (232) VALORES -> . VALOR
    (233) VALOR -> . EXPRESION_GLOBAL COMA
    (234) VALOR -> . EXPRESION_GLOBAL
    (254) EXPRESION_GLOBAL -> . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    VALORES                        shift and go to state 518
    VALOR                          shift and go to state 328
    EXPRESION_GLOBAL               shift and go to state 329
    EXPNUMERICA                    shift and go to state 330

state 481

    (239) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .
    (240) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL . C
    (243) C -> . COMA CAMPO

    WHERE           reduce using rule 239 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    PUNTOCOMA       reduce using rule 239 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    ID              reduce using rule 239 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    PARIZQ          reduce using rule 239 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    EXISTS          reduce using rule 239 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    ENTERO          reduce using rule 239 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    FLOTANTE        reduce using rule 239 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    CADENASIMPLE    reduce using rule 239 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    CADENADOBLE     reduce using rule 239 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL .)
    COMA            shift and go to state 418

    C                              shift and go to state 519

state 482

    (243) C -> COMA CAMPO .

    WHERE           reduce using rule 243 (C -> COMA CAMPO .)
    PUNTOCOMA       reduce using rule 243 (C -> COMA CAMPO .)
    ID              reduce using rule 243 (C -> COMA CAMPO .)
    PARIZQ          reduce using rule 243 (C -> COMA CAMPO .)
    EXISTS          reduce using rule 243 (C -> COMA CAMPO .)
    ENTERO          reduce using rule 243 (C -> COMA CAMPO .)
    FLOTANTE        reduce using rule 243 (C -> COMA CAMPO .)
    CADENASIMPLE    reduce using rule 243 (C -> COMA CAMPO .)
    CADENADOBLE     reduce using rule 243 (C -> COMA CAMPO .)


state 483

    (251) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT . NULL PUNTOCOMA

    NULL            shift and go to state 520


state 484

    (247) DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .

    SELECT          reduce using rule 247 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    CREATE          reduce using rule 247 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    INSERT          reduce using rule 247 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    UPDATE          reduce using rule 247 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    DELETE          reduce using rule 247 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    DROP            reduce using rule 247 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    ALTER           reduce using rule 247 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    SHOW            reduce using rule 247 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)
    $end            reduce using rule 247 (DML_COMANDOS -> ALTER TABLE ID ADD COLUMN ID TIPO_CAMPO PUNTOCOMA .)


state 485

    (252) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID . PARDER REFERENCES ID PUNTOCOMA

    PARDER          shift and go to state 521


state 486

    (253) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ . ID PARDER PUNTOCOMA

    ID              shift and go to state 522


state 487

    (249) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 523


state 488

    (74) INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    JOIN            reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    WHERE           reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    INNER           reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    LEFT            reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    RIGHT           reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    FULL            reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    GROUP           reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    LIMIT           reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    OFFSET          reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    PUNTOCOMA       reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    UNION           reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    INTERSECT       reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    EXCEPT          reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    PARDER          reduce using rule 74 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 489

    (76) INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ . SUB_COLUMN PARDER
    (79) SUB_COLUMN -> . JOIN EXPRESIONNE
    (80) SUB_COLUMN -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    JOIN            shift and go to state 490
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    SUB_COLUMN                     shift and go to state 524
    EXPRESIONNE                    shift and go to state 492
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 490

    (79) SUB_COLUMN -> JOIN . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    EXPRESIONNE                    shift and go to state 525
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 491

    (77) INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN . PARDER

    PARDER          shift and go to state 526


state 492

    (80) SUB_COLUMN -> EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    PARDER          reduce using rule 80 (SUB_COLUMN -> EXPRESIONNE .)
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 493

    (111) MORE_ORDER -> HAVING CONDICIONES .
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    GROUP           reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    JOIN            reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    WHERE           reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    LIMIT           reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    OFFSET          reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    INNER           reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    LEFT            reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    RIGHT           reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    FULL            reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    PUNTOCOMA       reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    UNION           reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    INTERSECT       reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    EXCEPT          reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    PARDER          reduce using rule 111 (MORE_ORDER -> HAVING CONDICIONES .)
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 494

    (98) EXPRES -> NOMBRE_T PUNTO CAMPOS . S2
    (99) EXPRES -> NOMBRE_T PUNTO CAMPOS .
    (102) EXPRES -> NOMBRE_T PUNTO CAMPOS . S2 STATE
    (103) EXPRES -> NOMBRE_T PUNTO CAMPOS . STATE
    (106) S2 -> . COMA EXPRES
    (107) S2 -> . AS ALIAS
    (108) S2 -> . AS ALIAS COMA EXPRES
    (109) S2 -> . ALIAS
    (110) S2 -> . ALIAS COMA EXPRES
    (112) STATE -> . ASC
    (113) STATE -> . ASC NULLS FIRST
    (114) STATE -> . ASC NULLS LAST
    (115) STATE -> . DESC
    (116) STATE -> . DESC NULLS FIRST
    (117) STATE -> . DESC NULLS LAST
    (22) ALIAS -> . ID

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    HAVING          reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    ASTERISCO       reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    GROUP           reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    JOIN            reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    WHERE           reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    LIMIT           reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    OFFSET          reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    INNER           reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    LEFT            reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    RIGHT           reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    FULL            reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    PUNTOCOMA       reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    UNION           reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    INTERSECT       reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    EXCEPT          reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    PARDER          reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    COMA            shift and go to state 437
    AS              shift and go to state 438
    ASC             shift and go to state 440
    DESC            shift and go to state 441
    ID              shift and go to state 74

  ! ID              [ reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .) ]
  ! ASC             [ reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .) ]
  ! DESC            [ reduce using rule 99 (EXPRES -> NOMBRE_T PUNTO CAMPOS .) ]

    S2                             shift and go to state 527
    STATE                          shift and go to state 528
    ALIAS                          shift and go to state 439

state 495

    (104) EXPRES -> CAMPOS S2 STATE .

    HAVING          reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    ID              reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    ASTERISCO       reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    GROUP           reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    JOIN            reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    WHERE           reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    LIMIT           reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    OFFSET          reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    INNER           reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    LEFT            reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    RIGHT           reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    FULL            reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    PUNTOCOMA       reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    UNION           reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    INTERSECT       reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    EXCEPT          reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    PARDER          reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    ASC             reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)
    DESC            reduce using rule 104 (EXPRES -> CAMPOS S2 STATE .)


state 496

    (106) S2 -> COMA EXPRES .

    ASC             reduce using rule 106 (S2 -> COMA EXPRES .)
    DESC            reduce using rule 106 (S2 -> COMA EXPRES .)
    HAVING          reduce using rule 106 (S2 -> COMA EXPRES .)
    ID              reduce using rule 106 (S2 -> COMA EXPRES .)
    ASTERISCO       reduce using rule 106 (S2 -> COMA EXPRES .)
    GROUP           reduce using rule 106 (S2 -> COMA EXPRES .)
    JOIN            reduce using rule 106 (S2 -> COMA EXPRES .)
    WHERE           reduce using rule 106 (S2 -> COMA EXPRES .)
    LIMIT           reduce using rule 106 (S2 -> COMA EXPRES .)
    OFFSET          reduce using rule 106 (S2 -> COMA EXPRES .)
    INNER           reduce using rule 106 (S2 -> COMA EXPRES .)
    LEFT            reduce using rule 106 (S2 -> COMA EXPRES .)
    RIGHT           reduce using rule 106 (S2 -> COMA EXPRES .)
    FULL            reduce using rule 106 (S2 -> COMA EXPRES .)
    PUNTOCOMA       reduce using rule 106 (S2 -> COMA EXPRES .)
    UNION           reduce using rule 106 (S2 -> COMA EXPRES .)
    INTERSECT       reduce using rule 106 (S2 -> COMA EXPRES .)
    EXCEPT          reduce using rule 106 (S2 -> COMA EXPRES .)
    PARDER          reduce using rule 106 (S2 -> COMA EXPRES .)


state 497

    (107) S2 -> AS ALIAS .
    (108) S2 -> AS ALIAS . COMA EXPRES

    ASC             reduce using rule 107 (S2 -> AS ALIAS .)
    DESC            reduce using rule 107 (S2 -> AS ALIAS .)
    HAVING          reduce using rule 107 (S2 -> AS ALIAS .)
    ID              reduce using rule 107 (S2 -> AS ALIAS .)
    ASTERISCO       reduce using rule 107 (S2 -> AS ALIAS .)
    GROUP           reduce using rule 107 (S2 -> AS ALIAS .)
    JOIN            reduce using rule 107 (S2 -> AS ALIAS .)
    WHERE           reduce using rule 107 (S2 -> AS ALIAS .)
    LIMIT           reduce using rule 107 (S2 -> AS ALIAS .)
    OFFSET          reduce using rule 107 (S2 -> AS ALIAS .)
    INNER           reduce using rule 107 (S2 -> AS ALIAS .)
    LEFT            reduce using rule 107 (S2 -> AS ALIAS .)
    RIGHT           reduce using rule 107 (S2 -> AS ALIAS .)
    FULL            reduce using rule 107 (S2 -> AS ALIAS .)
    PUNTOCOMA       reduce using rule 107 (S2 -> AS ALIAS .)
    UNION           reduce using rule 107 (S2 -> AS ALIAS .)
    INTERSECT       reduce using rule 107 (S2 -> AS ALIAS .)
    EXCEPT          reduce using rule 107 (S2 -> AS ALIAS .)
    PARDER          reduce using rule 107 (S2 -> AS ALIAS .)
    COMA            shift and go to state 529


state 498

    (110) S2 -> ALIAS COMA . EXPRES
    (98) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (99) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (100) EXPRES -> . CAMPOS S2
    (101) EXPRES -> . CAMPOS
    (102) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (103) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (104) EXPRES -> . CAMPOS S2 STATE
    (105) EXPRES -> . CAMPOS STATE
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO

    ID              shift and go to state 364
    ASTERISCO       shift and go to state 33

    EXPRES                         shift and go to state 530
    NOMBRE_T                       shift and go to state 362
    CAMPOS                         shift and go to state 363

state 499

    (113) STATE -> ASC NULLS . FIRST
    (114) STATE -> ASC NULLS . LAST

    FIRST           shift and go to state 531
    LAST            shift and go to state 532


state 500

    (116) STATE -> DESC NULLS . FIRST
    (117) STATE -> DESC NULLS . LAST

    FIRST           shift and go to state 533
    LAST            shift and go to state 534


state 501

    (281) DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .

    SELECT          reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    CREATE          reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    INSERT          reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    DELETE          reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    DROP            reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    ALTER           reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    SHOW            reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    $end            reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    UNION           reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    INTERSECT       reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)
    EXCEPT          reduce using rule 281 (DQL_COMANDOS -> SELECT EXTRACT PARIZQ TIPO_TIEMPO FROM TIMESTAMP CADENASIMPLE PARDER PUNTOCOMA .)


state 502

    (286) DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .

    SELECT          reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    CREATE          reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    INSERT          reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    DELETE          reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    DROP            reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    ALTER           reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    SHOW            reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    $end            reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    UNION           reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    INTERSECT       reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)
    EXCEPT          reduce using rule 286 (DQL_COMANDOS -> SELECT DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER PUNTOCOMA .)


state 503

    (162) CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .

    FROM            reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    ID              reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    ASTERISCO       reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    CASE            reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    GREATEST        reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    LEAST           reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    PARIZQ          reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    EXISTS          reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    ENTERO          reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    FLOTANTE        reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    CADENASIMPLE    reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)
    CADENADOBLE     reduce using rule 162 (CUERPOO -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE END .)


state 504

    (169) WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    WHEN            reduce using rule 169 (WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE .)
    END             reduce using rule 169 (WHEN_UNI -> WHEN CONDICIONES EXPRESIONNE ELSE EXPRESIONNE THEN EXPRESIONNE .)
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 505

    (171) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID . PARDER PUNTOCOMA

    PARDER          shift and go to state 535


state 506

    (221) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .

    NOT             reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    DEFAULT         reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    NULL            reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    CONSTRAINT      reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    COMA            reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    FOREIGN         reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    ID              reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)
    PARDER          reduce using rule 221 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID UNIQUE .)


state 507

    (222) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK . PARIZQ CONDICIONES PARDER

    PARIZQ          shift and go to state 536


state 508

    (202) TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA . PARDER
    (287) EXPNUMERICA -> EXPNUMERICA . MAS EXPNUMERICA
    (288) EXPNUMERICA -> EXPNUMERICA . MENOS EXPNUMERICA
    (289) EXPNUMERICA -> EXPNUMERICA . ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> EXPNUMERICA . DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> EXPNUMERICA . PORCENTAJE EXPNUMERICA

    PARDER          shift and go to state 537
    MAS             shift and go to state 409
    MENOS           shift and go to state 410
    ASTERISCO       shift and go to state 411
    DIVISION        shift and go to state 412
    PORCENTAJE      shift and go to state 413


state 509

    (204) TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .

    NOT             reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    PRIMARY         reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    DEFAULT         reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    NULL            reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    CONSTRAINT      reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    UNIQUE          reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    FOREIGN         reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 204 (TIPO_CAMPO -> CHARACTER PARIZQ EXPNUMERICA PARDER .)


state 510

    (203) TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .

    NOT             reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    PRIMARY         reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    DEFAULT         reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    NULL            reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    CONSTRAINT      reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    UNIQUE          reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    FOREIGN         reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 203 (TIPO_CAMPO -> VARCHAR PARIZQ EXPNUMERICA PARDER .)


state 511

    (205) TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .

    NOT             reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    PRIMARY         reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    DEFAULT         reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    NULL            reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    CONSTRAINT      reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    UNIQUE          reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    FOREIGN         reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 205 (TIPO_CAMPO -> CHAR PARIZQ EXPNUMERICA PARDER .)


state 512

    (179) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES . PARDER
    (180) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES . PARDER COMA
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    PARDER          shift and go to state 538
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 513

    (183) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ . LISTA_DE_IDS PARDER
    (184) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ . LISTA_DE_IDS PARDER COMA
    (189) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (190) LISTA_DE_IDS -> . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    ID              shift and go to state 399

    LISTA_DE_IDS                   shift and go to state 539
    LISTA_ID_                      shift and go to state 398

state 514

    (181) LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .

    CONSTRAINT      reduce using rule 181 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    UNIQUE          reduce using rule 181 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    PRIMARY         reduce using rule 181 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    FOREIGN         reduce using rule 181 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    ID              reduce using rule 181 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)
    PARDER          reduce using rule 181 (LISTA2 -> UNIQUE PARIZQ LISTA_DE_IDS PARDER COMA .)


state 515

    (185) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER . COMA
    (187) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .

    COMA            shift and go to state 540
    CONSTRAINT      reduce using rule 187 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    UNIQUE          reduce using rule 187 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    PRIMARY         reduce using rule 187 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    FOREIGN         reduce using rule 187 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    ID              reduce using rule 187 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    PARDER          reduce using rule 187 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)


state 516

    (186) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER . REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA
    (188) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER . REFERENCES ID PARIZQ LISTA_DE_IDS PARDER

    REFERENCES      shift and go to state 541


state 517

    (266) MODE_DATABASE -> MODE IGUAL ENTERO .

    SELECT          reduce using rule 266 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    CREATE          reduce using rule 266 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    INSERT          reduce using rule 266 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    UPDATE          reduce using rule 266 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    DELETE          reduce using rule 266 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    DROP            reduce using rule 266 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    ALTER           reduce using rule 266 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    SHOW            reduce using rule 266 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    $end            reduce using rule 266 (MODE_DATABASE -> MODE IGUAL ENTERO .)


state 518

    (225) DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES . PARDER
    (231) VALORES -> VALORES . VALOR
    (233) VALOR -> . EXPRESION_GLOBAL COMA
    (234) VALOR -> . EXPRESION_GLOBAL
    (254) EXPRESION_GLOBAL -> . EXPNUMERICA
    (287) EXPNUMERICA -> . EXPNUMERICA MAS EXPNUMERICA
    (288) EXPNUMERICA -> . EXPNUMERICA MENOS EXPNUMERICA
    (289) EXPNUMERICA -> . EXPNUMERICA ASTERISCO EXPNUMERICA
    (290) EXPNUMERICA -> . EXPNUMERICA DIVISION EXPNUMERICA
    (291) EXPNUMERICA -> . EXPNUMERICA PORCENTAJE EXPNUMERICA
    (292) EXPNUMERICA -> . PARIZQ EXPNUMERICA PARDER
    (293) EXPNUMERICA -> . ID
    (294) EXPNUMERICA -> . ENTERO
    (295) EXPNUMERICA -> . FLOTANTE

    PARDER          shift and go to state 542
    PARIZQ          shift and go to state 326
    ID              shift and go to state 331
    ENTERO          shift and go to state 332
    FLOTANTE        shift and go to state 333

    VALOR                          shift and go to state 407
    EXPRESION_GLOBAL               shift and go to state 329
    EXPNUMERICA                    shift and go to state 330

state 519

    (240) CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .

    WHERE           reduce using rule 240 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    PUNTOCOMA       reduce using rule 240 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    ID              reduce using rule 240 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    PARIZQ          reduce using rule 240 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    EXISTS          reduce using rule 240 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    ENTERO          reduce using rule 240 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    FLOTANTE        reduce using rule 240 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    CADENASIMPLE    reduce using rule 240 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)
    CADENADOBLE     reduce using rule 240 (CAMPO -> NOMBRES_TABLAS PUNTO ID IGUAL EXPRESION_GLOBAL C .)


state 520

    (251) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL . PUNTOCOMA

    PUNTOCOMA       shift and go to state 543


state 521

    (252) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER . REFERENCES ID PUNTOCOMA

    REFERENCES      shift and go to state 544


state 522

    (253) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID . PARDER PUNTOCOMA

    PARDER          shift and go to state 545


state 523

    (249) DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .

    SELECT          reduce using rule 249 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    CREATE          reduce using rule 249 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    INSERT          reduce using rule 249 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    UPDATE          reduce using rule 249 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    DELETE          reduce using rule 249 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    DROP            reduce using rule 249 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    ALTER           reduce using rule 249 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    SHOW            reduce using rule 249 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)
    $end            reduce using rule 249 (DML_COMANDOS -> ALTER TABLE ID RENAME COLUMN ID TO ID PUNTOCOMA .)


state 524

    (76) INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN . PARDER

    PARDER          shift and go to state 546


state 525

    (79) SUB_COLUMN -> JOIN EXPRESIONNE .
    (137) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (138) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (140) OPCIONALESS -> . IN
    (141) OPCIONALESS -> . NOT IN
    (66) OPERADOR -> . IGUAL
    (67) OPERADOR -> . DIFERENTE
    (68) OPERADOR -> . MAYOR
    (69) OPERADOR -> . MENOR
    (70) OPERADOR -> . MENORIGUAL
    (71) OPERADOR -> . MAYORIGUAL

    PARDER          reduce using rule 79 (SUB_COLUMN -> JOIN EXPRESIONNE .)
    IN              shift and go to state 84
    NOT             shift and go to state 85
    IGUAL           shift and go to state 86
    DIFERENTE       shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MENORIGUAL      shift and go to state 90
    MAYORIGUAL      shift and go to state 91

    OPCIONALESS                    shift and go to state 82
    OPERADOR                       shift and go to state 83

state 526

    (77) INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .

    JOIN            reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    WHERE           reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INNER           reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LEFT            reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    RIGHT           reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    FULL            reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    GROUP           reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LIMIT           reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    OFFSET          reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    PUNTOCOMA       reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    UNION           reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INTERSECT       reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    EXCEPT          reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    PARDER          reduce using rule 77 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)


state 527

    (98) EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .
    (102) EXPRES -> NOMBRE_T PUNTO CAMPOS S2 . STATE
    (112) STATE -> . ASC
    (113) STATE -> . ASC NULLS FIRST
    (114) STATE -> . ASC NULLS LAST
    (115) STATE -> . DESC
    (116) STATE -> . DESC NULLS FIRST
    (117) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    ID              reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    ASTERISCO       reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    GROUP           reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    JOIN            reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    WHERE           reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    LIMIT           reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    OFFSET          reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    INNER           reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    LEFT            reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    RIGHT           reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    FULL            reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    PUNTOCOMA       reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    UNION           reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    INTERSECT       reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    EXCEPT          reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    PARDER          reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    ASC             shift and go to state 440
    DESC            shift and go to state 441

  ! ASC             [ reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .) ]
  ! DESC            [ reduce using rule 98 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .) ]

    STATE                          shift and go to state 547

state 528

    (103) EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .

    HAVING          reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    ID              reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    ASTERISCO       reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    GROUP           reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    JOIN            reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    WHERE           reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    LIMIT           reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    OFFSET          reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    INNER           reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    LEFT            reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    RIGHT           reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    FULL            reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    PUNTOCOMA       reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    UNION           reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    INTERSECT       reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    EXCEPT          reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    PARDER          reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    ASC             reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    DESC            reduce using rule 103 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)


state 529

    (108) S2 -> AS ALIAS COMA . EXPRES
    (98) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (99) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (100) EXPRES -> . CAMPOS S2
    (101) EXPRES -> . CAMPOS
    (102) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (103) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (104) EXPRES -> . CAMPOS S2 STATE
    (105) EXPRES -> . CAMPOS STATE
    (21) NOMBRE_T -> . ID
    (19) CAMPOS -> . ID
    (20) CAMPOS -> . ASTERISCO

    ID              shift and go to state 364
    ASTERISCO       shift and go to state 33

    EXPRES                         shift and go to state 548
    NOMBRE_T                       shift and go to state 362
    CAMPOS                         shift and go to state 363

state 530

    (110) S2 -> ALIAS COMA EXPRES .

    ASC             reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    DESC            reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    HAVING          reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    ID              reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    ASTERISCO       reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    GROUP           reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    JOIN            reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    WHERE           reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    LIMIT           reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    OFFSET          reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    INNER           reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    LEFT            reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    RIGHT           reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    FULL            reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    PUNTOCOMA       reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    UNION           reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    INTERSECT       reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    EXCEPT          reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)
    PARDER          reduce using rule 110 (S2 -> ALIAS COMA EXPRES .)


state 531

    (113) STATE -> ASC NULLS FIRST .

    HAVING          reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    ID              reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    ASTERISCO       reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    GROUP           reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    JOIN            reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    WHERE           reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    LIMIT           reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    OFFSET          reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    INNER           reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    LEFT            reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    RIGHT           reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    FULL            reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    PUNTOCOMA       reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    UNION           reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    INTERSECT       reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    EXCEPT          reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    PARDER          reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    ASC             reduce using rule 113 (STATE -> ASC NULLS FIRST .)
    DESC            reduce using rule 113 (STATE -> ASC NULLS FIRST .)


state 532

    (114) STATE -> ASC NULLS LAST .

    HAVING          reduce using rule 114 (STATE -> ASC NULLS LAST .)
    ID              reduce using rule 114 (STATE -> ASC NULLS LAST .)
    ASTERISCO       reduce using rule 114 (STATE -> ASC NULLS LAST .)
    GROUP           reduce using rule 114 (STATE -> ASC NULLS LAST .)
    JOIN            reduce using rule 114 (STATE -> ASC NULLS LAST .)
    WHERE           reduce using rule 114 (STATE -> ASC NULLS LAST .)
    LIMIT           reduce using rule 114 (STATE -> ASC NULLS LAST .)
    OFFSET          reduce using rule 114 (STATE -> ASC NULLS LAST .)
    INNER           reduce using rule 114 (STATE -> ASC NULLS LAST .)
    LEFT            reduce using rule 114 (STATE -> ASC NULLS LAST .)
    RIGHT           reduce using rule 114 (STATE -> ASC NULLS LAST .)
    FULL            reduce using rule 114 (STATE -> ASC NULLS LAST .)
    PUNTOCOMA       reduce using rule 114 (STATE -> ASC NULLS LAST .)
    UNION           reduce using rule 114 (STATE -> ASC NULLS LAST .)
    INTERSECT       reduce using rule 114 (STATE -> ASC NULLS LAST .)
    EXCEPT          reduce using rule 114 (STATE -> ASC NULLS LAST .)
    PARDER          reduce using rule 114 (STATE -> ASC NULLS LAST .)
    ASC             reduce using rule 114 (STATE -> ASC NULLS LAST .)
    DESC            reduce using rule 114 (STATE -> ASC NULLS LAST .)


state 533

    (116) STATE -> DESC NULLS FIRST .

    HAVING          reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    ID              reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    ASTERISCO       reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    GROUP           reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    JOIN            reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    WHERE           reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    LIMIT           reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    OFFSET          reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    INNER           reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    LEFT            reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    RIGHT           reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    FULL            reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    PUNTOCOMA       reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    UNION           reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    INTERSECT       reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    EXCEPT          reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    PARDER          reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    ASC             reduce using rule 116 (STATE -> DESC NULLS FIRST .)
    DESC            reduce using rule 116 (STATE -> DESC NULLS FIRST .)


state 534

    (117) STATE -> DESC NULLS LAST .

    HAVING          reduce using rule 117 (STATE -> DESC NULLS LAST .)
    ID              reduce using rule 117 (STATE -> DESC NULLS LAST .)
    ASTERISCO       reduce using rule 117 (STATE -> DESC NULLS LAST .)
    GROUP           reduce using rule 117 (STATE -> DESC NULLS LAST .)
    JOIN            reduce using rule 117 (STATE -> DESC NULLS LAST .)
    WHERE           reduce using rule 117 (STATE -> DESC NULLS LAST .)
    LIMIT           reduce using rule 117 (STATE -> DESC NULLS LAST .)
    OFFSET          reduce using rule 117 (STATE -> DESC NULLS LAST .)
    INNER           reduce using rule 117 (STATE -> DESC NULLS LAST .)
    LEFT            reduce using rule 117 (STATE -> DESC NULLS LAST .)
    RIGHT           reduce using rule 117 (STATE -> DESC NULLS LAST .)
    FULL            reduce using rule 117 (STATE -> DESC NULLS LAST .)
    PUNTOCOMA       reduce using rule 117 (STATE -> DESC NULLS LAST .)
    UNION           reduce using rule 117 (STATE -> DESC NULLS LAST .)
    INTERSECT       reduce using rule 117 (STATE -> DESC NULLS LAST .)
    EXCEPT          reduce using rule 117 (STATE -> DESC NULLS LAST .)
    PARDER          reduce using rule 117 (STATE -> DESC NULLS LAST .)
    ASC             reduce using rule 117 (STATE -> DESC NULLS LAST .)
    DESC            reduce using rule 117 (STATE -> DESC NULLS LAST .)


state 535

    (171) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 549


state 536

    (222) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ . CONDICIONES PARDER
    (45) CONDICIONES -> . CONDICIONES CONDICION
    (46) CONDICIONES -> . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICIONES                    shift and go to state 550
    CONDICION                      shift and go to state 135
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 537

    (202) TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .

    NOT             reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    PRIMARY         reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    DEFAULT         reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    NULL            reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    CONSTRAINT      reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    COMA            reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    UNIQUE          reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    FOREIGN         reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    ID              reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    PARDER          reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)
    PUNTOCOMA       reduce using rule 202 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ EXPNUMERICA PARDER .)


state 538

    (179) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .
    (180) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER . COMA

    CONSTRAINT      reduce using rule 179 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    UNIQUE          reduce using rule 179 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    PRIMARY         reduce using rule 179 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    FOREIGN         reduce using rule 179 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    ID              reduce using rule 179 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    PARDER          reduce using rule 179 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    COMA            shift and go to state 551


state 539

    (183) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS . PARDER
    (184) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS . PARDER COMA
    (189) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    PARDER          shift and go to state 552
    ID              shift and go to state 399

    LISTA_ID_                      shift and go to state 468

state 540

    (185) LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .

    CONSTRAINT      reduce using rule 185 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    UNIQUE          reduce using rule 185 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    PRIMARY         reduce using rule 185 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    FOREIGN         reduce using rule 185 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    ID              reduce using rule 185 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    PARDER          reduce using rule 185 (LISTA2 -> PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)


state 541

    (186) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES . ID PARIZQ LISTA_DE_IDS PARDER COMA
    (188) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES . ID PARIZQ LISTA_DE_IDS PARDER

    ID              shift and go to state 553


state 542

    (225) DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES PARDER .

    PUNTOCOMA       reduce using rule 225 (DATOS -> PARIZQ COLUMNAS PARDER VALUES PARIZQ VALORES PARDER .)


state 543

    (251) DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .

    SELECT          reduce using rule 251 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    CREATE          reduce using rule 251 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    INSERT          reduce using rule 251 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    UPDATE          reduce using rule 251 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    DELETE          reduce using rule 251 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    DROP            reduce using rule 251 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    ALTER           reduce using rule 251 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    SHOW            reduce using rule 251 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)
    $end            reduce using rule 251 (DML_COMANDOS -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PUNTOCOMA .)


state 544

    (252) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES . ID PUNTOCOMA

    ID              shift and go to state 554


state 545

    (253) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 555


state 546

    (76) INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .

    JOIN            reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    WHERE           reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INNER           reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LEFT            reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    RIGHT           reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    FULL            reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    GROUP           reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LIMIT           reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    OFFSET          reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    PUNTOCOMA       reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    UNION           reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INTERSECT       reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    EXCEPT          reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    PARDER          reduce using rule 76 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)


state 547

    (102) EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .

    HAVING          reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    ID              reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    ASTERISCO       reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    GROUP           reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    JOIN            reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    WHERE           reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    LIMIT           reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    OFFSET          reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    INNER           reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    LEFT            reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    RIGHT           reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    FULL            reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    PUNTOCOMA       reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    UNION           reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    INTERSECT       reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    EXCEPT          reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    PARDER          reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    ASC             reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    DESC            reduce using rule 102 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)


state 548

    (108) S2 -> AS ALIAS COMA EXPRES .

    ASC             reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    DESC            reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    HAVING          reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    ID              reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    ASTERISCO       reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    GROUP           reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    JOIN            reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    WHERE           reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    LIMIT           reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    OFFSET          reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    INNER           reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    LEFT            reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    RIGHT           reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    FULL            reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    PUNTOCOMA       reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    UNION           reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    INTERSECT       reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    EXCEPT          reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)
    PARDER          reduce using rule 108 (S2 -> AS ALIAS COMA EXPRES .)


state 549

    (171) DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .

    SELECT          reduce using rule 171 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    CREATE          reduce using rule 171 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    INSERT          reduce using rule 171 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 171 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    DELETE          reduce using rule 171 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    DROP            reduce using rule 171 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    ALTER           reduce using rule 171 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    SHOW            reduce using rule 171 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)
    $end            reduce using rule 171 (DML_COMANDOS -> CREATE TABLE ID PARIZQ CUERPO_CREATE_TABLE PARDER INHERITS PARIZQ ID PARDER PUNTOCOMA .)


state 550

    (222) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES . PARDER
    (45) CONDICIONES -> CONDICIONES . CONDICION
    (47) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (48) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (49) CONDICION -> . CONDICION_REL
    (50) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (51) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (52) CONDICION_REL -> . EXPRESIONNE
    (54) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (55) EXPRESIONNE -> . CAMPOSC
    (56) EXPRESIONNE -> . SUBQUERYS
    (59) SIMBOLO_NEG -> . NOT
    (60) NOMBRE_C -> . ID
    (61) CAMPOSC -> . ID
    (62) CAMPOSC -> . ENTERO
    (63) CAMPOSC -> . FLOTANTE
    (64) CAMPOSC -> . CADENASIMPLE
    (65) CAMPOSC -> . CADENADOBLE
    (124) SUBQUERYS -> . SUBQUERYS QUERY
    (125) SUBQUERYS -> . QUERY
    (126) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (127) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (128) QUERY -> . PARIZQ QUE PARDER
    (129) QUERY -> . PARIZQ QUE PARDER AS_NO
    (136) ATE_QUE -> . EXISTS
    (137) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (138) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (139) ATE_QUE -> . ID

    PARDER          shift and go to state 556
    NOT             shift and go to state 138
    ID              shift and go to state 139
    ENTERO          shift and go to state 43
    FLOTANTE        shift and go to state 44
    CADENASIMPLE    shift and go to state 24
    CADENADOBLE     shift and go to state 45
    PARIZQ          shift and go to state 23
    EXISTS          shift and go to state 40

    CONDICION                      shift and go to state 220
    CONDICION_REL                  shift and go to state 136
    EXPRESIONNE                    shift and go to state 134
    SIMBOLO_NEG                    shift and go to state 137
    NOMBRE_C                       shift and go to state 41
    CAMPOSC                        shift and go to state 42
    SUBQUERYS                      shift and go to state 75
    QUERY                          shift and go to state 38
    ATE_QUE                        shift and go to state 39

state 551

    (180) LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .

    CONSTRAINT      reduce using rule 180 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    UNIQUE          reduce using rule 180 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    PRIMARY         reduce using rule 180 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    FOREIGN         reduce using rule 180 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    ID              reduce using rule 180 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)
    PARDER          reduce using rule 180 (LISTA2 -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER COMA .)


state 552

    (183) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .
    (184) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER . COMA

    CONSTRAINT      reduce using rule 183 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    UNIQUE          reduce using rule 183 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    PRIMARY         reduce using rule 183 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    FOREIGN         reduce using rule 183 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    ID              reduce using rule 183 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    PARDER          reduce using rule 183 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER .)
    COMA            shift and go to state 557


state 553

    (186) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID . PARIZQ LISTA_DE_IDS PARDER COMA
    (188) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID . PARIZQ LISTA_DE_IDS PARDER

    PARIZQ          shift and go to state 558


state 554

    (252) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 559


state 555

    (253) DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .

    SELECT          reduce using rule 253 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    CREATE          reduce using rule 253 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    INSERT          reduce using rule 253 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    UPDATE          reduce using rule 253 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    DELETE          reduce using rule 253 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    DROP            reduce using rule 253 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    ALTER           reduce using rule 253 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    SHOW            reduce using rule 253 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)
    $end            reduce using rule 253 (DML_COMANDOS -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER PUNTOCOMA .)


state 556

    (222) VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .

    NOT             reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    PRIMARY         reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    DEFAULT         reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    NULL            reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    CONSTRAINT      reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    COMA            reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    UNIQUE          reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    FOREIGN         reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    ID              reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)
    PARDER          reduce using rule 222 (VALIDACION_CAMPO_CREATE -> CONSTRAINT ID CHECK PARIZQ CONDICIONES PARDER .)


state 557

    (184) LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .

    CONSTRAINT      reduce using rule 184 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    UNIQUE          reduce using rule 184 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    PRIMARY         reduce using rule 184 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    FOREIGN         reduce using rule 184 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    ID              reduce using rule 184 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)
    PARDER          reduce using rule 184 (LISTA2 -> CONSTRAINT ID PRIMARY KEY PARIZQ LISTA_DE_IDS PARDER COMA .)


state 558

    (186) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ . LISTA_DE_IDS PARDER COMA
    (188) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ . LISTA_DE_IDS PARDER
    (189) LISTA_DE_IDS -> . LISTA_DE_IDS LISTA_ID_
    (190) LISTA_DE_IDS -> . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    ID              shift and go to state 399

    LISTA_DE_IDS                   shift and go to state 560
    LISTA_ID_                      shift and go to state 398

state 559

    (252) DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .

    SELECT          reduce using rule 252 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    CREATE          reduce using rule 252 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    INSERT          reduce using rule 252 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    UPDATE          reduce using rule 252 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    DELETE          reduce using rule 252 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    DROP            reduce using rule 252 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    ALTER           reduce using rule 252 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    SHOW            reduce using rule 252 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)
    $end            reduce using rule 252 (DML_COMANDOS -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID PUNTOCOMA .)


state 560

    (186) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS . PARDER COMA
    (188) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS . PARDER
    (189) LISTA_DE_IDS -> LISTA_DE_IDS . LISTA_ID_
    (191) LISTA_ID_ -> . ID COMA
    (192) LISTA_ID_ -> . ID

    PARDER          shift and go to state 561
    ID              shift and go to state 399

    LISTA_ID_                      shift and go to state 468

state 561

    (186) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER . COMA
    (188) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .

    COMA            shift and go to state 562
    CONSTRAINT      reduce using rule 188 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    UNIQUE          reduce using rule 188 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    PRIMARY         reduce using rule 188 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    FOREIGN         reduce using rule 188 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    ID              reduce using rule 188 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)
    PARDER          reduce using rule 188 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER .)


state 562

    (186) LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .

    CONSTRAINT      reduce using rule 186 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    UNIQUE          reduce using rule 186 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    PRIMARY         reduce using rule 186 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    FOREIGN         reduce using rule 186 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    ID              reduce using rule 186 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)
    PARDER          reduce using rule 186 (LISTA2 -> FOREIGN KEY PARIZQ LISTA_DE_IDS PARDER REFERENCES ID PARIZQ LISTA_DE_IDS PARDER COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 29 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 31 resolved as shift
WARNING: shift/reduce conflict for EXISTS in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 31 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 31 resolved as shift
WARNING: shift/reduce conflict for CADENASIMPLE in state 31 resolved as shift
WARNING: shift/reduce conflict for CADENADOBLE in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 52 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 53 resolved as shift
WARNING: shift/reduce conflict for EXISTS in state 53 resolved as shift
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 53 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 53 resolved as shift
WARNING: shift/reduce conflict for CADENASIMPLE in state 53 resolved as shift
WARNING: shift/reduce conflict for CADENADOBLE in state 53 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 75 resolved as shift
WARNING: shift/reduce conflict for EXISTS in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 75 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 75 resolved as shift
WARNING: shift/reduce conflict for CADENASIMPLE in state 75 resolved as shift
WARNING: shift/reduce conflict for CADENADOBLE in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 120 resolved as shift
WARNING: shift/reduce conflict for ID in state 124 resolved as shift
WARNING: shift/reduce conflict for ID in state 132 resolved as shift
WARNING: shift/reduce conflict for NOT in state 134 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 178 resolved as shift
WARNING: shift/reduce conflict for UNION in state 178 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 178 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 178 resolved as shift
WARNING: shift/reduce conflict for JOIN in state 185 resolved as shift
WARNING: shift/reduce conflict for WHERE in state 185 resolved as shift
WARNING: shift/reduce conflict for INNER in state 185 resolved as shift
WARNING: shift/reduce conflict for LEFT in state 185 resolved as shift
WARNING: shift/reduce conflict for RIGHT in state 185 resolved as shift
WARNING: shift/reduce conflict for FULL in state 185 resolved as shift
WARNING: shift/reduce conflict for GROUP in state 186 resolved as shift
WARNING: shift/reduce conflict for LIMIT in state 187 resolved as shift
WARNING: shift/reduce conflict for OFFSET in state 187 resolved as shift
WARNING: shift/reduce conflict for THEN in state 219 resolved as shift
WARNING: shift/reduce conflict for NOT in state 219 resolved as shift
WARNING: shift/reduce conflict for NOT in state 225 resolved as shift
WARNING: shift/reduce conflict for ID in state 228 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 262 resolved as shift
WARNING: shift/reduce conflict for UNION in state 262 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 262 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 262 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 285 resolved as shift
WARNING: shift/reduce conflict for UNION in state 285 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 285 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 285 resolved as shift
WARNING: shift/reduce conflict for THEN in state 294 resolved as shift
WARNING: shift/reduce conflict for NOT in state 294 resolved as shift
WARNING: shift/reduce conflict for NOT in state 298 resolved as shift
WARNING: shift/reduce conflict for NOT in state 303 resolved as shift
WARNING: shift/reduce conflict for PRIMARY in state 303 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 303 resolved as shift
WARNING: shift/reduce conflict for NULL in state 303 resolved as shift
WARNING: shift/reduce conflict for CONSTRAINT in state 303 resolved as shift
WARNING: shift/reduce conflict for ASC in state 363 resolved as shift
WARNING: shift/reduce conflict for DESC in state 363 resolved as shift
WARNING: shift/reduce conflict for ID in state 363 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 365 resolved as shift
WARNING: shift/reduce conflict for UNION in state 365 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 365 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 365 resolved as shift
WARNING: shift/reduce conflict for PRIMARY in state 381 resolved as shift
WARNING: shift/reduce conflict for CONSTRAINT in state 381 resolved as shift
WARNING: shift/reduce conflict for ASC in state 435 resolved as shift
WARNING: shift/reduce conflict for DESC in state 435 resolved as shift
WARNING: shift/reduce conflict for NOT in state 448 resolved as shift
WARNING: shift/reduce conflict for ID in state 448 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 448 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 448 resolved as shift
WARNING: shift/reduce conflict for CADENASIMPLE in state 448 resolved as shift
WARNING: shift/reduce conflict for CADENADOBLE in state 448 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 448 resolved as shift
WARNING: shift/reduce conflict for EXISTS in state 448 resolved as shift
WARNING: shift/reduce conflict for MAS in state 479 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 479 resolved as shift
WARNING: shift/reduce conflict for ASTERISCO in state 479 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 479 resolved as shift
WARNING: shift/reduce conflict for PORCENTAJE in state 479 resolved as shift
WARNING: shift/reduce conflict for ASC in state 494 resolved as shift
WARNING: shift/reduce conflict for DESC in state 494 resolved as shift
WARNING: shift/reduce conflict for ID in state 494 resolved as shift
WARNING: shift/reduce conflict for ASC in state 527 resolved as shift
WARNING: shift/reduce conflict for DESC in state 527 resolved as shift
WARNING: reduce/reduce conflict in state 32 resolved using rule (CAMPOS -> ID)
WARNING: rejected rule (ATE_QUE -> ID) in state 32
WARNING: reduce/reduce conflict in state 32 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (NOMBRE_C -> ID) in state 32
WARNING: reduce/reduce conflict in state 54 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (ATE_QUE -> ID) in state 54
WARNING: reduce/reduce conflict in state 54 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (NOMBRE_C -> ID) in state 54
WARNING: reduce/reduce conflict in state 76 resolved using rule (SUBQUERYS -> SUBQUERYS QUERY)
WARNING: rejected rule (SUBQUERYS -> QUERY) in state 76
WARNING: reduce/reduce conflict in state 139 resolved using rule (CAMPOSC -> ID)
WARNING: rejected rule (ATE_QUE -> ID) in state 139
WARNING: reduce/reduce conflict in state 160 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (ATE_QUE -> ID) in state 160
WARNING: reduce/reduce conflict in state 160 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (NOMBRE_C -> ID) in state 160
WARNING: reduce/reduce conflict in state 264 resolved using rule (CUERPO -> WHERE CONDICIONES)
WARNING: rejected rule (INNERR -> WHERE CONDICIONES) in state 264
WARNING: reduce/reduce conflict in state 287 resolved using rule (SUBQUERYS -> QUERY)
WARNING: rejected rule (AS_NO -> COMA QUERY) in state 287
WARNING: reduce/reduce conflict in state 368 resolved using rule (SUBQUERYS -> QUERY)
WARNING: rejected rule (AS_NO -> NO_N COMA QUERY) in state 368
WARNING: reduce/reduce conflict in state 443 resolved using rule (SUBQUERYS -> QUERY)
WARNING: rejected rule (AS_NO -> AS NO_N COMA QUERY) in state 443
