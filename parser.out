Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIOMULTI
    COMENTARIONORMAL
    CONSTRAINT
    DELETE
    FECHA
    INSERT
    INTO
    NEGACION
    SET
    TYPE
    UPDATE
    VALUES

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INSTRUCCIONES
Rule 2     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 3     INSTRUCCIONES -> INSTRUCCION
Rule 4     INSTRUCCION -> DQL_COMANDOS
Rule 5     INSTRUCCION -> DDL_COMANDOS
Rule 6     DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
Rule 7     DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
Rule 8     DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
Rule 9     DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
Rule 10    LISTA_CAMPOS -> LISTA_CAMPOS LISTA
Rule 11    LISTA_CAMPOS -> LISTA
Rule 12    LISTA -> NOMBRE_T PUNTO CAMPOS S
Rule 13    LISTA -> NOMBRE_T PUNTO CAMPOS
Rule 14    LISTA -> CAMPOS S
Rule 15    LISTA -> CAMPOS
Rule 16    CAMPOS -> ID
Rule 17    CAMPOS -> ASTERISCO
Rule 18    NOMBRE_T -> ID
Rule 19    ALIAS -> ID
Rule 20    S -> COMA LISTA
Rule 21    S -> AS ALIAS
Rule 22    S -> AS ALIAS COMA LISTA
Rule 23    DISTINCTNT -> DISTINCT
Rule 24    NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA
Rule 25    NOMBRES_TABLAS -> TABLA
Rule 26    TABLA -> NOMBRE_T
Rule 27    TABLA -> NOMBRE_T S1
Rule 28    TABLA -> SUBQUERYS
Rule 29    S1 -> COMA TABLA
Rule 30    S1 -> AS ALIAS
Rule 31    CUERPO -> WHERE CONDICIONES
Rule 32    CUERPO -> MORES
Rule 33    MORES -> MORES MOREE
Rule 34    MORES -> MOREE
Rule 35    MOREE -> INNERS
Rule 36    MOREE -> GROUPS
Rule 37    MOREE -> LIMITS
Rule 38    CONDICIONES -> CONDICIONES CONDICION
Rule 39    CONDICIONES -> CONDICION
Rule 40    CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
Rule 41    CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
Rule 42    CONDICION -> CONDICION_REL
Rule 43    CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE
Rule 44    CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE
Rule 45    CONDICION_REL -> EXPRESIONNE
Rule 46    OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES
Rule 47    EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC
Rule 48    EXPRESIONNE -> CAMPOSC
Rule 49    SIMBOLO_LOGICO -> AND
Rule 50    SIMBOLO_LOGICO -> OR
Rule 51    SIMBOLO_NEG -> NOT
Rule 52    NOMBRE_C -> ID
Rule 53    CAMPOSC -> ID
Rule 54    CAMPOSC -> ENTERO
Rule 55    CAMPOSC -> DECIMAL
Rule 56    CAMPOSC -> CADENASIMPLE
Rule 57    CAMPOSC -> CADENADOBLE
Rule 58    OPERADOR -> IGUAL
Rule 59    OPERADOR -> DIFERENTE
Rule 60    OPERADOR -> MAYOR
Rule 61    OPERADOR -> MENOR
Rule 62    OPERADOR -> MENORIGUAL
Rule 63    OPERADOR -> MAYORIGUAL
Rule 64    INNERS -> INNERS INNERR
Rule 65    INNERS -> INNERR
Rule 66    INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
Rule 67    INNERR -> JOIN TABLA_REF ON CONDICIONES
Rule 68    INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
Rule 69    INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
Rule 70    INNERR -> WHERE CONDICIONES
Rule 71    SUB_COLUMN -> JOIN EXPRESIONNE
Rule 72    SUB_COLUMN -> EXPRESIONNE
Rule 73    TIPOS_INNER -> INNER OUTER
Rule 74    TIPOS_INNER -> INNER
Rule 75    TIPOS_INNER -> LEFT OUTER
Rule 76    TIPOS_INNER -> LEFT
Rule 77    TIPOS_INNER -> RIGHT OUTER
Rule 78    TIPOS_INNER -> RIGHT
Rule 79    TIPOS_INNER -> FULL OUTER
Rule 80    TIPOS_INNER -> FULL
Rule 81    TABLA_REF -> ID
Rule 82    TABLA_REF -> ID AS ID
Rule 83    GROUPS -> GROUPS GROUPP
Rule 84    GROUPS -> GROUPP
Rule 85    GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER
Rule 86    GROUPP -> GROUP BY EXPRE_LIST
Rule 87    EXPRE_LIST -> EXPRE_LIST EXPRES
Rule 88    EXPRE_LIST -> EXPRES
Rule 89    EXPRES -> NOMBRE_T PUNTO CAMPOS S2
Rule 90    EXPRES -> NOMBRE_T PUNTO CAMPOS
Rule 91    EXPRES -> CAMPOS S2
Rule 92    EXPRES -> CAMPOS
Rule 93    EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE
Rule 94    EXPRES -> NOMBRE_T PUNTO CAMPOS STATE
Rule 95    EXPRES -> CAMPOS S2 STATE
Rule 96    EXPRES -> CAMPOS STATE
Rule 97    S2 -> COMA EXPRES
Rule 98    S2 -> AS ALIAS
Rule 99    S2 -> AS ALIAS COMA EXPRES
Rule 100   MORE_ORDER -> HAVING CONDICIONES
Rule 101   STATE -> ASC
Rule 102   STATE -> ASC NULLS FIRST
Rule 103   STATE -> ASC NULLS LAST
Rule 104   STATE -> DESC
Rule 105   STATE -> DESC NULLS FIRST
Rule 106   STATE -> DESC NULLS LAST
Rule 107   LIMITS -> LIMITS LIMITT
Rule 108   LIMITS -> LIMITT
Rule 109   LIMITT -> LIMIT EXPRE_NUM
Rule 110   LIMITT -> OFFSET EXPRE_NUM
Rule 111   EXPRE_NUM -> ENTERO
Rule 112   EXPRE_NUM -> ALL
Rule 113   SUBQUERYS -> SUBQUERYS QUERY
Rule 114   SUBQUERYS -> QUERY
Rule 115   QUERY -> ATE_QUE PARIZQ QUE PARDER
Rule 116   QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO
Rule 117   QUERY -> PARIZQ QUE PARDER
Rule 118   QUERY -> PARIZQ QUE PARDER AS_NO
Rule 119   AS_NO -> COMA QUERY
Rule 120   AS_NO -> AS NO_N
Rule 121   AS_NO -> AS NO_N COMA QUERY
Rule 122   NO_N -> ID
Rule 123   ATE_QUE -> EXISTS
Rule 124   ATE_QUE -> EXPRESIONNE OPCIONALESS
Rule 125   ATE_QUE -> EXPRESIONNE OPERADOR OPCIONALESS2
Rule 126   ATE_QUE -> ID
Rule 127   OPCIONALESS -> IN
Rule 128   OPCIONALESS -> NOT IN
Rule 129   OPCIONALESS2 -> ANY
Rule 130   OPCIONALESS2 -> ALL
Rule 131   OPCIONALESS2 -> SOME
Rule 132   QUE -> DQL_COMANDOS
Rule 133   UNIONS -> UNIONS UNIONN
Rule 134   UNIONS -> UNIONN
Rule 135   UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS
Rule 136   UNIONN -> COMPORTAMIENTO DQL_COMANDOS
Rule 137   UNIONN -> PUNTOCOMA
Rule 138   COMPORTAMIENTO -> UNION
Rule 139   COMPORTAMIENTO -> INTERSECT
Rule 140   COMPORTAMIENTO -> EXCEPT
Rule 141   DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
Rule 142   CUERPO_CREATE_TABLE -> LISTA_DE_COLUMNAS
Rule 143   LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2
Rule 144   LISTA_DE_COLUMNAS -> LISTA2
Rule 145   LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
Rule 146   LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE
Rule 147   TIPO_CAMPO -> SMALLINT
Rule 148   TIPO_CAMPO -> INTEGER
Rule 149   TIPO_CAMPO -> BIGINT
Rule 150   TIPO_CAMPO -> DECIMAL
Rule 151   TIPO_CAMPO -> REAL
Rule 152   TIPO_CAMPO -> MONEY
Rule 153   TIPO_CAMPO -> DOUBLE PRECISION
Rule 154   TIPO_CAMPO -> CHARACTER VARYING PARIZQ ENTERO PARDER
Rule 155   TIPO_CAMPO -> VARCHAR PARIZQ ENTERO PARDER
Rule 156   TIPO_CAMPO -> CHARACTER PARIZQ ENTERO PARDER
Rule 157   TIPO_CAMPO -> CHAR PARIZQ ENTERO PARDER
Rule 158   TIPO_CAMPO -> TEXT
Rule 159   TIPO_CAMPO -> BOOLEAN
Rule 160   VALIDACIONES_CREATE_TABLE -> LISTA3
Rule 161   LISTA3 -> VALIDACION_CAMPO_CREATE
Rule 162   LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO
Rule 163   VALIDACION_CAMPO_CREATE -> NOT NULL
Rule 164   VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE
Rule 165   VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE
Rule 166   VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL
Rule 167   VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO
Rule 168   VALIDACION_CAMPO_CREATE_VACIO -> <empty>
Rule 169   VALIDACION_CAMPO_CREATE -> NULL
Rule 170   DDL_COMANDOS -> CREATE_DATABASE
Rule 171   DDL_COMANDOS -> SHOW_DATABASES
Rule 172   DDL_COMANDOS -> ALTER_DATABASE
Rule 173   DDL_COMANDOS -> DROP_DATABASE
Rule 174   CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
Rule 175   REPLACE_OP -> OR REPLACE
Rule 176   REPLACE_OP -> <empty>
Rule 177   IF_NOT_EXISTIS -> IF NOT EXISTS
Rule 178   IF_NOT_EXISTIS -> <empty>
Rule 179   OWNER_DATABASE -> OWNER IGUAL ID
Rule 180   OWNER_DATABASE -> <empty>
Rule 181   MODE_DATABASE -> MODE IGUAL ENTERO
Rule 182   MODE_DATABASE -> <empty>
Rule 183   SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE
Rule 184   SHOW_DATABASES_LIKE -> LIKE CADENADOBLE
Rule 185   SHOW_DATABASES_LIKE -> <empty>
Rule 186   ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP
Rule 187   ALTER_DATABASE_OP -> RENAME TO ID
Rule 188   ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW
Rule 189   ALTER_TABLE_OP_OW -> ID
Rule 190   ALTER_TABLE_OP_OW -> CURRENT_USER
Rule 191   ALTER_TABLE_OP_OW -> SESSION_USER
Rule 192   ALTER_DATABASE_OP -> <empty>
Rule 193   DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID
Rule 194   IF_EXISTS_DATABASE -> IF EXISTS
Rule 195   IF_EXISTS_DATABASE -> <empty>

Terminals, with rules where they appear

ALL                  : 112 130 135
ALTER                : 186
AND                  : 49
ANY                  : 129
AS                   : 21 22 30 82 98 99 120 121
ASC                  : 101 102 103
ASTERISCO            : 17
BIGINT               : 149
BOOLEAN              : 159
BY                   : 85 86
CADENADOBLE          : 57 165 184
CADENASIMPLE         : 56 164
CHAR                 : 157
CHARACTER            : 154 156
COMA                 : 20 22 29 97 99 119 121 145
COMENTARIOMULTI      : 
COMENTARIONORMAL     : 
CONSTRAINT           : 
CREATE               : 141 174
CURRENT_USER         : 190
DATABASE             : 174 186 193
DATABASES            : 183
DECIMAL              : 55 150 166
DEFAULT              : 164 165 166 167
DELETE               : 
DESC                 : 104 105 106
DIFERENTE            : 59
DISTINCT             : 23
DOUBLE               : 153
DROP                 : 193
ENTERO               : 54 111 154 155 156 157 167 181
EXCEPT               : 140
EXISTS               : 123 177 194
FECHA                : 
FIRST                : 102 105
FROM                 : 6 7 8 9
FULL                 : 79 80
GROUP                : 85 86
HAVING               : 100
ID                   : 16 18 19 52 53 81 82 82 122 126 174 179 186 187 189 193
IF                   : 177 194
IGUAL                : 58 179 181
IN                   : 127 128
INNER                : 73 74
INSERT               : 
INTEGER              : 148
INTERSECT            : 139
INTO                 : 
JOIN                 : 66 67 68 69 71
LAST                 : 103 106
LEFT                 : 75 76
LIKE                 : 184
LIMIT                : 109
MAYOR                : 60
MAYORIGUAL           : 63
MENOR                : 61
MENORIGUAL           : 62
MODE                 : 181
MONEY                : 152
NEGACION             : 
NOT                  : 51 128 163 177
NULL                 : 163 169
NULLS                : 102 103 105 106
OFFSET               : 110
ON                   : 66 67
OR                   : 50 175
OUTER                : 73 75 77 79
OWNER                : 179 188
PARDER               : 68 69 115 116 117 118 141 154 155 156 157
PARIZQ               : 68 69 115 116 117 118 141 154 155 156 157
PRECISION            : 153
PUNTO                : 12 13 47 89 90 93 94
PUNTOCOMA            : 137 141
REAL                 : 151
RENAME               : 187
REPLACE              : 175
RIGHT                : 77 78
SELECT               : 6 7 8 9
SESSION_USER         : 191
SET                  : 
SHOW                 : 183
SMALLINT             : 147
SOME                 : 131
TABLE                : 141
TEXT                 : 158
TO                   : 187 188
TYPE                 : 
UNION                : 138
UPDATE               : 
USING                : 68 69
VALUES               : 
VARCHAR              : 155
VARYING              : 154
WHERE                : 31 70
error                : 

Nonterminals, with rules where they appear

ALIAS                : 21 22 30 98 99
ALTER_DATABASE       : 172
ALTER_DATABASE_OP    : 186
ALTER_TABLE_OP_OW    : 188
AS_NO                : 116 118
ATE_QUE              : 115 116
CAMPOS               : 12 13 14 15 89 90 91 92 93 94 95 96
CAMPOSC              : 47 48
COMPORTAMIENTO       : 135 136
CONDICION            : 38 39
CONDICIONES          : 31 38 46 66 67 70 100
CONDICION_REL        : 40 40 41 41 42
CREATE_DATABASE      : 170
CUERPO               : 6 8
CUERPO_CREATE_TABLE  : 141
DDL_COMANDOS         : 5
DISTINCTNT           : 8 9
DQL_COMANDOS         : 4 132 135 136
DROP_DATABASE        : 173
EXPRES               : 87 88 97 99
EXPRESIONNE          : 43 43 44 45 71 72 124 125
EXPRE_LIST           : 85 86 87
EXPRE_NUM            : 109 110
GROUPP               : 83 84
GROUPS               : 36 83
IF_EXISTS_DATABASE   : 193
IF_NOT_EXISTIS       : 174
INICIO               : 0
INNERR               : 64 65
INNERS               : 35 64
INSTRUCCION          : 2 3
INSTRUCCIONES        : 1 2
LIMITS               : 37 107
LIMITT               : 107 108
LISTA                : 10 11 20 22
LISTA2               : 143 144
LISTA3               : 160
LISTA_CAMPOS         : 6 7 8 9 10
LISTA_DE_COLUMNAS    : 142 143
MODE_DATABASE        : 174
MOREE                : 33 34
MORES                : 32 33
MORE_ORDER           : 85
NOMBRES_TABLAS       : 6 7 8 9 24 141
NOMBRE_C             : 47
NOMBRE_T             : 12 13 26 27 89 90 93 94 145 146
NO_N                 : 120 121
OPCIONALESS          : 124
OPCIONALESS2         : 125
OPERADOR             : 43 125
OTRO_LOGICO          : 40
OWNER_DATABASE       : 174
QUE                  : 115 116 117 118
QUERY                : 113 114 119 121
REPLACE_OP           : 174
S                    : 12 14
S1                   : 27
S2                   : 89 91 93 95
SHOW_DATABASES       : 171
SHOW_DATABASES_LIKE  : 183
SIMBOLO_LOGICO       : 40 41 46
SIMBOLO_NEG          : 44
STATE                : 93 94 95 96
SUBQUERYS            : 28 113
SUB_COLUMN           : 68 69
TABLA                : 24 25 29
TABLA_REF            : 66 67 68 69
TIPOS_INNER          : 66 68
TIPO_CAMPO           : 145 146
UNIONN               : 133 134
UNIONS               : 6 7 8 9 133
VALIDACIONES_CREATE_TABLE : 145 146
VALIDACION_CAMPO_CREATE : 161
VALIDACION_CAMPO_CREATE_VACIO : 162

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . DQL_COMANDOS
    (5) INSTRUCCION -> . DDL_COMANDOS
    (6) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (8) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (141) DQL_COMANDOS -> . CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (170) DDL_COMANDOS -> . CREATE_DATABASE
    (171) DDL_COMANDOS -> . SHOW_DATABASES
    (172) DDL_COMANDOS -> . ALTER_DATABASE
    (173) DDL_COMANDOS -> . DROP_DATABASE
    (174) CREATE_DATABASE -> . CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (183) SHOW_DATABASES -> . SHOW DATABASES SHOW_DATABASES_LIKE
    (186) ALTER_DATABASE -> . ALTER DATABASE ID ALTER_DATABASE_OP
    (193) DROP_DATABASE -> . DROP DATABASE IF_EXISTS_DATABASE ID

    SELECT          shift and go to state 6
    CREATE          shift and go to state 7
    SHOW            shift and go to state 12
    ALTER           shift and go to state 13
    DROP            shift and go to state 14

    INICIO                         shift and go to state 1
    INSTRUCCIONES                  shift and go to state 2
    INSTRUCCION                    shift and go to state 3
    DQL_COMANDOS                   shift and go to state 4
    DDL_COMANDOS                   shift and go to state 5
    CREATE_DATABASE                shift and go to state 8
    SHOW_DATABASES                 shift and go to state 9
    ALTER_DATABASE                 shift and go to state 10
    DROP_DATABASE                  shift and go to state 11

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> INSTRUCCIONES .
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . DQL_COMANDOS
    (5) INSTRUCCION -> . DDL_COMANDOS
    (6) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (8) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (141) DQL_COMANDOS -> . CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (170) DDL_COMANDOS -> . CREATE_DATABASE
    (171) DDL_COMANDOS -> . SHOW_DATABASES
    (172) DDL_COMANDOS -> . ALTER_DATABASE
    (173) DDL_COMANDOS -> . DROP_DATABASE
    (174) CREATE_DATABASE -> . CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (183) SHOW_DATABASES -> . SHOW DATABASES SHOW_DATABASES_LIKE
    (186) ALTER_DATABASE -> . ALTER DATABASE ID ALTER_DATABASE_OP
    (193) DROP_DATABASE -> . DROP DATABASE IF_EXISTS_DATABASE ID

    $end            reduce using rule 1 (INICIO -> INSTRUCCIONES .)
    SELECT          shift and go to state 6
    CREATE          shift and go to state 7
    SHOW            shift and go to state 12
    ALTER           shift and go to state 13
    DROP            shift and go to state 14

    INSTRUCCION                    shift and go to state 15
    DQL_COMANDOS                   shift and go to state 4
    DDL_COMANDOS                   shift and go to state 5
    CREATE_DATABASE                shift and go to state 8
    SHOW_DATABASES                 shift and go to state 9
    ALTER_DATABASE                 shift and go to state 10
    DROP_DATABASE                  shift and go to state 11

state 3

    (3) INSTRUCCIONES -> INSTRUCCION .

    SELECT          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    CREATE          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    SHOW            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    ALTER           reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    DROP            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)


state 4

    (4) INSTRUCCION -> DQL_COMANDOS .

    SELECT          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    CREATE          reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    SHOW            reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    ALTER           reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    DROP            reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)
    $end            reduce using rule 4 (INSTRUCCION -> DQL_COMANDOS .)


state 5

    (5) INSTRUCCION -> DDL_COMANDOS .

    SELECT          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    CREATE          reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    SHOW            reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    ALTER           reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    DROP            reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)
    $end            reduce using rule 5 (INSTRUCCION -> DDL_COMANDOS .)


state 6

    (6) DQL_COMANDOS -> SELECT . LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> SELECT . LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (8) DQL_COMANDOS -> SELECT . DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> SELECT . DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (10) LISTA_CAMPOS -> . LISTA_CAMPOS LISTA
    (11) LISTA_CAMPOS -> . LISTA
    (23) DISTINCTNT -> . DISTINCT
    (12) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (14) LISTA -> . CAMPOS S
    (15) LISTA -> . CAMPOS
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    DISTINCT        shift and go to state 19
    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    LISTA_CAMPOS                   shift and go to state 16
    DISTINCTNT                     shift and go to state 17
    LISTA                          shift and go to state 18
    NOMBRE_T                       shift and go to state 20
    CAMPOS                         shift and go to state 21

state 7

    (141) DQL_COMANDOS -> CREATE . TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (174) CREATE_DATABASE -> CREATE . REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (175) REPLACE_OP -> . OR REPLACE
    (176) REPLACE_OP -> .

    TABLE           shift and go to state 24
    OR              shift and go to state 26
    DATABASE        reduce using rule 176 (REPLACE_OP -> .)

    REPLACE_OP                     shift and go to state 25

state 8

    (170) DDL_COMANDOS -> CREATE_DATABASE .

    SELECT          reduce using rule 170 (DDL_COMANDOS -> CREATE_DATABASE .)
    CREATE          reduce using rule 170 (DDL_COMANDOS -> CREATE_DATABASE .)
    SHOW            reduce using rule 170 (DDL_COMANDOS -> CREATE_DATABASE .)
    ALTER           reduce using rule 170 (DDL_COMANDOS -> CREATE_DATABASE .)
    DROP            reduce using rule 170 (DDL_COMANDOS -> CREATE_DATABASE .)
    $end            reduce using rule 170 (DDL_COMANDOS -> CREATE_DATABASE .)


state 9

    (171) DDL_COMANDOS -> SHOW_DATABASES .

    SELECT          reduce using rule 171 (DDL_COMANDOS -> SHOW_DATABASES .)
    CREATE          reduce using rule 171 (DDL_COMANDOS -> SHOW_DATABASES .)
    SHOW            reduce using rule 171 (DDL_COMANDOS -> SHOW_DATABASES .)
    ALTER           reduce using rule 171 (DDL_COMANDOS -> SHOW_DATABASES .)
    DROP            reduce using rule 171 (DDL_COMANDOS -> SHOW_DATABASES .)
    $end            reduce using rule 171 (DDL_COMANDOS -> SHOW_DATABASES .)


state 10

    (172) DDL_COMANDOS -> ALTER_DATABASE .

    SELECT          reduce using rule 172 (DDL_COMANDOS -> ALTER_DATABASE .)
    CREATE          reduce using rule 172 (DDL_COMANDOS -> ALTER_DATABASE .)
    SHOW            reduce using rule 172 (DDL_COMANDOS -> ALTER_DATABASE .)
    ALTER           reduce using rule 172 (DDL_COMANDOS -> ALTER_DATABASE .)
    DROP            reduce using rule 172 (DDL_COMANDOS -> ALTER_DATABASE .)
    $end            reduce using rule 172 (DDL_COMANDOS -> ALTER_DATABASE .)


state 11

    (173) DDL_COMANDOS -> DROP_DATABASE .

    SELECT          reduce using rule 173 (DDL_COMANDOS -> DROP_DATABASE .)
    CREATE          reduce using rule 173 (DDL_COMANDOS -> DROP_DATABASE .)
    SHOW            reduce using rule 173 (DDL_COMANDOS -> DROP_DATABASE .)
    ALTER           reduce using rule 173 (DDL_COMANDOS -> DROP_DATABASE .)
    DROP            reduce using rule 173 (DDL_COMANDOS -> DROP_DATABASE .)
    $end            reduce using rule 173 (DDL_COMANDOS -> DROP_DATABASE .)


state 12

    (183) SHOW_DATABASES -> SHOW . DATABASES SHOW_DATABASES_LIKE

    DATABASES       shift and go to state 27


state 13

    (186) ALTER_DATABASE -> ALTER . DATABASE ID ALTER_DATABASE_OP

    DATABASE        shift and go to state 28


state 14

    (193) DROP_DATABASE -> DROP . DATABASE IF_EXISTS_DATABASE ID

    DATABASE        shift and go to state 29


state 15

    (2) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    SELECT          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    CREATE          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    SHOW            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    ALTER           reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    DROP            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 16

    (6) DQL_COMANDOS -> SELECT LISTA_CAMPOS . FROM NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS . FROM NOMBRES_TABLAS UNIONS
    (10) LISTA_CAMPOS -> LISTA_CAMPOS . LISTA
    (12) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (14) LISTA -> . CAMPOS S
    (15) LISTA -> . CAMPOS
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    FROM            shift and go to state 30
    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    LISTA                          shift and go to state 31
    NOMBRE_T                       shift and go to state 20
    CAMPOS                         shift and go to state 21

state 17

    (8) DQL_COMANDOS -> SELECT DISTINCTNT . LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> SELECT DISTINCTNT . LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (10) LISTA_CAMPOS -> . LISTA_CAMPOS LISTA
    (11) LISTA_CAMPOS -> . LISTA
    (12) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (14) LISTA -> . CAMPOS S
    (15) LISTA -> . CAMPOS
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    LISTA_CAMPOS                   shift and go to state 32
    LISTA                          shift and go to state 18
    NOMBRE_T                       shift and go to state 20
    CAMPOS                         shift and go to state 21

state 18

    (11) LISTA_CAMPOS -> LISTA .

    FROM            reduce using rule 11 (LISTA_CAMPOS -> LISTA .)
    ID              reduce using rule 11 (LISTA_CAMPOS -> LISTA .)
    ASTERISCO       reduce using rule 11 (LISTA_CAMPOS -> LISTA .)


state 19

    (23) DISTINCTNT -> DISTINCT .

    ID              reduce using rule 23 (DISTINCTNT -> DISTINCT .)
    ASTERISCO       reduce using rule 23 (DISTINCTNT -> DISTINCT .)


state 20

    (12) LISTA -> NOMBRE_T . PUNTO CAMPOS S
    (13) LISTA -> NOMBRE_T . PUNTO CAMPOS

    PUNTO           shift and go to state 33


state 21

    (14) LISTA -> CAMPOS . S
    (15) LISTA -> CAMPOS .
    (20) S -> . COMA LISTA
    (21) S -> . AS ALIAS
    (22) S -> . AS ALIAS COMA LISTA

    FROM            reduce using rule 15 (LISTA -> CAMPOS .)
    ID              reduce using rule 15 (LISTA -> CAMPOS .)
    ASTERISCO       reduce using rule 15 (LISTA -> CAMPOS .)
    COMA            shift and go to state 35
    AS              shift and go to state 36

    S                              shift and go to state 34

state 22

    (18) NOMBRE_T -> ID .
    (16) CAMPOS -> ID .

    PUNTO           reduce using rule 18 (NOMBRE_T -> ID .)
    COMA            reduce using rule 16 (CAMPOS -> ID .)
    AS              reduce using rule 16 (CAMPOS -> ID .)
    FROM            reduce using rule 16 (CAMPOS -> ID .)
    ID              reduce using rule 16 (CAMPOS -> ID .)
    ASTERISCO       reduce using rule 16 (CAMPOS -> ID .)
    ASC             reduce using rule 16 (CAMPOS -> ID .)
    DESC            reduce using rule 16 (CAMPOS -> ID .)
    HAVING          reduce using rule 16 (CAMPOS -> ID .)
    GROUP           reduce using rule 16 (CAMPOS -> ID .)
    JOIN            reduce using rule 16 (CAMPOS -> ID .)
    WHERE           reduce using rule 16 (CAMPOS -> ID .)
    LIMIT           reduce using rule 16 (CAMPOS -> ID .)
    OFFSET          reduce using rule 16 (CAMPOS -> ID .)
    INNER           reduce using rule 16 (CAMPOS -> ID .)
    LEFT            reduce using rule 16 (CAMPOS -> ID .)
    RIGHT           reduce using rule 16 (CAMPOS -> ID .)
    FULL            reduce using rule 16 (CAMPOS -> ID .)
    PUNTOCOMA       reduce using rule 16 (CAMPOS -> ID .)
    UNION           reduce using rule 16 (CAMPOS -> ID .)
    INTERSECT       reduce using rule 16 (CAMPOS -> ID .)
    EXCEPT          reduce using rule 16 (CAMPOS -> ID .)


state 23

    (17) CAMPOS -> ASTERISCO .

    COMA            reduce using rule 17 (CAMPOS -> ASTERISCO .)
    AS              reduce using rule 17 (CAMPOS -> ASTERISCO .)
    FROM            reduce using rule 17 (CAMPOS -> ASTERISCO .)
    ID              reduce using rule 17 (CAMPOS -> ASTERISCO .)
    ASTERISCO       reduce using rule 17 (CAMPOS -> ASTERISCO .)
    ASC             reduce using rule 17 (CAMPOS -> ASTERISCO .)
    DESC            reduce using rule 17 (CAMPOS -> ASTERISCO .)
    HAVING          reduce using rule 17 (CAMPOS -> ASTERISCO .)
    GROUP           reduce using rule 17 (CAMPOS -> ASTERISCO .)
    JOIN            reduce using rule 17 (CAMPOS -> ASTERISCO .)
    WHERE           reduce using rule 17 (CAMPOS -> ASTERISCO .)
    LIMIT           reduce using rule 17 (CAMPOS -> ASTERISCO .)
    OFFSET          reduce using rule 17 (CAMPOS -> ASTERISCO .)
    INNER           reduce using rule 17 (CAMPOS -> ASTERISCO .)
    LEFT            reduce using rule 17 (CAMPOS -> ASTERISCO .)
    RIGHT           reduce using rule 17 (CAMPOS -> ASTERISCO .)
    FULL            reduce using rule 17 (CAMPOS -> ASTERISCO .)
    PUNTOCOMA       reduce using rule 17 (CAMPOS -> ASTERISCO .)
    UNION           reduce using rule 17 (CAMPOS -> ASTERISCO .)
    INTERSECT       reduce using rule 17 (CAMPOS -> ASTERISCO .)
    EXCEPT          reduce using rule 17 (CAMPOS -> ASTERISCO .)


state 24

    (141) DQL_COMANDOS -> CREATE TABLE . NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (24) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (25) NOMBRES_TABLAS -> . TABLA
    (26) TABLA -> . NOMBRE_T
    (27) TABLA -> . NOMBRE_T S1
    (28) TABLA -> . SUBQUERYS
    (18) NOMBRE_T -> . ID
    (113) SUBQUERYS -> . SUBQUERYS QUERY
    (114) SUBQUERYS -> . QUERY
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 38
    EXISTS          shift and go to state 45
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    NOMBRES_TABLAS                 shift and go to state 37
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 46
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 25

    (174) CREATE_DATABASE -> CREATE REPLACE_OP . DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE

    DATABASE        shift and go to state 53


state 26

    (175) REPLACE_OP -> OR . REPLACE

    REPLACE         shift and go to state 54


state 27

    (183) SHOW_DATABASES -> SHOW DATABASES . SHOW_DATABASES_LIKE
    (184) SHOW_DATABASES_LIKE -> . LIKE CADENADOBLE
    (185) SHOW_DATABASES_LIKE -> .

    LIKE            shift and go to state 56
    SELECT          reduce using rule 185 (SHOW_DATABASES_LIKE -> .)
    CREATE          reduce using rule 185 (SHOW_DATABASES_LIKE -> .)
    SHOW            reduce using rule 185 (SHOW_DATABASES_LIKE -> .)
    ALTER           reduce using rule 185 (SHOW_DATABASES_LIKE -> .)
    DROP            reduce using rule 185 (SHOW_DATABASES_LIKE -> .)
    $end            reduce using rule 185 (SHOW_DATABASES_LIKE -> .)

    SHOW_DATABASES_LIKE            shift and go to state 55

state 28

    (186) ALTER_DATABASE -> ALTER DATABASE . ID ALTER_DATABASE_OP

    ID              shift and go to state 57


state 29

    (193) DROP_DATABASE -> DROP DATABASE . IF_EXISTS_DATABASE ID
    (194) IF_EXISTS_DATABASE -> . IF EXISTS
    (195) IF_EXISTS_DATABASE -> .

    IF              shift and go to state 59
    ID              reduce using rule 195 (IF_EXISTS_DATABASE -> .)

    IF_EXISTS_DATABASE             shift and go to state 58

state 30

    (6) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM . NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM . NOMBRES_TABLAS UNIONS
    (24) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (25) NOMBRES_TABLAS -> . TABLA
    (26) TABLA -> . NOMBRE_T
    (27) TABLA -> . NOMBRE_T S1
    (28) TABLA -> . SUBQUERYS
    (18) NOMBRE_T -> . ID
    (113) SUBQUERYS -> . SUBQUERYS QUERY
    (114) SUBQUERYS -> . QUERY
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 38
    EXISTS          shift and go to state 45
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    NOMBRES_TABLAS                 shift and go to state 60
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 46
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 31

    (10) LISTA_CAMPOS -> LISTA_CAMPOS LISTA .

    FROM            reduce using rule 10 (LISTA_CAMPOS -> LISTA_CAMPOS LISTA .)
    ID              reduce using rule 10 (LISTA_CAMPOS -> LISTA_CAMPOS LISTA .)
    ASTERISCO       reduce using rule 10 (LISTA_CAMPOS -> LISTA_CAMPOS LISTA .)


state 32

    (8) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS . FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS . FROM NOMBRES_TABLAS UNIONS
    (10) LISTA_CAMPOS -> LISTA_CAMPOS . LISTA
    (12) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (14) LISTA -> . CAMPOS S
    (15) LISTA -> . CAMPOS
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    FROM            shift and go to state 61
    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    LISTA                          shift and go to state 31
    NOMBRE_T                       shift and go to state 20
    CAMPOS                         shift and go to state 21

state 33

    (12) LISTA -> NOMBRE_T PUNTO . CAMPOS S
    (13) LISTA -> NOMBRE_T PUNTO . CAMPOS
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    ID              shift and go to state 63
    ASTERISCO       shift and go to state 23

    CAMPOS                         shift and go to state 62

state 34

    (14) LISTA -> CAMPOS S .

    FROM            reduce using rule 14 (LISTA -> CAMPOS S .)
    ID              reduce using rule 14 (LISTA -> CAMPOS S .)
    ASTERISCO       reduce using rule 14 (LISTA -> CAMPOS S .)


state 35

    (20) S -> COMA . LISTA
    (12) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (14) LISTA -> . CAMPOS S
    (15) LISTA -> . CAMPOS
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    LISTA                          shift and go to state 64
    NOMBRE_T                       shift and go to state 20
    CAMPOS                         shift and go to state 21

state 36

    (21) S -> AS . ALIAS
    (22) S -> AS . ALIAS COMA LISTA
    (19) ALIAS -> . ID

    ID              shift and go to state 66

    ALIAS                          shift and go to state 65

state 37

    (141) DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS . PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (24) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (26) TABLA -> . NOMBRE_T
    (27) TABLA -> . NOMBRE_T S1
    (28) TABLA -> . SUBQUERYS
    (18) NOMBRE_T -> . ID
    (113) SUBQUERYS -> . SUBQUERYS QUERY
    (114) SUBQUERYS -> . QUERY
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    PARIZQ          shift and go to state 67
    ID              shift and go to state 42
    EXISTS          shift and go to state 45
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    TABLA                          shift and go to state 68
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 46
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 38

    (117) QUERY -> PARIZQ . QUE PARDER
    (118) QUERY -> PARIZQ . QUE PARDER AS_NO
    (132) QUE -> . DQL_COMANDOS
    (6) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (8) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (141) DQL_COMANDOS -> . CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA

    SELECT          shift and go to state 6
    CREATE          shift and go to state 71

    QUE                            shift and go to state 69
    DQL_COMANDOS                   shift and go to state 70

state 39

    (25) NOMBRES_TABLAS -> TABLA .

    PARIZQ          reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    ID              reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    EXISTS          reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    ENTERO          reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    DECIMAL         reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    CADENASIMPLE    reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    CADENADOBLE     reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    WHERE           reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    PUNTOCOMA       reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    UNION           reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    INTERSECT       reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    EXCEPT          reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    JOIN            reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    GROUP           reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    LIMIT           reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    OFFSET          reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    INNER           reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    LEFT            reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    RIGHT           reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)
    FULL            reduce using rule 25 (NOMBRES_TABLAS -> TABLA .)


state 40

    (26) TABLA -> NOMBRE_T .
    (27) TABLA -> NOMBRE_T . S1
    (29) S1 -> . COMA TABLA
    (30) S1 -> . AS ALIAS

    PARIZQ          reduce using rule 26 (TABLA -> NOMBRE_T .)
    ID              reduce using rule 26 (TABLA -> NOMBRE_T .)
    EXISTS          reduce using rule 26 (TABLA -> NOMBRE_T .)
    ENTERO          reduce using rule 26 (TABLA -> NOMBRE_T .)
    DECIMAL         reduce using rule 26 (TABLA -> NOMBRE_T .)
    CADENASIMPLE    reduce using rule 26 (TABLA -> NOMBRE_T .)
    CADENADOBLE     reduce using rule 26 (TABLA -> NOMBRE_T .)
    WHERE           reduce using rule 26 (TABLA -> NOMBRE_T .)
    PUNTOCOMA       reduce using rule 26 (TABLA -> NOMBRE_T .)
    UNION           reduce using rule 26 (TABLA -> NOMBRE_T .)
    INTERSECT       reduce using rule 26 (TABLA -> NOMBRE_T .)
    EXCEPT          reduce using rule 26 (TABLA -> NOMBRE_T .)
    JOIN            reduce using rule 26 (TABLA -> NOMBRE_T .)
    GROUP           reduce using rule 26 (TABLA -> NOMBRE_T .)
    LIMIT           reduce using rule 26 (TABLA -> NOMBRE_T .)
    OFFSET          reduce using rule 26 (TABLA -> NOMBRE_T .)
    INNER           reduce using rule 26 (TABLA -> NOMBRE_T .)
    LEFT            reduce using rule 26 (TABLA -> NOMBRE_T .)
    RIGHT           reduce using rule 26 (TABLA -> NOMBRE_T .)
    FULL            reduce using rule 26 (TABLA -> NOMBRE_T .)
    COMA            shift and go to state 73
    AS              shift and go to state 74

    S1                             shift and go to state 72

state 41

    (28) TABLA -> SUBQUERYS .
    (113) SUBQUERYS -> SUBQUERYS . QUERY
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for EXISTS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENASIMPLE resolved as shift
  ! shift/reduce conflict for CADENADOBLE resolved as shift
    WHERE           reduce using rule 28 (TABLA -> SUBQUERYS .)
    PUNTOCOMA       reduce using rule 28 (TABLA -> SUBQUERYS .)
    UNION           reduce using rule 28 (TABLA -> SUBQUERYS .)
    INTERSECT       reduce using rule 28 (TABLA -> SUBQUERYS .)
    EXCEPT          reduce using rule 28 (TABLA -> SUBQUERYS .)
    JOIN            reduce using rule 28 (TABLA -> SUBQUERYS .)
    GROUP           reduce using rule 28 (TABLA -> SUBQUERYS .)
    LIMIT           reduce using rule 28 (TABLA -> SUBQUERYS .)
    OFFSET          reduce using rule 28 (TABLA -> SUBQUERYS .)
    INNER           reduce using rule 28 (TABLA -> SUBQUERYS .)
    LEFT            reduce using rule 28 (TABLA -> SUBQUERYS .)
    RIGHT           reduce using rule 28 (TABLA -> SUBQUERYS .)
    FULL            reduce using rule 28 (TABLA -> SUBQUERYS .)
    PARIZQ          shift and go to state 38
    EXISTS          shift and go to state 45
    ID              shift and go to state 76
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

  ! PARIZQ          [ reduce using rule 28 (TABLA -> SUBQUERYS .) ]
  ! ID              [ reduce using rule 28 (TABLA -> SUBQUERYS .) ]
  ! EXISTS          [ reduce using rule 28 (TABLA -> SUBQUERYS .) ]
  ! ENTERO          [ reduce using rule 28 (TABLA -> SUBQUERYS .) ]
  ! DECIMAL         [ reduce using rule 28 (TABLA -> SUBQUERYS .) ]
  ! CADENASIMPLE    [ reduce using rule 28 (TABLA -> SUBQUERYS .) ]
  ! CADENADOBLE     [ reduce using rule 28 (TABLA -> SUBQUERYS .) ]

    QUERY                          shift and go to state 75
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 46
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 42

    (18) NOMBRE_T -> ID .
    (126) ATE_QUE -> ID .
    (52) NOMBRE_C -> ID .
    (53) CAMPOSC -> ID .

  ! reduce/reduce conflict for PARIZQ resolved using rule 18 (NOMBRE_T -> ID .)
    COMA            reduce using rule 18 (NOMBRE_T -> ID .)
    AS              reduce using rule 18 (NOMBRE_T -> ID .)
    PARIZQ          reduce using rule 18 (NOMBRE_T -> ID .)
    ID              reduce using rule 18 (NOMBRE_T -> ID .)
    EXISTS          reduce using rule 18 (NOMBRE_T -> ID .)
    ENTERO          reduce using rule 18 (NOMBRE_T -> ID .)
    DECIMAL         reduce using rule 18 (NOMBRE_T -> ID .)
    CADENASIMPLE    reduce using rule 18 (NOMBRE_T -> ID .)
    CADENADOBLE     reduce using rule 18 (NOMBRE_T -> ID .)
    WHERE           reduce using rule 18 (NOMBRE_T -> ID .)
    PUNTOCOMA       reduce using rule 18 (NOMBRE_T -> ID .)
    UNION           reduce using rule 18 (NOMBRE_T -> ID .)
    INTERSECT       reduce using rule 18 (NOMBRE_T -> ID .)
    EXCEPT          reduce using rule 18 (NOMBRE_T -> ID .)
    JOIN            reduce using rule 18 (NOMBRE_T -> ID .)
    GROUP           reduce using rule 18 (NOMBRE_T -> ID .)
    LIMIT           reduce using rule 18 (NOMBRE_T -> ID .)
    OFFSET          reduce using rule 18 (NOMBRE_T -> ID .)
    INNER           reduce using rule 18 (NOMBRE_T -> ID .)
    LEFT            reduce using rule 18 (NOMBRE_T -> ID .)
    RIGHT           reduce using rule 18 (NOMBRE_T -> ID .)
    FULL            reduce using rule 18 (NOMBRE_T -> ID .)
    PUNTO           reduce using rule 52 (NOMBRE_C -> ID .)
    IN              reduce using rule 53 (CAMPOSC -> ID .)
    NOT             reduce using rule 53 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 53 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 53 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 53 (CAMPOSC -> ID .)
    MENOR           reduce using rule 53 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 53 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 53 (CAMPOSC -> ID .)

  ! PARIZQ          [ reduce using rule 126 (ATE_QUE -> ID .) ]


state 43

    (114) SUBQUERYS -> QUERY .

    PARIZQ          reduce using rule 114 (SUBQUERYS -> QUERY .)
    EXISTS          reduce using rule 114 (SUBQUERYS -> QUERY .)
    ID              reduce using rule 114 (SUBQUERYS -> QUERY .)
    ENTERO          reduce using rule 114 (SUBQUERYS -> QUERY .)
    DECIMAL         reduce using rule 114 (SUBQUERYS -> QUERY .)
    CADENASIMPLE    reduce using rule 114 (SUBQUERYS -> QUERY .)
    CADENADOBLE     reduce using rule 114 (SUBQUERYS -> QUERY .)
    WHERE           reduce using rule 114 (SUBQUERYS -> QUERY .)
    PUNTOCOMA       reduce using rule 114 (SUBQUERYS -> QUERY .)
    UNION           reduce using rule 114 (SUBQUERYS -> QUERY .)
    INTERSECT       reduce using rule 114 (SUBQUERYS -> QUERY .)
    EXCEPT          reduce using rule 114 (SUBQUERYS -> QUERY .)
    JOIN            reduce using rule 114 (SUBQUERYS -> QUERY .)
    GROUP           reduce using rule 114 (SUBQUERYS -> QUERY .)
    LIMIT           reduce using rule 114 (SUBQUERYS -> QUERY .)
    OFFSET          reduce using rule 114 (SUBQUERYS -> QUERY .)
    INNER           reduce using rule 114 (SUBQUERYS -> QUERY .)
    LEFT            reduce using rule 114 (SUBQUERYS -> QUERY .)
    RIGHT           reduce using rule 114 (SUBQUERYS -> QUERY .)
    FULL            reduce using rule 114 (SUBQUERYS -> QUERY .)


state 44

    (115) QUERY -> ATE_QUE . PARIZQ QUE PARDER
    (116) QUERY -> ATE_QUE . PARIZQ QUE PARDER AS_NO

    PARIZQ          shift and go to state 77


state 45

    (123) ATE_QUE -> EXISTS .

    PARIZQ          reduce using rule 123 (ATE_QUE -> EXISTS .)


state 46

    (124) ATE_QUE -> EXPRESIONNE . OPCIONALESS
    (125) ATE_QUE -> EXPRESIONNE . OPERADOR OPCIONALESS2
    (127) OPCIONALESS -> . IN
    (128) OPCIONALESS -> . NOT IN
    (58) OPERADOR -> . IGUAL
    (59) OPERADOR -> . DIFERENTE
    (60) OPERADOR -> . MAYOR
    (61) OPERADOR -> . MENOR
    (62) OPERADOR -> . MENORIGUAL
    (63) OPERADOR -> . MAYORIGUAL

    IN              shift and go to state 80
    NOT             shift and go to state 81
    IGUAL           shift and go to state 82
    DIFERENTE       shift and go to state 83
    MAYOR           shift and go to state 84
    MENOR           shift and go to state 85
    MENORIGUAL      shift and go to state 86
    MAYORIGUAL      shift and go to state 87

    OPCIONALESS                    shift and go to state 78
    OPERADOR                       shift and go to state 79

state 47

    (47) EXPRESIONNE -> NOMBRE_C . PUNTO CAMPOSC

    PUNTO           shift and go to state 88


state 48

    (48) EXPRESIONNE -> CAMPOSC .

    IN              reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    NOT             reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    IGUAL           reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    DIFERENTE       reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    MAYOR           reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    MENOR           reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    MENORIGUAL      reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    MAYORIGUAL      reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    AND             reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    OR              reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    ID              reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    ENTERO          reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    DECIMAL         reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    CADENASIMPLE    reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    CADENADOBLE     reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    PUNTOCOMA       reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    UNION           reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    INTERSECT       reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    EXCEPT          reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    JOIN            reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    WHERE           reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    INNER           reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    LEFT            reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    RIGHT           reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    FULL            reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    GROUP           reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    LIMIT           reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    OFFSET          reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)
    PARDER          reduce using rule 48 (EXPRESIONNE -> CAMPOSC .)


state 49

    (54) CAMPOSC -> ENTERO .

    IN              reduce using rule 54 (CAMPOSC -> ENTERO .)
    NOT             reduce using rule 54 (CAMPOSC -> ENTERO .)
    IGUAL           reduce using rule 54 (CAMPOSC -> ENTERO .)
    DIFERENTE       reduce using rule 54 (CAMPOSC -> ENTERO .)
    MAYOR           reduce using rule 54 (CAMPOSC -> ENTERO .)
    MENOR           reduce using rule 54 (CAMPOSC -> ENTERO .)
    MENORIGUAL      reduce using rule 54 (CAMPOSC -> ENTERO .)
    MAYORIGUAL      reduce using rule 54 (CAMPOSC -> ENTERO .)
    AND             reduce using rule 54 (CAMPOSC -> ENTERO .)
    OR              reduce using rule 54 (CAMPOSC -> ENTERO .)
    ID              reduce using rule 54 (CAMPOSC -> ENTERO .)
    ENTERO          reduce using rule 54 (CAMPOSC -> ENTERO .)
    DECIMAL         reduce using rule 54 (CAMPOSC -> ENTERO .)
    CADENASIMPLE    reduce using rule 54 (CAMPOSC -> ENTERO .)
    CADENADOBLE     reduce using rule 54 (CAMPOSC -> ENTERO .)
    PUNTOCOMA       reduce using rule 54 (CAMPOSC -> ENTERO .)
    UNION           reduce using rule 54 (CAMPOSC -> ENTERO .)
    INTERSECT       reduce using rule 54 (CAMPOSC -> ENTERO .)
    EXCEPT          reduce using rule 54 (CAMPOSC -> ENTERO .)
    JOIN            reduce using rule 54 (CAMPOSC -> ENTERO .)
    WHERE           reduce using rule 54 (CAMPOSC -> ENTERO .)
    INNER           reduce using rule 54 (CAMPOSC -> ENTERO .)
    LEFT            reduce using rule 54 (CAMPOSC -> ENTERO .)
    RIGHT           reduce using rule 54 (CAMPOSC -> ENTERO .)
    FULL            reduce using rule 54 (CAMPOSC -> ENTERO .)
    GROUP           reduce using rule 54 (CAMPOSC -> ENTERO .)
    LIMIT           reduce using rule 54 (CAMPOSC -> ENTERO .)
    OFFSET          reduce using rule 54 (CAMPOSC -> ENTERO .)
    PARDER          reduce using rule 54 (CAMPOSC -> ENTERO .)


state 50

    (55) CAMPOSC -> DECIMAL .

    IN              reduce using rule 55 (CAMPOSC -> DECIMAL .)
    NOT             reduce using rule 55 (CAMPOSC -> DECIMAL .)
    IGUAL           reduce using rule 55 (CAMPOSC -> DECIMAL .)
    DIFERENTE       reduce using rule 55 (CAMPOSC -> DECIMAL .)
    MAYOR           reduce using rule 55 (CAMPOSC -> DECIMAL .)
    MENOR           reduce using rule 55 (CAMPOSC -> DECIMAL .)
    MENORIGUAL      reduce using rule 55 (CAMPOSC -> DECIMAL .)
    MAYORIGUAL      reduce using rule 55 (CAMPOSC -> DECIMAL .)
    AND             reduce using rule 55 (CAMPOSC -> DECIMAL .)
    OR              reduce using rule 55 (CAMPOSC -> DECIMAL .)
    ID              reduce using rule 55 (CAMPOSC -> DECIMAL .)
    ENTERO          reduce using rule 55 (CAMPOSC -> DECIMAL .)
    DECIMAL         reduce using rule 55 (CAMPOSC -> DECIMAL .)
    CADENASIMPLE    reduce using rule 55 (CAMPOSC -> DECIMAL .)
    CADENADOBLE     reduce using rule 55 (CAMPOSC -> DECIMAL .)
    PUNTOCOMA       reduce using rule 55 (CAMPOSC -> DECIMAL .)
    UNION           reduce using rule 55 (CAMPOSC -> DECIMAL .)
    INTERSECT       reduce using rule 55 (CAMPOSC -> DECIMAL .)
    EXCEPT          reduce using rule 55 (CAMPOSC -> DECIMAL .)
    JOIN            reduce using rule 55 (CAMPOSC -> DECIMAL .)
    WHERE           reduce using rule 55 (CAMPOSC -> DECIMAL .)
    INNER           reduce using rule 55 (CAMPOSC -> DECIMAL .)
    LEFT            reduce using rule 55 (CAMPOSC -> DECIMAL .)
    RIGHT           reduce using rule 55 (CAMPOSC -> DECIMAL .)
    FULL            reduce using rule 55 (CAMPOSC -> DECIMAL .)
    GROUP           reduce using rule 55 (CAMPOSC -> DECIMAL .)
    LIMIT           reduce using rule 55 (CAMPOSC -> DECIMAL .)
    OFFSET          reduce using rule 55 (CAMPOSC -> DECIMAL .)
    PARDER          reduce using rule 55 (CAMPOSC -> DECIMAL .)


state 51

    (56) CAMPOSC -> CADENASIMPLE .

    IN              reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    NOT             reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    IGUAL           reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    DIFERENTE       reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    MAYOR           reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    MENOR           reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    MENORIGUAL      reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    MAYORIGUAL      reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    AND             reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    OR              reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    ID              reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    ENTERO          reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    DECIMAL         reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    CADENASIMPLE    reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    CADENADOBLE     reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    PUNTOCOMA       reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    UNION           reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    INTERSECT       reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    EXCEPT          reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    JOIN            reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    WHERE           reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    INNER           reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    LEFT            reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    RIGHT           reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    FULL            reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    GROUP           reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    LIMIT           reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    OFFSET          reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)
    PARDER          reduce using rule 56 (CAMPOSC -> CADENASIMPLE .)


state 52

    (57) CAMPOSC -> CADENADOBLE .

    IN              reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    NOT             reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    IGUAL           reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    DIFERENTE       reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    MAYOR           reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    MENOR           reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    MENORIGUAL      reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    MAYORIGUAL      reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    AND             reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    OR              reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    ID              reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    ENTERO          reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    DECIMAL         reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    CADENASIMPLE    reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    CADENADOBLE     reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    PUNTOCOMA       reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    UNION           reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    INTERSECT       reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    EXCEPT          reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    JOIN            reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    WHERE           reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    INNER           reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    LEFT            reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    RIGHT           reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    FULL            reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    GROUP           reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    LIMIT           reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    OFFSET          reduce using rule 57 (CAMPOSC -> CADENADOBLE .)
    PARDER          reduce using rule 57 (CAMPOSC -> CADENADOBLE .)


state 53

    (174) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE . IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE
    (177) IF_NOT_EXISTIS -> . IF NOT EXISTS
    (178) IF_NOT_EXISTIS -> .

    IF              shift and go to state 90
    ID              reduce using rule 178 (IF_NOT_EXISTIS -> .)

    IF_NOT_EXISTIS                 shift and go to state 89

state 54

    (175) REPLACE_OP -> OR REPLACE .

    DATABASE        reduce using rule 175 (REPLACE_OP -> OR REPLACE .)


state 55

    (183) SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .

    SELECT          reduce using rule 183 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    CREATE          reduce using rule 183 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    SHOW            reduce using rule 183 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    ALTER           reduce using rule 183 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    DROP            reduce using rule 183 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)
    $end            reduce using rule 183 (SHOW_DATABASES -> SHOW DATABASES SHOW_DATABASES_LIKE .)


state 56

    (184) SHOW_DATABASES_LIKE -> LIKE . CADENADOBLE

    CADENADOBLE     shift and go to state 91


state 57

    (186) ALTER_DATABASE -> ALTER DATABASE ID . ALTER_DATABASE_OP
    (187) ALTER_DATABASE_OP -> . RENAME TO ID
    (188) ALTER_DATABASE_OP -> . OWNER TO ALTER_TABLE_OP_OW
    (192) ALTER_DATABASE_OP -> .

    RENAME          shift and go to state 93
    OWNER           shift and go to state 94
    SELECT          reduce using rule 192 (ALTER_DATABASE_OP -> .)
    CREATE          reduce using rule 192 (ALTER_DATABASE_OP -> .)
    SHOW            reduce using rule 192 (ALTER_DATABASE_OP -> .)
    ALTER           reduce using rule 192 (ALTER_DATABASE_OP -> .)
    DROP            reduce using rule 192 (ALTER_DATABASE_OP -> .)
    $end            reduce using rule 192 (ALTER_DATABASE_OP -> .)

    ALTER_DATABASE_OP              shift and go to state 92

state 58

    (193) DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE . ID

    ID              shift and go to state 95


state 59

    (194) IF_EXISTS_DATABASE -> IF . EXISTS

    EXISTS          shift and go to state 96


state 60

    (6) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS . CUERPO UNIONS
    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS . UNIONS
    (24) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (31) CUERPO -> . WHERE CONDICIONES
    (32) CUERPO -> . MORES
    (133) UNIONS -> . UNIONS UNIONN
    (134) UNIONS -> . UNIONN
    (26) TABLA -> . NOMBRE_T
    (27) TABLA -> . NOMBRE_T S1
    (28) TABLA -> . SUBQUERYS
    (33) MORES -> . MORES MOREE
    (34) MORES -> . MOREE
    (135) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (136) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (137) UNIONN -> . PUNTOCOMA
    (18) NOMBRE_T -> . ID
    (113) SUBQUERYS -> . SUBQUERYS QUERY
    (114) SUBQUERYS -> . QUERY
    (35) MOREE -> . INNERS
    (36) MOREE -> . GROUPS
    (37) MOREE -> . LIMITS
    (138) COMPORTAMIENTO -> . UNION
    (139) COMPORTAMIENTO -> . INTERSECT
    (140) COMPORTAMIENTO -> . EXCEPT
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (64) INNERS -> . INNERS INNERR
    (65) INNERS -> . INNERR
    (83) GROUPS -> . GROUPS GROUPP
    (84) GROUPS -> . GROUPP
    (107) LIMITS -> . LIMITS LIMITT
    (108) LIMITS -> . LIMITT
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (66) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (67) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (68) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (69) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (70) INNERR -> . WHERE CONDICIONES
    (85) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (86) GROUPP -> . GROUP BY EXPRE_LIST
    (109) LIMITT -> . LIMIT EXPRE_NUM
    (110) LIMITT -> . OFFSET EXPRE_NUM
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (73) TIPOS_INNER -> . INNER OUTER
    (74) TIPOS_INNER -> . INNER
    (75) TIPOS_INNER -> . LEFT OUTER
    (76) TIPOS_INNER -> . LEFT
    (77) TIPOS_INNER -> . RIGHT OUTER
    (78) TIPOS_INNER -> . RIGHT
    (79) TIPOS_INNER -> . FULL OUTER
    (80) TIPOS_INNER -> . FULL
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 99
    PUNTOCOMA       shift and go to state 104
    ID              shift and go to state 42
    UNION           shift and go to state 108
    INTERSECT       shift and go to state 109
    EXCEPT          shift and go to state 110
    PARIZQ          shift and go to state 38
    EXISTS          shift and go to state 45
    JOIN            shift and go to state 115
    GROUP           shift and go to state 116
    LIMIT           shift and go to state 117
    OFFSET          shift and go to state 118
    INNER           shift and go to state 119
    LEFT            shift and go to state 120
    RIGHT           shift and go to state 121
    FULL            shift and go to state 122
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CUERPO                         shift and go to state 97
    UNIONS                         shift and go to state 98
    TABLA                          shift and go to state 68
    MORES                          shift and go to state 100
    UNIONN                         shift and go to state 101
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    MOREE                          shift and go to state 102
    COMPORTAMIENTO                 shift and go to state 103
    QUERY                          shift and go to state 43
    INNERS                         shift and go to state 105
    GROUPS                         shift and go to state 106
    LIMITS                         shift and go to state 107
    ATE_QUE                        shift and go to state 44
    INNERR                         shift and go to state 111
    GROUPP                         shift and go to state 112
    LIMITT                         shift and go to state 113
    EXPRESIONNE                    shift and go to state 46
    TIPOS_INNER                    shift and go to state 114
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 61

    (8) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM . NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM . NOMBRES_TABLAS UNIONS
    (24) NOMBRES_TABLAS -> . NOMBRES_TABLAS TABLA
    (25) NOMBRES_TABLAS -> . TABLA
    (26) TABLA -> . NOMBRE_T
    (27) TABLA -> . NOMBRE_T S1
    (28) TABLA -> . SUBQUERYS
    (18) NOMBRE_T -> . ID
    (113) SUBQUERYS -> . SUBQUERYS QUERY
    (114) SUBQUERYS -> . QUERY
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 38
    EXISTS          shift and go to state 45
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    NOMBRES_TABLAS                 shift and go to state 123
    TABLA                          shift and go to state 39
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 46
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 62

    (12) LISTA -> NOMBRE_T PUNTO CAMPOS . S
    (13) LISTA -> NOMBRE_T PUNTO CAMPOS .
    (20) S -> . COMA LISTA
    (21) S -> . AS ALIAS
    (22) S -> . AS ALIAS COMA LISTA

    FROM            reduce using rule 13 (LISTA -> NOMBRE_T PUNTO CAMPOS .)
    ID              reduce using rule 13 (LISTA -> NOMBRE_T PUNTO CAMPOS .)
    ASTERISCO       reduce using rule 13 (LISTA -> NOMBRE_T PUNTO CAMPOS .)
    COMA            shift and go to state 35
    AS              shift and go to state 36

    S                              shift and go to state 124

state 63

    (16) CAMPOS -> ID .

    COMA            reduce using rule 16 (CAMPOS -> ID .)
    AS              reduce using rule 16 (CAMPOS -> ID .)
    FROM            reduce using rule 16 (CAMPOS -> ID .)
    ID              reduce using rule 16 (CAMPOS -> ID .)
    ASTERISCO       reduce using rule 16 (CAMPOS -> ID .)
    ASC             reduce using rule 16 (CAMPOS -> ID .)
    DESC            reduce using rule 16 (CAMPOS -> ID .)
    HAVING          reduce using rule 16 (CAMPOS -> ID .)
    GROUP           reduce using rule 16 (CAMPOS -> ID .)
    JOIN            reduce using rule 16 (CAMPOS -> ID .)
    WHERE           reduce using rule 16 (CAMPOS -> ID .)
    LIMIT           reduce using rule 16 (CAMPOS -> ID .)
    OFFSET          reduce using rule 16 (CAMPOS -> ID .)
    INNER           reduce using rule 16 (CAMPOS -> ID .)
    LEFT            reduce using rule 16 (CAMPOS -> ID .)
    RIGHT           reduce using rule 16 (CAMPOS -> ID .)
    FULL            reduce using rule 16 (CAMPOS -> ID .)
    PUNTOCOMA       reduce using rule 16 (CAMPOS -> ID .)
    UNION           reduce using rule 16 (CAMPOS -> ID .)
    INTERSECT       reduce using rule 16 (CAMPOS -> ID .)
    EXCEPT          reduce using rule 16 (CAMPOS -> ID .)


state 64

    (20) S -> COMA LISTA .

    FROM            reduce using rule 20 (S -> COMA LISTA .)
    ID              reduce using rule 20 (S -> COMA LISTA .)
    ASTERISCO       reduce using rule 20 (S -> COMA LISTA .)


state 65

    (21) S -> AS ALIAS .
    (22) S -> AS ALIAS . COMA LISTA

    FROM            reduce using rule 21 (S -> AS ALIAS .)
    ID              reduce using rule 21 (S -> AS ALIAS .)
    ASTERISCO       reduce using rule 21 (S -> AS ALIAS .)
    COMA            shift and go to state 125


state 66

    (19) ALIAS -> ID .

    COMA            reduce using rule 19 (ALIAS -> ID .)
    FROM            reduce using rule 19 (ALIAS -> ID .)
    ID              reduce using rule 19 (ALIAS -> ID .)
    ASTERISCO       reduce using rule 19 (ALIAS -> ID .)
    PARIZQ          reduce using rule 19 (ALIAS -> ID .)
    EXISTS          reduce using rule 19 (ALIAS -> ID .)
    ENTERO          reduce using rule 19 (ALIAS -> ID .)
    DECIMAL         reduce using rule 19 (ALIAS -> ID .)
    CADENASIMPLE    reduce using rule 19 (ALIAS -> ID .)
    CADENADOBLE     reduce using rule 19 (ALIAS -> ID .)
    WHERE           reduce using rule 19 (ALIAS -> ID .)
    PUNTOCOMA       reduce using rule 19 (ALIAS -> ID .)
    UNION           reduce using rule 19 (ALIAS -> ID .)
    INTERSECT       reduce using rule 19 (ALIAS -> ID .)
    EXCEPT          reduce using rule 19 (ALIAS -> ID .)
    JOIN            reduce using rule 19 (ALIAS -> ID .)
    GROUP           reduce using rule 19 (ALIAS -> ID .)
    LIMIT           reduce using rule 19 (ALIAS -> ID .)
    OFFSET          reduce using rule 19 (ALIAS -> ID .)
    INNER           reduce using rule 19 (ALIAS -> ID .)
    LEFT            reduce using rule 19 (ALIAS -> ID .)
    RIGHT           reduce using rule 19 (ALIAS -> ID .)
    FULL            reduce using rule 19 (ALIAS -> ID .)
    ASC             reduce using rule 19 (ALIAS -> ID .)
    DESC            reduce using rule 19 (ALIAS -> ID .)
    HAVING          reduce using rule 19 (ALIAS -> ID .)


state 67

    (141) DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ . CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (117) QUERY -> PARIZQ . QUE PARDER
    (118) QUERY -> PARIZQ . QUE PARDER AS_NO
    (142) CUERPO_CREATE_TABLE -> . LISTA_DE_COLUMNAS
    (132) QUE -> . DQL_COMANDOS
    (143) LISTA_DE_COLUMNAS -> . LISTA_DE_COLUMNAS LISTA2
    (144) LISTA_DE_COLUMNAS -> . LISTA2
    (6) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (8) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (141) DQL_COMANDOS -> . CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA
    (145) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
    (146) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE
    (18) NOMBRE_T -> . ID

    SELECT          shift and go to state 6
    CREATE          shift and go to state 71
    ID              shift and go to state 130

    CUERPO_CREATE_TABLE            shift and go to state 126
    QUE                            shift and go to state 69
    LISTA_DE_COLUMNAS              shift and go to state 127
    DQL_COMANDOS                   shift and go to state 70
    LISTA2                         shift and go to state 128
    NOMBRE_T                       shift and go to state 129

state 68

    (24) NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .

    PARIZQ          reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    ID              reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    EXISTS          reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    ENTERO          reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    DECIMAL         reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    CADENASIMPLE    reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    CADENADOBLE     reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    WHERE           reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    PUNTOCOMA       reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    UNION           reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    INTERSECT       reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    EXCEPT          reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    JOIN            reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    GROUP           reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    LIMIT           reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    OFFSET          reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    INNER           reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    LEFT            reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    RIGHT           reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)
    FULL            reduce using rule 24 (NOMBRES_TABLAS -> NOMBRES_TABLAS TABLA .)


state 69

    (117) QUERY -> PARIZQ QUE . PARDER
    (118) QUERY -> PARIZQ QUE . PARDER AS_NO

    PARDER          shift and go to state 131


state 70

    (132) QUE -> DQL_COMANDOS .

    PARDER          reduce using rule 132 (QUE -> DQL_COMANDOS .)


state 71

    (141) DQL_COMANDOS -> CREATE . TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA

    TABLE           shift and go to state 24


state 72

    (27) TABLA -> NOMBRE_T S1 .

    PARIZQ          reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    ID              reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    EXISTS          reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    ENTERO          reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    DECIMAL         reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    CADENASIMPLE    reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    CADENADOBLE     reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    WHERE           reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    PUNTOCOMA       reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    UNION           reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    INTERSECT       reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    EXCEPT          reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    JOIN            reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    GROUP           reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    LIMIT           reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    OFFSET          reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    INNER           reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    LEFT            reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    RIGHT           reduce using rule 27 (TABLA -> NOMBRE_T S1 .)
    FULL            reduce using rule 27 (TABLA -> NOMBRE_T S1 .)


state 73

    (29) S1 -> COMA . TABLA
    (26) TABLA -> . NOMBRE_T
    (27) TABLA -> . NOMBRE_T S1
    (28) TABLA -> . SUBQUERYS
    (18) NOMBRE_T -> . ID
    (113) SUBQUERYS -> . SUBQUERYS QUERY
    (114) SUBQUERYS -> . QUERY
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 42
    PARIZQ          shift and go to state 38
    EXISTS          shift and go to state 45
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    TABLA                          shift and go to state 132
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    QUERY                          shift and go to state 43
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 46
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 74

    (30) S1 -> AS . ALIAS
    (19) ALIAS -> . ID

    ID              shift and go to state 66

    ALIAS                          shift and go to state 133

state 75

    (113) SUBQUERYS -> SUBQUERYS QUERY .

    PARIZQ          reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    EXISTS          reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    ID              reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    ENTERO          reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    DECIMAL         reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    CADENASIMPLE    reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    CADENADOBLE     reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    WHERE           reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    PUNTOCOMA       reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    UNION           reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    INTERSECT       reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    EXCEPT          reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    JOIN            reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    GROUP           reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    LIMIT           reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    OFFSET          reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    INNER           reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    LEFT            reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    RIGHT           reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)
    FULL            reduce using rule 113 (SUBQUERYS -> SUBQUERYS QUERY .)


state 76

    (126) ATE_QUE -> ID .
    (52) NOMBRE_C -> ID .
    (53) CAMPOSC -> ID .

    PARIZQ          reduce using rule 126 (ATE_QUE -> ID .)
    PUNTO           reduce using rule 52 (NOMBRE_C -> ID .)
    IN              reduce using rule 53 (CAMPOSC -> ID .)
    NOT             reduce using rule 53 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 53 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 53 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 53 (CAMPOSC -> ID .)
    MENOR           reduce using rule 53 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 53 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 53 (CAMPOSC -> ID .)


state 77

    (115) QUERY -> ATE_QUE PARIZQ . QUE PARDER
    (116) QUERY -> ATE_QUE PARIZQ . QUE PARDER AS_NO
    (132) QUE -> . DQL_COMANDOS
    (6) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (8) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (141) DQL_COMANDOS -> . CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA

    SELECT          shift and go to state 6
    CREATE          shift and go to state 71

    QUE                            shift and go to state 134
    DQL_COMANDOS                   shift and go to state 70

state 78

    (124) ATE_QUE -> EXPRESIONNE OPCIONALESS .

    PARIZQ          reduce using rule 124 (ATE_QUE -> EXPRESIONNE OPCIONALESS .)


state 79

    (125) ATE_QUE -> EXPRESIONNE OPERADOR . OPCIONALESS2
    (129) OPCIONALESS2 -> . ANY
    (130) OPCIONALESS2 -> . ALL
    (131) OPCIONALESS2 -> . SOME

    ANY             shift and go to state 136
    ALL             shift and go to state 137
    SOME            shift and go to state 138

    OPCIONALESS2                   shift and go to state 135

state 80

    (127) OPCIONALESS -> IN .

    PARIZQ          reduce using rule 127 (OPCIONALESS -> IN .)


state 81

    (128) OPCIONALESS -> NOT . IN

    IN              shift and go to state 139


state 82

    (58) OPERADOR -> IGUAL .

    ANY             reduce using rule 58 (OPERADOR -> IGUAL .)
    ALL             reduce using rule 58 (OPERADOR -> IGUAL .)
    SOME            reduce using rule 58 (OPERADOR -> IGUAL .)
    ID              reduce using rule 58 (OPERADOR -> IGUAL .)
    ENTERO          reduce using rule 58 (OPERADOR -> IGUAL .)
    DECIMAL         reduce using rule 58 (OPERADOR -> IGUAL .)
    CADENASIMPLE    reduce using rule 58 (OPERADOR -> IGUAL .)
    CADENADOBLE     reduce using rule 58 (OPERADOR -> IGUAL .)


state 83

    (59) OPERADOR -> DIFERENTE .

    ANY             reduce using rule 59 (OPERADOR -> DIFERENTE .)
    ALL             reduce using rule 59 (OPERADOR -> DIFERENTE .)
    SOME            reduce using rule 59 (OPERADOR -> DIFERENTE .)
    ID              reduce using rule 59 (OPERADOR -> DIFERENTE .)
    ENTERO          reduce using rule 59 (OPERADOR -> DIFERENTE .)
    DECIMAL         reduce using rule 59 (OPERADOR -> DIFERENTE .)
    CADENASIMPLE    reduce using rule 59 (OPERADOR -> DIFERENTE .)
    CADENADOBLE     reduce using rule 59 (OPERADOR -> DIFERENTE .)


state 84

    (60) OPERADOR -> MAYOR .

    ANY             reduce using rule 60 (OPERADOR -> MAYOR .)
    ALL             reduce using rule 60 (OPERADOR -> MAYOR .)
    SOME            reduce using rule 60 (OPERADOR -> MAYOR .)
    ID              reduce using rule 60 (OPERADOR -> MAYOR .)
    ENTERO          reduce using rule 60 (OPERADOR -> MAYOR .)
    DECIMAL         reduce using rule 60 (OPERADOR -> MAYOR .)
    CADENASIMPLE    reduce using rule 60 (OPERADOR -> MAYOR .)
    CADENADOBLE     reduce using rule 60 (OPERADOR -> MAYOR .)


state 85

    (61) OPERADOR -> MENOR .

    ANY             reduce using rule 61 (OPERADOR -> MENOR .)
    ALL             reduce using rule 61 (OPERADOR -> MENOR .)
    SOME            reduce using rule 61 (OPERADOR -> MENOR .)
    ID              reduce using rule 61 (OPERADOR -> MENOR .)
    ENTERO          reduce using rule 61 (OPERADOR -> MENOR .)
    DECIMAL         reduce using rule 61 (OPERADOR -> MENOR .)
    CADENASIMPLE    reduce using rule 61 (OPERADOR -> MENOR .)
    CADENADOBLE     reduce using rule 61 (OPERADOR -> MENOR .)


state 86

    (62) OPERADOR -> MENORIGUAL .

    ANY             reduce using rule 62 (OPERADOR -> MENORIGUAL .)
    ALL             reduce using rule 62 (OPERADOR -> MENORIGUAL .)
    SOME            reduce using rule 62 (OPERADOR -> MENORIGUAL .)
    ID              reduce using rule 62 (OPERADOR -> MENORIGUAL .)
    ENTERO          reduce using rule 62 (OPERADOR -> MENORIGUAL .)
    DECIMAL         reduce using rule 62 (OPERADOR -> MENORIGUAL .)
    CADENASIMPLE    reduce using rule 62 (OPERADOR -> MENORIGUAL .)
    CADENADOBLE     reduce using rule 62 (OPERADOR -> MENORIGUAL .)


state 87

    (63) OPERADOR -> MAYORIGUAL .

    ANY             reduce using rule 63 (OPERADOR -> MAYORIGUAL .)
    ALL             reduce using rule 63 (OPERADOR -> MAYORIGUAL .)
    SOME            reduce using rule 63 (OPERADOR -> MAYORIGUAL .)
    ID              reduce using rule 63 (OPERADOR -> MAYORIGUAL .)
    ENTERO          reduce using rule 63 (OPERADOR -> MAYORIGUAL .)
    DECIMAL         reduce using rule 63 (OPERADOR -> MAYORIGUAL .)
    CADENASIMPLE    reduce using rule 63 (OPERADOR -> MAYORIGUAL .)
    CADENADOBLE     reduce using rule 63 (OPERADOR -> MAYORIGUAL .)


state 88

    (47) EXPRESIONNE -> NOMBRE_C PUNTO . CAMPOSC
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 141
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CAMPOSC                        shift and go to state 140

state 89

    (174) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS . ID OWNER_DATABASE MODE_DATABASE

    ID              shift and go to state 142


state 90

    (177) IF_NOT_EXISTIS -> IF . NOT EXISTS

    NOT             shift and go to state 143


state 91

    (184) SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .

    SELECT          reduce using rule 184 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    CREATE          reduce using rule 184 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    SHOW            reduce using rule 184 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    ALTER           reduce using rule 184 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    DROP            reduce using rule 184 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)
    $end            reduce using rule 184 (SHOW_DATABASES_LIKE -> LIKE CADENADOBLE .)


state 92

    (186) ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .

    SELECT          reduce using rule 186 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    CREATE          reduce using rule 186 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    SHOW            reduce using rule 186 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    ALTER           reduce using rule 186 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    DROP            reduce using rule 186 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)
    $end            reduce using rule 186 (ALTER_DATABASE -> ALTER DATABASE ID ALTER_DATABASE_OP .)


state 93

    (187) ALTER_DATABASE_OP -> RENAME . TO ID

    TO              shift and go to state 144


state 94

    (188) ALTER_DATABASE_OP -> OWNER . TO ALTER_TABLE_OP_OW

    TO              shift and go to state 145


state 95

    (193) DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .

    SELECT          reduce using rule 193 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    CREATE          reduce using rule 193 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    SHOW            reduce using rule 193 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    ALTER           reduce using rule 193 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    DROP            reduce using rule 193 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)
    $end            reduce using rule 193 (DROP_DATABASE -> DROP DATABASE IF_EXISTS_DATABASE ID .)


state 96

    (194) IF_EXISTS_DATABASE -> IF EXISTS .

    ID              reduce using rule 194 (IF_EXISTS_DATABASE -> IF EXISTS .)


state 97

    (6) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO . UNIONS
    (133) UNIONS -> . UNIONS UNIONN
    (134) UNIONS -> . UNIONN
    (135) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (136) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (137) UNIONN -> . PUNTOCOMA
    (138) COMPORTAMIENTO -> . UNION
    (139) COMPORTAMIENTO -> . INTERSECT
    (140) COMPORTAMIENTO -> . EXCEPT

    PUNTOCOMA       shift and go to state 104
    UNION           shift and go to state 108
    INTERSECT       shift and go to state 109
    EXCEPT          shift and go to state 110

    UNIONS                         shift and go to state 146
    UNIONN                         shift and go to state 101
    COMPORTAMIENTO                 shift and go to state 103

state 98

    (7) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .
    (133) UNIONS -> UNIONS . UNIONN
    (135) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (136) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (137) UNIONN -> . PUNTOCOMA
    (138) COMPORTAMIENTO -> . UNION
    (139) COMPORTAMIENTO -> . INTERSECT
    (140) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    CREATE          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    SHOW            reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    ALTER           reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DROP            reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    $end            reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PARDER          reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PUNTOCOMA       shift and go to state 104
    UNION           shift and go to state 108
    INTERSECT       shift and go to state 109
    EXCEPT          shift and go to state 110

  ! PUNTOCOMA       [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! UNION           [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! INTERSECT       [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! EXCEPT          [ reduce using rule 7 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]

    UNIONN                         shift and go to state 147
    COMPORTAMIENTO                 shift and go to state 103

state 99

    (31) CUERPO -> WHERE . CONDICIONES
    (70) INNERR -> WHERE . CONDICIONES
    (38) CONDICIONES -> . CONDICIONES CONDICION
    (39) CONDICIONES -> . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICIONES                    shift and go to state 148
    CONDICION                      shift and go to state 149
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 100

    (32) CUERPO -> MORES .
    (33) MORES -> MORES . MOREE
    (35) MOREE -> . INNERS
    (36) MOREE -> . GROUPS
    (37) MOREE -> . LIMITS
    (64) INNERS -> . INNERS INNERR
    (65) INNERS -> . INNERR
    (83) GROUPS -> . GROUPS GROUPP
    (84) GROUPS -> . GROUPP
    (107) LIMITS -> . LIMITS LIMITT
    (108) LIMITS -> . LIMITT
    (66) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (67) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (68) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (69) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (70) INNERR -> . WHERE CONDICIONES
    (85) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (86) GROUPP -> . GROUP BY EXPRE_LIST
    (109) LIMITT -> . LIMIT EXPRE_NUM
    (110) LIMITT -> . OFFSET EXPRE_NUM
    (73) TIPOS_INNER -> . INNER OUTER
    (74) TIPOS_INNER -> . INNER
    (75) TIPOS_INNER -> . LEFT OUTER
    (76) TIPOS_INNER -> . LEFT
    (77) TIPOS_INNER -> . RIGHT OUTER
    (78) TIPOS_INNER -> . RIGHT
    (79) TIPOS_INNER -> . FULL OUTER
    (80) TIPOS_INNER -> . FULL

    PUNTOCOMA       reduce using rule 32 (CUERPO -> MORES .)
    UNION           reduce using rule 32 (CUERPO -> MORES .)
    INTERSECT       reduce using rule 32 (CUERPO -> MORES .)
    EXCEPT          reduce using rule 32 (CUERPO -> MORES .)
    JOIN            shift and go to state 115
    WHERE           shift and go to state 156
    GROUP           shift and go to state 116
    LIMIT           shift and go to state 117
    OFFSET          shift and go to state 118
    INNER           shift and go to state 119
    LEFT            shift and go to state 120
    RIGHT           shift and go to state 121
    FULL            shift and go to state 122

    MOREE                          shift and go to state 155
    INNERS                         shift and go to state 105
    GROUPS                         shift and go to state 106
    LIMITS                         shift and go to state 107
    INNERR                         shift and go to state 111
    GROUPP                         shift and go to state 112
    LIMITT                         shift and go to state 113
    TIPOS_INNER                    shift and go to state 114

state 101

    (134) UNIONS -> UNIONN .

    PUNTOCOMA       reduce using rule 134 (UNIONS -> UNIONN .)
    UNION           reduce using rule 134 (UNIONS -> UNIONN .)
    INTERSECT       reduce using rule 134 (UNIONS -> UNIONN .)
    EXCEPT          reduce using rule 134 (UNIONS -> UNIONN .)
    SELECT          reduce using rule 134 (UNIONS -> UNIONN .)
    CREATE          reduce using rule 134 (UNIONS -> UNIONN .)
    SHOW            reduce using rule 134 (UNIONS -> UNIONN .)
    ALTER           reduce using rule 134 (UNIONS -> UNIONN .)
    DROP            reduce using rule 134 (UNIONS -> UNIONN .)
    $end            reduce using rule 134 (UNIONS -> UNIONN .)
    PARDER          reduce using rule 134 (UNIONS -> UNIONN .)


state 102

    (34) MORES -> MOREE .

    JOIN            reduce using rule 34 (MORES -> MOREE .)
    WHERE           reduce using rule 34 (MORES -> MOREE .)
    GROUP           reduce using rule 34 (MORES -> MOREE .)
    LIMIT           reduce using rule 34 (MORES -> MOREE .)
    OFFSET          reduce using rule 34 (MORES -> MOREE .)
    INNER           reduce using rule 34 (MORES -> MOREE .)
    LEFT            reduce using rule 34 (MORES -> MOREE .)
    RIGHT           reduce using rule 34 (MORES -> MOREE .)
    FULL            reduce using rule 34 (MORES -> MOREE .)
    PUNTOCOMA       reduce using rule 34 (MORES -> MOREE .)
    UNION           reduce using rule 34 (MORES -> MOREE .)
    INTERSECT       reduce using rule 34 (MORES -> MOREE .)
    EXCEPT          reduce using rule 34 (MORES -> MOREE .)


state 103

    (135) UNIONN -> COMPORTAMIENTO . ALL DQL_COMANDOS
    (136) UNIONN -> COMPORTAMIENTO . DQL_COMANDOS
    (6) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (8) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (141) DQL_COMANDOS -> . CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA

    ALL             shift and go to state 157
    SELECT          shift and go to state 6
    CREATE          shift and go to state 71

    DQL_COMANDOS                   shift and go to state 158

state 104

    (137) UNIONN -> PUNTOCOMA .

    PUNTOCOMA       reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    UNION           reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    INTERSECT       reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    EXCEPT          reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    SELECT          reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    CREATE          reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    SHOW            reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    ALTER           reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    DROP            reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    $end            reduce using rule 137 (UNIONN -> PUNTOCOMA .)
    PARDER          reduce using rule 137 (UNIONN -> PUNTOCOMA .)


state 105

    (35) MOREE -> INNERS .
    (64) INNERS -> INNERS . INNERR
    (66) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (67) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (68) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (69) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (70) INNERR -> . WHERE CONDICIONES
    (73) TIPOS_INNER -> . INNER OUTER
    (74) TIPOS_INNER -> . INNER
    (75) TIPOS_INNER -> . LEFT OUTER
    (76) TIPOS_INNER -> . LEFT
    (77) TIPOS_INNER -> . RIGHT OUTER
    (78) TIPOS_INNER -> . RIGHT
    (79) TIPOS_INNER -> . FULL OUTER
    (80) TIPOS_INNER -> . FULL

  ! shift/reduce conflict for JOIN resolved as shift
  ! shift/reduce conflict for WHERE resolved as shift
  ! shift/reduce conflict for INNER resolved as shift
  ! shift/reduce conflict for LEFT resolved as shift
  ! shift/reduce conflict for RIGHT resolved as shift
  ! shift/reduce conflict for FULL resolved as shift
    GROUP           reduce using rule 35 (MOREE -> INNERS .)
    LIMIT           reduce using rule 35 (MOREE -> INNERS .)
    OFFSET          reduce using rule 35 (MOREE -> INNERS .)
    PUNTOCOMA       reduce using rule 35 (MOREE -> INNERS .)
    UNION           reduce using rule 35 (MOREE -> INNERS .)
    INTERSECT       reduce using rule 35 (MOREE -> INNERS .)
    EXCEPT          reduce using rule 35 (MOREE -> INNERS .)
    JOIN            shift and go to state 115
    WHERE           shift and go to state 156
    INNER           shift and go to state 119
    LEFT            shift and go to state 120
    RIGHT           shift and go to state 121
    FULL            shift and go to state 122

  ! JOIN            [ reduce using rule 35 (MOREE -> INNERS .) ]
  ! WHERE           [ reduce using rule 35 (MOREE -> INNERS .) ]
  ! INNER           [ reduce using rule 35 (MOREE -> INNERS .) ]
  ! LEFT            [ reduce using rule 35 (MOREE -> INNERS .) ]
  ! RIGHT           [ reduce using rule 35 (MOREE -> INNERS .) ]
  ! FULL            [ reduce using rule 35 (MOREE -> INNERS .) ]

    INNERR                         shift and go to state 159
    TIPOS_INNER                    shift and go to state 114

state 106

    (36) MOREE -> GROUPS .
    (83) GROUPS -> GROUPS . GROUPP
    (85) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (86) GROUPP -> . GROUP BY EXPRE_LIST

  ! shift/reduce conflict for GROUP resolved as shift
    JOIN            reduce using rule 36 (MOREE -> GROUPS .)
    WHERE           reduce using rule 36 (MOREE -> GROUPS .)
    LIMIT           reduce using rule 36 (MOREE -> GROUPS .)
    OFFSET          reduce using rule 36 (MOREE -> GROUPS .)
    INNER           reduce using rule 36 (MOREE -> GROUPS .)
    LEFT            reduce using rule 36 (MOREE -> GROUPS .)
    RIGHT           reduce using rule 36 (MOREE -> GROUPS .)
    FULL            reduce using rule 36 (MOREE -> GROUPS .)
    PUNTOCOMA       reduce using rule 36 (MOREE -> GROUPS .)
    UNION           reduce using rule 36 (MOREE -> GROUPS .)
    INTERSECT       reduce using rule 36 (MOREE -> GROUPS .)
    EXCEPT          reduce using rule 36 (MOREE -> GROUPS .)
    GROUP           shift and go to state 116

  ! GROUP           [ reduce using rule 36 (MOREE -> GROUPS .) ]

    GROUPP                         shift and go to state 160

state 107

    (37) MOREE -> LIMITS .
    (107) LIMITS -> LIMITS . LIMITT
    (109) LIMITT -> . LIMIT EXPRE_NUM
    (110) LIMITT -> . OFFSET EXPRE_NUM

  ! shift/reduce conflict for LIMIT resolved as shift
  ! shift/reduce conflict for OFFSET resolved as shift
    JOIN            reduce using rule 37 (MOREE -> LIMITS .)
    WHERE           reduce using rule 37 (MOREE -> LIMITS .)
    GROUP           reduce using rule 37 (MOREE -> LIMITS .)
    INNER           reduce using rule 37 (MOREE -> LIMITS .)
    LEFT            reduce using rule 37 (MOREE -> LIMITS .)
    RIGHT           reduce using rule 37 (MOREE -> LIMITS .)
    FULL            reduce using rule 37 (MOREE -> LIMITS .)
    PUNTOCOMA       reduce using rule 37 (MOREE -> LIMITS .)
    UNION           reduce using rule 37 (MOREE -> LIMITS .)
    INTERSECT       reduce using rule 37 (MOREE -> LIMITS .)
    EXCEPT          reduce using rule 37 (MOREE -> LIMITS .)
    LIMIT           shift and go to state 117
    OFFSET          shift and go to state 118

  ! LIMIT           [ reduce using rule 37 (MOREE -> LIMITS .) ]
  ! OFFSET          [ reduce using rule 37 (MOREE -> LIMITS .) ]

    LIMITT                         shift and go to state 161

state 108

    (138) COMPORTAMIENTO -> UNION .

    ALL             reduce using rule 138 (COMPORTAMIENTO -> UNION .)
    SELECT          reduce using rule 138 (COMPORTAMIENTO -> UNION .)
    CREATE          reduce using rule 138 (COMPORTAMIENTO -> UNION .)


state 109

    (139) COMPORTAMIENTO -> INTERSECT .

    ALL             reduce using rule 139 (COMPORTAMIENTO -> INTERSECT .)
    SELECT          reduce using rule 139 (COMPORTAMIENTO -> INTERSECT .)
    CREATE          reduce using rule 139 (COMPORTAMIENTO -> INTERSECT .)


state 110

    (140) COMPORTAMIENTO -> EXCEPT .

    ALL             reduce using rule 140 (COMPORTAMIENTO -> EXCEPT .)
    SELECT          reduce using rule 140 (COMPORTAMIENTO -> EXCEPT .)
    CREATE          reduce using rule 140 (COMPORTAMIENTO -> EXCEPT .)


state 111

    (65) INNERS -> INNERR .

    JOIN            reduce using rule 65 (INNERS -> INNERR .)
    WHERE           reduce using rule 65 (INNERS -> INNERR .)
    INNER           reduce using rule 65 (INNERS -> INNERR .)
    LEFT            reduce using rule 65 (INNERS -> INNERR .)
    RIGHT           reduce using rule 65 (INNERS -> INNERR .)
    FULL            reduce using rule 65 (INNERS -> INNERR .)
    GROUP           reduce using rule 65 (INNERS -> INNERR .)
    LIMIT           reduce using rule 65 (INNERS -> INNERR .)
    OFFSET          reduce using rule 65 (INNERS -> INNERR .)
    PUNTOCOMA       reduce using rule 65 (INNERS -> INNERR .)
    UNION           reduce using rule 65 (INNERS -> INNERR .)
    INTERSECT       reduce using rule 65 (INNERS -> INNERR .)
    EXCEPT          reduce using rule 65 (INNERS -> INNERR .)


state 112

    (84) GROUPS -> GROUPP .

    GROUP           reduce using rule 84 (GROUPS -> GROUPP .)
    JOIN            reduce using rule 84 (GROUPS -> GROUPP .)
    WHERE           reduce using rule 84 (GROUPS -> GROUPP .)
    LIMIT           reduce using rule 84 (GROUPS -> GROUPP .)
    OFFSET          reduce using rule 84 (GROUPS -> GROUPP .)
    INNER           reduce using rule 84 (GROUPS -> GROUPP .)
    LEFT            reduce using rule 84 (GROUPS -> GROUPP .)
    RIGHT           reduce using rule 84 (GROUPS -> GROUPP .)
    FULL            reduce using rule 84 (GROUPS -> GROUPP .)
    PUNTOCOMA       reduce using rule 84 (GROUPS -> GROUPP .)
    UNION           reduce using rule 84 (GROUPS -> GROUPP .)
    INTERSECT       reduce using rule 84 (GROUPS -> GROUPP .)
    EXCEPT          reduce using rule 84 (GROUPS -> GROUPP .)


state 113

    (108) LIMITS -> LIMITT .

    LIMIT           reduce using rule 108 (LIMITS -> LIMITT .)
    OFFSET          reduce using rule 108 (LIMITS -> LIMITT .)
    JOIN            reduce using rule 108 (LIMITS -> LIMITT .)
    WHERE           reduce using rule 108 (LIMITS -> LIMITT .)
    GROUP           reduce using rule 108 (LIMITS -> LIMITT .)
    INNER           reduce using rule 108 (LIMITS -> LIMITT .)
    LEFT            reduce using rule 108 (LIMITS -> LIMITT .)
    RIGHT           reduce using rule 108 (LIMITS -> LIMITT .)
    FULL            reduce using rule 108 (LIMITS -> LIMITT .)
    PUNTOCOMA       reduce using rule 108 (LIMITS -> LIMITT .)
    UNION           reduce using rule 108 (LIMITS -> LIMITT .)
    INTERSECT       reduce using rule 108 (LIMITS -> LIMITT .)
    EXCEPT          reduce using rule 108 (LIMITS -> LIMITT .)


state 114

    (66) INNERR -> TIPOS_INNER . JOIN TABLA_REF ON CONDICIONES
    (68) INNERR -> TIPOS_INNER . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER

    JOIN            shift and go to state 162


state 115

    (67) INNERR -> JOIN . TABLA_REF ON CONDICIONES
    (69) INNERR -> JOIN . TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (81) TABLA_REF -> . ID
    (82) TABLA_REF -> . ID AS ID

    ID              shift and go to state 164

    TABLA_REF                      shift and go to state 163

state 116

    (85) GROUPP -> GROUP . BY EXPRE_LIST MORE_ORDER
    (86) GROUPP -> GROUP . BY EXPRE_LIST

    BY              shift and go to state 165


state 117

    (109) LIMITT -> LIMIT . EXPRE_NUM
    (111) EXPRE_NUM -> . ENTERO
    (112) EXPRE_NUM -> . ALL

    ENTERO          shift and go to state 167
    ALL             shift and go to state 168

    EXPRE_NUM                      shift and go to state 166

state 118

    (110) LIMITT -> OFFSET . EXPRE_NUM
    (111) EXPRE_NUM -> . ENTERO
    (112) EXPRE_NUM -> . ALL

    ENTERO          shift and go to state 167
    ALL             shift and go to state 168

    EXPRE_NUM                      shift and go to state 169

state 119

    (73) TIPOS_INNER -> INNER . OUTER
    (74) TIPOS_INNER -> INNER .

    OUTER           shift and go to state 170
    JOIN            reduce using rule 74 (TIPOS_INNER -> INNER .)


state 120

    (75) TIPOS_INNER -> LEFT . OUTER
    (76) TIPOS_INNER -> LEFT .

    OUTER           shift and go to state 171
    JOIN            reduce using rule 76 (TIPOS_INNER -> LEFT .)


state 121

    (77) TIPOS_INNER -> RIGHT . OUTER
    (78) TIPOS_INNER -> RIGHT .

    OUTER           shift and go to state 172
    JOIN            reduce using rule 78 (TIPOS_INNER -> RIGHT .)


state 122

    (79) TIPOS_INNER -> FULL . OUTER
    (80) TIPOS_INNER -> FULL .

    OUTER           shift and go to state 173
    JOIN            reduce using rule 80 (TIPOS_INNER -> FULL .)


state 123

    (8) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS . CUERPO UNIONS
    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS . UNIONS
    (24) NOMBRES_TABLAS -> NOMBRES_TABLAS . TABLA
    (31) CUERPO -> . WHERE CONDICIONES
    (32) CUERPO -> . MORES
    (133) UNIONS -> . UNIONS UNIONN
    (134) UNIONS -> . UNIONN
    (26) TABLA -> . NOMBRE_T
    (27) TABLA -> . NOMBRE_T S1
    (28) TABLA -> . SUBQUERYS
    (33) MORES -> . MORES MOREE
    (34) MORES -> . MOREE
    (135) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (136) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (137) UNIONN -> . PUNTOCOMA
    (18) NOMBRE_T -> . ID
    (113) SUBQUERYS -> . SUBQUERYS QUERY
    (114) SUBQUERYS -> . QUERY
    (35) MOREE -> . INNERS
    (36) MOREE -> . GROUPS
    (37) MOREE -> . LIMITS
    (138) COMPORTAMIENTO -> . UNION
    (139) COMPORTAMIENTO -> . INTERSECT
    (140) COMPORTAMIENTO -> . EXCEPT
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (64) INNERS -> . INNERS INNERR
    (65) INNERS -> . INNERR
    (83) GROUPS -> . GROUPS GROUPP
    (84) GROUPS -> . GROUPP
    (107) LIMITS -> . LIMITS LIMITT
    (108) LIMITS -> . LIMITT
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (66) INNERR -> . TIPOS_INNER JOIN TABLA_REF ON CONDICIONES
    (67) INNERR -> . JOIN TABLA_REF ON CONDICIONES
    (68) INNERR -> . TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (69) INNERR -> . JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (70) INNERR -> . WHERE CONDICIONES
    (85) GROUPP -> . GROUP BY EXPRE_LIST MORE_ORDER
    (86) GROUPP -> . GROUP BY EXPRE_LIST
    (109) LIMITT -> . LIMIT EXPRE_NUM
    (110) LIMITT -> . OFFSET EXPRE_NUM
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (73) TIPOS_INNER -> . INNER OUTER
    (74) TIPOS_INNER -> . INNER
    (75) TIPOS_INNER -> . LEFT OUTER
    (76) TIPOS_INNER -> . LEFT
    (77) TIPOS_INNER -> . RIGHT OUTER
    (78) TIPOS_INNER -> . RIGHT
    (79) TIPOS_INNER -> . FULL OUTER
    (80) TIPOS_INNER -> . FULL
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    WHERE           shift and go to state 99
    PUNTOCOMA       shift and go to state 104
    ID              shift and go to state 42
    UNION           shift and go to state 108
    INTERSECT       shift and go to state 109
    EXCEPT          shift and go to state 110
    PARIZQ          shift and go to state 38
    EXISTS          shift and go to state 45
    JOIN            shift and go to state 115
    GROUP           shift and go to state 116
    LIMIT           shift and go to state 117
    OFFSET          shift and go to state 118
    INNER           shift and go to state 119
    LEFT            shift and go to state 120
    RIGHT           shift and go to state 121
    FULL            shift and go to state 122
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CUERPO                         shift and go to state 174
    UNIONS                         shift and go to state 175
    TABLA                          shift and go to state 68
    MORES                          shift and go to state 100
    UNIONN                         shift and go to state 101
    NOMBRE_T                       shift and go to state 40
    SUBQUERYS                      shift and go to state 41
    MOREE                          shift and go to state 102
    COMPORTAMIENTO                 shift and go to state 103
    QUERY                          shift and go to state 43
    INNERS                         shift and go to state 105
    GROUPS                         shift and go to state 106
    LIMITS                         shift and go to state 107
    ATE_QUE                        shift and go to state 44
    INNERR                         shift and go to state 111
    GROUPP                         shift and go to state 112
    LIMITT                         shift and go to state 113
    EXPRESIONNE                    shift and go to state 46
    TIPOS_INNER                    shift and go to state 114
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 124

    (12) LISTA -> NOMBRE_T PUNTO CAMPOS S .

    FROM            reduce using rule 12 (LISTA -> NOMBRE_T PUNTO CAMPOS S .)
    ID              reduce using rule 12 (LISTA -> NOMBRE_T PUNTO CAMPOS S .)
    ASTERISCO       reduce using rule 12 (LISTA -> NOMBRE_T PUNTO CAMPOS S .)


state 125

    (22) S -> AS ALIAS COMA . LISTA
    (12) LISTA -> . NOMBRE_T PUNTO CAMPOS S
    (13) LISTA -> . NOMBRE_T PUNTO CAMPOS
    (14) LISTA -> . CAMPOS S
    (15) LISTA -> . CAMPOS
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    LISTA                          shift and go to state 176
    NOMBRE_T                       shift and go to state 20
    CAMPOS                         shift and go to state 21

state 126

    (141) DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE . PARDER PUNTOCOMA

    PARDER          shift and go to state 177


state 127

    (142) CUERPO_CREATE_TABLE -> LISTA_DE_COLUMNAS .
    (143) LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS . LISTA2
    (145) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
    (146) LISTA2 -> . NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE
    (18) NOMBRE_T -> . ID

    PARDER          reduce using rule 142 (CUERPO_CREATE_TABLE -> LISTA_DE_COLUMNAS .)
    ID              shift and go to state 130

    LISTA2                         shift and go to state 178
    NOMBRE_T                       shift and go to state 129

state 128

    (144) LISTA_DE_COLUMNAS -> LISTA2 .

    ID              reduce using rule 144 (LISTA_DE_COLUMNAS -> LISTA2 .)
    PARDER          reduce using rule 144 (LISTA_DE_COLUMNAS -> LISTA2 .)


state 129

    (145) LISTA2 -> NOMBRE_T . TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA
    (146) LISTA2 -> NOMBRE_T . TIPO_CAMPO VALIDACIONES_CREATE_TABLE
    (147) TIPO_CAMPO -> . SMALLINT
    (148) TIPO_CAMPO -> . INTEGER
    (149) TIPO_CAMPO -> . BIGINT
    (150) TIPO_CAMPO -> . DECIMAL
    (151) TIPO_CAMPO -> . REAL
    (152) TIPO_CAMPO -> . MONEY
    (153) TIPO_CAMPO -> . DOUBLE PRECISION
    (154) TIPO_CAMPO -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (155) TIPO_CAMPO -> . VARCHAR PARIZQ ENTERO PARDER
    (156) TIPO_CAMPO -> . CHARACTER PARIZQ ENTERO PARDER
    (157) TIPO_CAMPO -> . CHAR PARIZQ ENTERO PARDER
    (158) TIPO_CAMPO -> . TEXT
    (159) TIPO_CAMPO -> . BOOLEAN

    SMALLINT        shift and go to state 180
    INTEGER         shift and go to state 181
    BIGINT          shift and go to state 182
    DECIMAL         shift and go to state 183
    REAL            shift and go to state 184
    MONEY           shift and go to state 185
    DOUBLE          shift and go to state 186
    CHARACTER       shift and go to state 187
    VARCHAR         shift and go to state 188
    CHAR            shift and go to state 189
    TEXT            shift and go to state 190
    BOOLEAN         shift and go to state 191

    TIPO_CAMPO                     shift and go to state 179

state 130

    (18) NOMBRE_T -> ID .

    SMALLINT        reduce using rule 18 (NOMBRE_T -> ID .)
    INTEGER         reduce using rule 18 (NOMBRE_T -> ID .)
    BIGINT          reduce using rule 18 (NOMBRE_T -> ID .)
    DECIMAL         reduce using rule 18 (NOMBRE_T -> ID .)
    REAL            reduce using rule 18 (NOMBRE_T -> ID .)
    MONEY           reduce using rule 18 (NOMBRE_T -> ID .)
    DOUBLE          reduce using rule 18 (NOMBRE_T -> ID .)
    CHARACTER       reduce using rule 18 (NOMBRE_T -> ID .)
    VARCHAR         reduce using rule 18 (NOMBRE_T -> ID .)
    CHAR            reduce using rule 18 (NOMBRE_T -> ID .)
    TEXT            reduce using rule 18 (NOMBRE_T -> ID .)
    BOOLEAN         reduce using rule 18 (NOMBRE_T -> ID .)


state 131

    (117) QUERY -> PARIZQ QUE PARDER .
    (118) QUERY -> PARIZQ QUE PARDER . AS_NO
    (119) AS_NO -> . COMA QUERY
    (120) AS_NO -> . AS NO_N
    (121) AS_NO -> . AS NO_N COMA QUERY

    PARIZQ          reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    EXISTS          reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    ID              reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    ENTERO          reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    DECIMAL         reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    CADENASIMPLE    reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    CADENADOBLE     reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    WHERE           reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    PUNTOCOMA       reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    UNION           reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    INTERSECT       reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    EXCEPT          reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    JOIN            reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    GROUP           reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    LIMIT           reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    OFFSET          reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    INNER           reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    LEFT            reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    RIGHT           reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    FULL            reduce using rule 117 (QUERY -> PARIZQ QUE PARDER .)
    COMA            shift and go to state 193
    AS              shift and go to state 194

    AS_NO                          shift and go to state 192

state 132

    (29) S1 -> COMA TABLA .

    PARIZQ          reduce using rule 29 (S1 -> COMA TABLA .)
    ID              reduce using rule 29 (S1 -> COMA TABLA .)
    EXISTS          reduce using rule 29 (S1 -> COMA TABLA .)
    ENTERO          reduce using rule 29 (S1 -> COMA TABLA .)
    DECIMAL         reduce using rule 29 (S1 -> COMA TABLA .)
    CADENASIMPLE    reduce using rule 29 (S1 -> COMA TABLA .)
    CADENADOBLE     reduce using rule 29 (S1 -> COMA TABLA .)
    WHERE           reduce using rule 29 (S1 -> COMA TABLA .)
    PUNTOCOMA       reduce using rule 29 (S1 -> COMA TABLA .)
    UNION           reduce using rule 29 (S1 -> COMA TABLA .)
    INTERSECT       reduce using rule 29 (S1 -> COMA TABLA .)
    EXCEPT          reduce using rule 29 (S1 -> COMA TABLA .)
    JOIN            reduce using rule 29 (S1 -> COMA TABLA .)
    GROUP           reduce using rule 29 (S1 -> COMA TABLA .)
    LIMIT           reduce using rule 29 (S1 -> COMA TABLA .)
    OFFSET          reduce using rule 29 (S1 -> COMA TABLA .)
    INNER           reduce using rule 29 (S1 -> COMA TABLA .)
    LEFT            reduce using rule 29 (S1 -> COMA TABLA .)
    RIGHT           reduce using rule 29 (S1 -> COMA TABLA .)
    FULL            reduce using rule 29 (S1 -> COMA TABLA .)


state 133

    (30) S1 -> AS ALIAS .

    PARIZQ          reduce using rule 30 (S1 -> AS ALIAS .)
    ID              reduce using rule 30 (S1 -> AS ALIAS .)
    EXISTS          reduce using rule 30 (S1 -> AS ALIAS .)
    ENTERO          reduce using rule 30 (S1 -> AS ALIAS .)
    DECIMAL         reduce using rule 30 (S1 -> AS ALIAS .)
    CADENASIMPLE    reduce using rule 30 (S1 -> AS ALIAS .)
    CADENADOBLE     reduce using rule 30 (S1 -> AS ALIAS .)
    WHERE           reduce using rule 30 (S1 -> AS ALIAS .)
    PUNTOCOMA       reduce using rule 30 (S1 -> AS ALIAS .)
    UNION           reduce using rule 30 (S1 -> AS ALIAS .)
    INTERSECT       reduce using rule 30 (S1 -> AS ALIAS .)
    EXCEPT          reduce using rule 30 (S1 -> AS ALIAS .)
    JOIN            reduce using rule 30 (S1 -> AS ALIAS .)
    GROUP           reduce using rule 30 (S1 -> AS ALIAS .)
    LIMIT           reduce using rule 30 (S1 -> AS ALIAS .)
    OFFSET          reduce using rule 30 (S1 -> AS ALIAS .)
    INNER           reduce using rule 30 (S1 -> AS ALIAS .)
    LEFT            reduce using rule 30 (S1 -> AS ALIAS .)
    RIGHT           reduce using rule 30 (S1 -> AS ALIAS .)
    FULL            reduce using rule 30 (S1 -> AS ALIAS .)


state 134

    (115) QUERY -> ATE_QUE PARIZQ QUE . PARDER
    (116) QUERY -> ATE_QUE PARIZQ QUE . PARDER AS_NO

    PARDER          shift and go to state 195


state 135

    (125) ATE_QUE -> EXPRESIONNE OPERADOR OPCIONALESS2 .

    PARIZQ          reduce using rule 125 (ATE_QUE -> EXPRESIONNE OPERADOR OPCIONALESS2 .)


state 136

    (129) OPCIONALESS2 -> ANY .

    PARIZQ          reduce using rule 129 (OPCIONALESS2 -> ANY .)


state 137

    (130) OPCIONALESS2 -> ALL .

    PARIZQ          reduce using rule 130 (OPCIONALESS2 -> ALL .)


state 138

    (131) OPCIONALESS2 -> SOME .

    PARIZQ          reduce using rule 131 (OPCIONALESS2 -> SOME .)


state 139

    (128) OPCIONALESS -> NOT IN .

    PARIZQ          reduce using rule 128 (OPCIONALESS -> NOT IN .)


state 140

    (47) EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .

    IN              reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    NOT             reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    IGUAL           reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    DIFERENTE       reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MAYOR           reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MENOR           reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MENORIGUAL      reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    MAYORIGUAL      reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    AND             reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    OR              reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    ID              reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    ENTERO          reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    DECIMAL         reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    CADENASIMPLE    reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    CADENADOBLE     reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    PUNTOCOMA       reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    UNION           reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    INTERSECT       reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    EXCEPT          reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    JOIN            reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    WHERE           reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    INNER           reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    LEFT            reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    RIGHT           reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    FULL            reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    GROUP           reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    LIMIT           reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    OFFSET          reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)
    PARDER          reduce using rule 47 (EXPRESIONNE -> NOMBRE_C PUNTO CAMPOSC .)


state 141

    (53) CAMPOSC -> ID .

    IN              reduce using rule 53 (CAMPOSC -> ID .)
    NOT             reduce using rule 53 (CAMPOSC -> ID .)
    IGUAL           reduce using rule 53 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 53 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 53 (CAMPOSC -> ID .)
    MENOR           reduce using rule 53 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 53 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 53 (CAMPOSC -> ID .)
    AND             reduce using rule 53 (CAMPOSC -> ID .)
    OR              reduce using rule 53 (CAMPOSC -> ID .)
    ID              reduce using rule 53 (CAMPOSC -> ID .)
    ENTERO          reduce using rule 53 (CAMPOSC -> ID .)
    DECIMAL         reduce using rule 53 (CAMPOSC -> ID .)
    CADENASIMPLE    reduce using rule 53 (CAMPOSC -> ID .)
    CADENADOBLE     reduce using rule 53 (CAMPOSC -> ID .)
    PUNTOCOMA       reduce using rule 53 (CAMPOSC -> ID .)
    UNION           reduce using rule 53 (CAMPOSC -> ID .)
    INTERSECT       reduce using rule 53 (CAMPOSC -> ID .)
    EXCEPT          reduce using rule 53 (CAMPOSC -> ID .)
    JOIN            reduce using rule 53 (CAMPOSC -> ID .)
    WHERE           reduce using rule 53 (CAMPOSC -> ID .)
    INNER           reduce using rule 53 (CAMPOSC -> ID .)
    LEFT            reduce using rule 53 (CAMPOSC -> ID .)
    RIGHT           reduce using rule 53 (CAMPOSC -> ID .)
    FULL            reduce using rule 53 (CAMPOSC -> ID .)
    GROUP           reduce using rule 53 (CAMPOSC -> ID .)
    LIMIT           reduce using rule 53 (CAMPOSC -> ID .)
    OFFSET          reduce using rule 53 (CAMPOSC -> ID .)
    PARDER          reduce using rule 53 (CAMPOSC -> ID .)


state 142

    (174) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID . OWNER_DATABASE MODE_DATABASE
    (179) OWNER_DATABASE -> . OWNER IGUAL ID
    (180) OWNER_DATABASE -> .

    OWNER           shift and go to state 197
    MODE            reduce using rule 180 (OWNER_DATABASE -> .)
    SELECT          reduce using rule 180 (OWNER_DATABASE -> .)
    CREATE          reduce using rule 180 (OWNER_DATABASE -> .)
    SHOW            reduce using rule 180 (OWNER_DATABASE -> .)
    ALTER           reduce using rule 180 (OWNER_DATABASE -> .)
    DROP            reduce using rule 180 (OWNER_DATABASE -> .)
    $end            reduce using rule 180 (OWNER_DATABASE -> .)

    OWNER_DATABASE                 shift and go to state 196

state 143

    (177) IF_NOT_EXISTIS -> IF NOT . EXISTS

    EXISTS          shift and go to state 198


state 144

    (187) ALTER_DATABASE_OP -> RENAME TO . ID

    ID              shift and go to state 199


state 145

    (188) ALTER_DATABASE_OP -> OWNER TO . ALTER_TABLE_OP_OW
    (189) ALTER_TABLE_OP_OW -> . ID
    (190) ALTER_TABLE_OP_OW -> . CURRENT_USER
    (191) ALTER_TABLE_OP_OW -> . SESSION_USER

    ID              shift and go to state 201
    CURRENT_USER    shift and go to state 202
    SESSION_USER    shift and go to state 203

    ALTER_TABLE_OP_OW              shift and go to state 200

state 146

    (6) DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .
    (133) UNIONS -> UNIONS . UNIONN
    (135) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (136) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (137) UNIONN -> . PUNTOCOMA
    (138) COMPORTAMIENTO -> . UNION
    (139) COMPORTAMIENTO -> . INTERSECT
    (140) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    CREATE          reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    SHOW            reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    ALTER           reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DROP            reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    $end            reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PARDER          reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PUNTOCOMA       shift and go to state 104
    UNION           shift and go to state 108
    INTERSECT       shift and go to state 109
    EXCEPT          shift and go to state 110

  ! PUNTOCOMA       [ reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! UNION           [ reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! INTERSECT       [ reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! EXCEPT          [ reduce using rule 6 (DQL_COMANDOS -> SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]

    UNIONN                         shift and go to state 147
    COMPORTAMIENTO                 shift and go to state 103

state 147

    (133) UNIONS -> UNIONS UNIONN .

    PUNTOCOMA       reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    UNION           reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    INTERSECT       reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    EXCEPT          reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    SELECT          reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    CREATE          reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    SHOW            reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    ALTER           reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    DROP            reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    $end            reduce using rule 133 (UNIONS -> UNIONS UNIONN .)
    PARDER          reduce using rule 133 (UNIONS -> UNIONS UNIONN .)


state 148

    (31) CUERPO -> WHERE CONDICIONES .
    (70) INNERR -> WHERE CONDICIONES .
    (38) CONDICIONES -> CONDICIONES . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 31 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for UNION resolved using rule 31 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for INTERSECT resolved using rule 31 (CUERPO -> WHERE CONDICIONES .)
  ! reduce/reduce conflict for EXCEPT resolved using rule 31 (CUERPO -> WHERE CONDICIONES .)
    PUNTOCOMA       reduce using rule 31 (CUERPO -> WHERE CONDICIONES .)
    UNION           reduce using rule 31 (CUERPO -> WHERE CONDICIONES .)
    INTERSECT       reduce using rule 31 (CUERPO -> WHERE CONDICIONES .)
    EXCEPT          reduce using rule 31 (CUERPO -> WHERE CONDICIONES .)
    JOIN            reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    WHERE           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    INNER           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    LEFT            reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    RIGHT           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    FULL            reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    GROUP           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    LIMIT           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    OFFSET          reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

  ! PUNTOCOMA       [ reduce using rule 70 (INNERR -> WHERE CONDICIONES .) ]
  ! UNION           [ reduce using rule 70 (INNERR -> WHERE CONDICIONES .) ]
  ! INTERSECT       [ reduce using rule 70 (INNERR -> WHERE CONDICIONES .) ]
  ! EXCEPT          [ reduce using rule 70 (INNERR -> WHERE CONDICIONES .) ]

    CONDICION                      shift and go to state 204
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 149

    (39) CONDICIONES -> CONDICION .

    NOT             reduce using rule 39 (CONDICIONES -> CONDICION .)
    ID              reduce using rule 39 (CONDICIONES -> CONDICION .)
    ENTERO          reduce using rule 39 (CONDICIONES -> CONDICION .)
    DECIMAL         reduce using rule 39 (CONDICIONES -> CONDICION .)
    CADENASIMPLE    reduce using rule 39 (CONDICIONES -> CONDICION .)
    CADENADOBLE     reduce using rule 39 (CONDICIONES -> CONDICION .)
    PUNTOCOMA       reduce using rule 39 (CONDICIONES -> CONDICION .)
    UNION           reduce using rule 39 (CONDICIONES -> CONDICION .)
    INTERSECT       reduce using rule 39 (CONDICIONES -> CONDICION .)
    EXCEPT          reduce using rule 39 (CONDICIONES -> CONDICION .)
    JOIN            reduce using rule 39 (CONDICIONES -> CONDICION .)
    WHERE           reduce using rule 39 (CONDICIONES -> CONDICION .)
    INNER           reduce using rule 39 (CONDICIONES -> CONDICION .)
    LEFT            reduce using rule 39 (CONDICIONES -> CONDICION .)
    RIGHT           reduce using rule 39 (CONDICIONES -> CONDICION .)
    FULL            reduce using rule 39 (CONDICIONES -> CONDICION .)
    GROUP           reduce using rule 39 (CONDICIONES -> CONDICION .)
    LIMIT           reduce using rule 39 (CONDICIONES -> CONDICION .)
    OFFSET          reduce using rule 39 (CONDICIONES -> CONDICION .)


state 150

    (40) CONDICION -> CONDICION_REL . SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> CONDICION_REL . SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> CONDICION_REL .
    (49) SIMBOLO_LOGICO -> . AND
    (50) SIMBOLO_LOGICO -> . OR

    NOT             reduce using rule 42 (CONDICION -> CONDICION_REL .)
    ID              reduce using rule 42 (CONDICION -> CONDICION_REL .)
    ENTERO          reduce using rule 42 (CONDICION -> CONDICION_REL .)
    DECIMAL         reduce using rule 42 (CONDICION -> CONDICION_REL .)
    CADENASIMPLE    reduce using rule 42 (CONDICION -> CONDICION_REL .)
    CADENADOBLE     reduce using rule 42 (CONDICION -> CONDICION_REL .)
    PUNTOCOMA       reduce using rule 42 (CONDICION -> CONDICION_REL .)
    UNION           reduce using rule 42 (CONDICION -> CONDICION_REL .)
    INTERSECT       reduce using rule 42 (CONDICION -> CONDICION_REL .)
    EXCEPT          reduce using rule 42 (CONDICION -> CONDICION_REL .)
    JOIN            reduce using rule 42 (CONDICION -> CONDICION_REL .)
    WHERE           reduce using rule 42 (CONDICION -> CONDICION_REL .)
    INNER           reduce using rule 42 (CONDICION -> CONDICION_REL .)
    LEFT            reduce using rule 42 (CONDICION -> CONDICION_REL .)
    RIGHT           reduce using rule 42 (CONDICION -> CONDICION_REL .)
    FULL            reduce using rule 42 (CONDICION -> CONDICION_REL .)
    GROUP           reduce using rule 42 (CONDICION -> CONDICION_REL .)
    LIMIT           reduce using rule 42 (CONDICION -> CONDICION_REL .)
    OFFSET          reduce using rule 42 (CONDICION -> CONDICION_REL .)
    AND             shift and go to state 206
    OR              shift and go to state 207

    SIMBOLO_LOGICO                 shift and go to state 205

state 151

    (43) CONDICION_REL -> EXPRESIONNE . OPERADOR EXPRESIONNE
    (45) CONDICION_REL -> EXPRESIONNE .
    (58) OPERADOR -> . IGUAL
    (59) OPERADOR -> . DIFERENTE
    (60) OPERADOR -> . MAYOR
    (61) OPERADOR -> . MENOR
    (62) OPERADOR -> . MENORIGUAL
    (63) OPERADOR -> . MAYORIGUAL

    AND             reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    OR              reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    NOT             reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    ID              reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    ENTERO          reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    DECIMAL         reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    CADENADOBLE     reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    PUNTOCOMA       reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    UNION           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    INTERSECT       reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    EXCEPT          reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    JOIN            reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    WHERE           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    INNER           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    LEFT            reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    RIGHT           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    FULL            reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    GROUP           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    LIMIT           reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    OFFSET          reduce using rule 45 (CONDICION_REL -> EXPRESIONNE .)
    IGUAL           shift and go to state 82
    DIFERENTE       shift and go to state 83
    MAYOR           shift and go to state 84
    MENOR           shift and go to state 85
    MENORIGUAL      shift and go to state 86
    MAYORIGUAL      shift and go to state 87

    OPERADOR                       shift and go to state 208

state 152

    (44) CONDICION_REL -> SIMBOLO_NEG . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    EXPRESIONNE                    shift and go to state 209
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 153

    (51) SIMBOLO_NEG -> NOT .

    ID              reduce using rule 51 (SIMBOLO_NEG -> NOT .)
    ENTERO          reduce using rule 51 (SIMBOLO_NEG -> NOT .)
    DECIMAL         reduce using rule 51 (SIMBOLO_NEG -> NOT .)
    CADENASIMPLE    reduce using rule 51 (SIMBOLO_NEG -> NOT .)
    CADENADOBLE     reduce using rule 51 (SIMBOLO_NEG -> NOT .)


state 154

    (52) NOMBRE_C -> ID .
    (53) CAMPOSC -> ID .

    PUNTO           reduce using rule 52 (NOMBRE_C -> ID .)
    IGUAL           reduce using rule 53 (CAMPOSC -> ID .)
    DIFERENTE       reduce using rule 53 (CAMPOSC -> ID .)
    MAYOR           reduce using rule 53 (CAMPOSC -> ID .)
    MENOR           reduce using rule 53 (CAMPOSC -> ID .)
    MENORIGUAL      reduce using rule 53 (CAMPOSC -> ID .)
    MAYORIGUAL      reduce using rule 53 (CAMPOSC -> ID .)
    AND             reduce using rule 53 (CAMPOSC -> ID .)
    OR              reduce using rule 53 (CAMPOSC -> ID .)
    NOT             reduce using rule 53 (CAMPOSC -> ID .)
    ID              reduce using rule 53 (CAMPOSC -> ID .)
    ENTERO          reduce using rule 53 (CAMPOSC -> ID .)
    DECIMAL         reduce using rule 53 (CAMPOSC -> ID .)
    CADENASIMPLE    reduce using rule 53 (CAMPOSC -> ID .)
    CADENADOBLE     reduce using rule 53 (CAMPOSC -> ID .)
    PUNTOCOMA       reduce using rule 53 (CAMPOSC -> ID .)
    UNION           reduce using rule 53 (CAMPOSC -> ID .)
    INTERSECT       reduce using rule 53 (CAMPOSC -> ID .)
    EXCEPT          reduce using rule 53 (CAMPOSC -> ID .)
    JOIN            reduce using rule 53 (CAMPOSC -> ID .)
    WHERE           reduce using rule 53 (CAMPOSC -> ID .)
    INNER           reduce using rule 53 (CAMPOSC -> ID .)
    LEFT            reduce using rule 53 (CAMPOSC -> ID .)
    RIGHT           reduce using rule 53 (CAMPOSC -> ID .)
    FULL            reduce using rule 53 (CAMPOSC -> ID .)
    GROUP           reduce using rule 53 (CAMPOSC -> ID .)
    LIMIT           reduce using rule 53 (CAMPOSC -> ID .)
    OFFSET          reduce using rule 53 (CAMPOSC -> ID .)
    PARDER          reduce using rule 53 (CAMPOSC -> ID .)


state 155

    (33) MORES -> MORES MOREE .

    JOIN            reduce using rule 33 (MORES -> MORES MOREE .)
    WHERE           reduce using rule 33 (MORES -> MORES MOREE .)
    GROUP           reduce using rule 33 (MORES -> MORES MOREE .)
    LIMIT           reduce using rule 33 (MORES -> MORES MOREE .)
    OFFSET          reduce using rule 33 (MORES -> MORES MOREE .)
    INNER           reduce using rule 33 (MORES -> MORES MOREE .)
    LEFT            reduce using rule 33 (MORES -> MORES MOREE .)
    RIGHT           reduce using rule 33 (MORES -> MORES MOREE .)
    FULL            reduce using rule 33 (MORES -> MORES MOREE .)
    PUNTOCOMA       reduce using rule 33 (MORES -> MORES MOREE .)
    UNION           reduce using rule 33 (MORES -> MORES MOREE .)
    INTERSECT       reduce using rule 33 (MORES -> MORES MOREE .)
    EXCEPT          reduce using rule 33 (MORES -> MORES MOREE .)


state 156

    (70) INNERR -> WHERE . CONDICIONES
    (38) CONDICIONES -> . CONDICIONES CONDICION
    (39) CONDICIONES -> . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICIONES                    shift and go to state 210
    CONDICION                      shift and go to state 149
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 157

    (135) UNIONN -> COMPORTAMIENTO ALL . DQL_COMANDOS
    (6) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (7) DQL_COMANDOS -> . SELECT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (8) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS
    (9) DQL_COMANDOS -> . SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS
    (141) DQL_COMANDOS -> . CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA

    SELECT          shift and go to state 6
    CREATE          shift and go to state 71

    DQL_COMANDOS                   shift and go to state 211

state 158

    (136) UNIONN -> COMPORTAMIENTO DQL_COMANDOS .

    PUNTOCOMA       reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    UNION           reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    INTERSECT       reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    EXCEPT          reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    SELECT          reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    CREATE          reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    SHOW            reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    ALTER           reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    DROP            reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    $end            reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)
    PARDER          reduce using rule 136 (UNIONN -> COMPORTAMIENTO DQL_COMANDOS .)


state 159

    (64) INNERS -> INNERS INNERR .

    JOIN            reduce using rule 64 (INNERS -> INNERS INNERR .)
    WHERE           reduce using rule 64 (INNERS -> INNERS INNERR .)
    INNER           reduce using rule 64 (INNERS -> INNERS INNERR .)
    LEFT            reduce using rule 64 (INNERS -> INNERS INNERR .)
    RIGHT           reduce using rule 64 (INNERS -> INNERS INNERR .)
    FULL            reduce using rule 64 (INNERS -> INNERS INNERR .)
    GROUP           reduce using rule 64 (INNERS -> INNERS INNERR .)
    LIMIT           reduce using rule 64 (INNERS -> INNERS INNERR .)
    OFFSET          reduce using rule 64 (INNERS -> INNERS INNERR .)
    PUNTOCOMA       reduce using rule 64 (INNERS -> INNERS INNERR .)
    UNION           reduce using rule 64 (INNERS -> INNERS INNERR .)
    INTERSECT       reduce using rule 64 (INNERS -> INNERS INNERR .)
    EXCEPT          reduce using rule 64 (INNERS -> INNERS INNERR .)


state 160

    (83) GROUPS -> GROUPS GROUPP .

    GROUP           reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    JOIN            reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    WHERE           reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    LIMIT           reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    OFFSET          reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    INNER           reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    LEFT            reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    RIGHT           reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    FULL            reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    PUNTOCOMA       reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    UNION           reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    INTERSECT       reduce using rule 83 (GROUPS -> GROUPS GROUPP .)
    EXCEPT          reduce using rule 83 (GROUPS -> GROUPS GROUPP .)


state 161

    (107) LIMITS -> LIMITS LIMITT .

    LIMIT           reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    OFFSET          reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    JOIN            reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    WHERE           reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    GROUP           reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    INNER           reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    LEFT            reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    RIGHT           reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    FULL            reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    PUNTOCOMA       reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    UNION           reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    INTERSECT       reduce using rule 107 (LIMITS -> LIMITS LIMITT .)
    EXCEPT          reduce using rule 107 (LIMITS -> LIMITS LIMITT .)


state 162

    (66) INNERR -> TIPOS_INNER JOIN . TABLA_REF ON CONDICIONES
    (68) INNERR -> TIPOS_INNER JOIN . TABLA_REF USING PARIZQ SUB_COLUMN PARDER
    (81) TABLA_REF -> . ID
    (82) TABLA_REF -> . ID AS ID

    ID              shift and go to state 164

    TABLA_REF                      shift and go to state 212

state 163

    (67) INNERR -> JOIN TABLA_REF . ON CONDICIONES
    (69) INNERR -> JOIN TABLA_REF . USING PARIZQ SUB_COLUMN PARDER

    ON              shift and go to state 213
    USING           shift and go to state 214


state 164

    (81) TABLA_REF -> ID .
    (82) TABLA_REF -> ID . AS ID

    ON              reduce using rule 81 (TABLA_REF -> ID .)
    USING           reduce using rule 81 (TABLA_REF -> ID .)
    AS              shift and go to state 215


state 165

    (85) GROUPP -> GROUP BY . EXPRE_LIST MORE_ORDER
    (86) GROUPP -> GROUP BY . EXPRE_LIST
    (87) EXPRE_LIST -> . EXPRE_LIST EXPRES
    (88) EXPRE_LIST -> . EXPRES
    (89) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (90) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (91) EXPRES -> . CAMPOS S2
    (92) EXPRES -> . CAMPOS
    (93) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (94) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (95) EXPRES -> . CAMPOS S2 STATE
    (96) EXPRES -> . CAMPOS STATE
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    EXPRE_LIST                     shift and go to state 216
    EXPRES                         shift and go to state 217
    NOMBRE_T                       shift and go to state 218
    CAMPOS                         shift and go to state 219

state 166

    (109) LIMITT -> LIMIT EXPRE_NUM .

    LIMIT           reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    OFFSET          reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    JOIN            reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    WHERE           reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    GROUP           reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    INNER           reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    LEFT            reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    RIGHT           reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    FULL            reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    PUNTOCOMA       reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    UNION           reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    INTERSECT       reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)
    EXCEPT          reduce using rule 109 (LIMITT -> LIMIT EXPRE_NUM .)


state 167

    (111) EXPRE_NUM -> ENTERO .

    LIMIT           reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    OFFSET          reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    JOIN            reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    WHERE           reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    GROUP           reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    INNER           reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    LEFT            reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    RIGHT           reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    FULL            reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    PUNTOCOMA       reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    UNION           reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    INTERSECT       reduce using rule 111 (EXPRE_NUM -> ENTERO .)
    EXCEPT          reduce using rule 111 (EXPRE_NUM -> ENTERO .)


state 168

    (112) EXPRE_NUM -> ALL .

    LIMIT           reduce using rule 112 (EXPRE_NUM -> ALL .)
    OFFSET          reduce using rule 112 (EXPRE_NUM -> ALL .)
    JOIN            reduce using rule 112 (EXPRE_NUM -> ALL .)
    WHERE           reduce using rule 112 (EXPRE_NUM -> ALL .)
    GROUP           reduce using rule 112 (EXPRE_NUM -> ALL .)
    INNER           reduce using rule 112 (EXPRE_NUM -> ALL .)
    LEFT            reduce using rule 112 (EXPRE_NUM -> ALL .)
    RIGHT           reduce using rule 112 (EXPRE_NUM -> ALL .)
    FULL            reduce using rule 112 (EXPRE_NUM -> ALL .)
    PUNTOCOMA       reduce using rule 112 (EXPRE_NUM -> ALL .)
    UNION           reduce using rule 112 (EXPRE_NUM -> ALL .)
    INTERSECT       reduce using rule 112 (EXPRE_NUM -> ALL .)
    EXCEPT          reduce using rule 112 (EXPRE_NUM -> ALL .)


state 169

    (110) LIMITT -> OFFSET EXPRE_NUM .

    LIMIT           reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    OFFSET          reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    JOIN            reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    WHERE           reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    GROUP           reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    INNER           reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    LEFT            reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    RIGHT           reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    FULL            reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    PUNTOCOMA       reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    UNION           reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    INTERSECT       reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)
    EXCEPT          reduce using rule 110 (LIMITT -> OFFSET EXPRE_NUM .)


state 170

    (73) TIPOS_INNER -> INNER OUTER .

    JOIN            reduce using rule 73 (TIPOS_INNER -> INNER OUTER .)


state 171

    (75) TIPOS_INNER -> LEFT OUTER .

    JOIN            reduce using rule 75 (TIPOS_INNER -> LEFT OUTER .)


state 172

    (77) TIPOS_INNER -> RIGHT OUTER .

    JOIN            reduce using rule 77 (TIPOS_INNER -> RIGHT OUTER .)


state 173

    (79) TIPOS_INNER -> FULL OUTER .

    JOIN            reduce using rule 79 (TIPOS_INNER -> FULL OUTER .)


state 174

    (8) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO . UNIONS
    (133) UNIONS -> . UNIONS UNIONN
    (134) UNIONS -> . UNIONN
    (135) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (136) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (137) UNIONN -> . PUNTOCOMA
    (138) COMPORTAMIENTO -> . UNION
    (139) COMPORTAMIENTO -> . INTERSECT
    (140) COMPORTAMIENTO -> . EXCEPT

    PUNTOCOMA       shift and go to state 104
    UNION           shift and go to state 108
    INTERSECT       shift and go to state 109
    EXCEPT          shift and go to state 110

    UNIONS                         shift and go to state 220
    UNIONN                         shift and go to state 101
    COMPORTAMIENTO                 shift and go to state 103

state 175

    (9) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .
    (133) UNIONS -> UNIONS . UNIONN
    (135) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (136) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (137) UNIONN -> . PUNTOCOMA
    (138) COMPORTAMIENTO -> . UNION
    (139) COMPORTAMIENTO -> . INTERSECT
    (140) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    CREATE          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    SHOW            reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    ALTER           reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    DROP            reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    $end            reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PARDER          reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .)
    PUNTOCOMA       shift and go to state 104
    UNION           shift and go to state 108
    INTERSECT       shift and go to state 109
    EXCEPT          shift and go to state 110

  ! PUNTOCOMA       [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! UNION           [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! INTERSECT       [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]
  ! EXCEPT          [ reduce using rule 9 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS UNIONS .) ]

    UNIONN                         shift and go to state 147
    COMPORTAMIENTO                 shift and go to state 103

state 176

    (22) S -> AS ALIAS COMA LISTA .

    FROM            reduce using rule 22 (S -> AS ALIAS COMA LISTA .)
    ID              reduce using rule 22 (S -> AS ALIAS COMA LISTA .)
    ASTERISCO       reduce using rule 22 (S -> AS ALIAS COMA LISTA .)


state 177

    (141) DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 221


state 178

    (143) LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .

    ID              reduce using rule 143 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)
    PARDER          reduce using rule 143 (LISTA_DE_COLUMNAS -> LISTA_DE_COLUMNAS LISTA2 .)


state 179

    (145) LISTA2 -> NOMBRE_T TIPO_CAMPO . VALIDACIONES_CREATE_TABLE COMA
    (146) LISTA2 -> NOMBRE_T TIPO_CAMPO . VALIDACIONES_CREATE_TABLE
    (160) VALIDACIONES_CREATE_TABLE -> . LISTA3
    (161) LISTA3 -> . VALIDACION_CAMPO_CREATE
    (162) LISTA3 -> . VALIDACION_CAMPO_CREATE_VACIO
    (163) VALIDACION_CAMPO_CREATE -> . NOT NULL
    (164) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENASIMPLE
    (165) VALIDACION_CAMPO_CREATE -> . DEFAULT CADENADOBLE
    (166) VALIDACION_CAMPO_CREATE -> . DEFAULT DECIMAL
    (167) VALIDACION_CAMPO_CREATE -> . DEFAULT ENTERO
    (169) VALIDACION_CAMPO_CREATE -> . NULL
    (168) VALIDACION_CAMPO_CREATE_VACIO -> .

    NOT             shift and go to state 226
    DEFAULT         shift and go to state 228
    NULL            shift and go to state 227
    COMA            reduce using rule 168 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    ID              reduce using rule 168 (VALIDACION_CAMPO_CREATE_VACIO -> .)
    PARDER          reduce using rule 168 (VALIDACION_CAMPO_CREATE_VACIO -> .)

    VALIDACIONES_CREATE_TABLE      shift and go to state 222
    LISTA3                         shift and go to state 223
    VALIDACION_CAMPO_CREATE        shift and go to state 224
    VALIDACION_CAMPO_CREATE_VACIO  shift and go to state 225

state 180

    (147) TIPO_CAMPO -> SMALLINT .

    NOT             reduce using rule 147 (TIPO_CAMPO -> SMALLINT .)
    DEFAULT         reduce using rule 147 (TIPO_CAMPO -> SMALLINT .)
    NULL            reduce using rule 147 (TIPO_CAMPO -> SMALLINT .)
    COMA            reduce using rule 147 (TIPO_CAMPO -> SMALLINT .)
    ID              reduce using rule 147 (TIPO_CAMPO -> SMALLINT .)
    PARDER          reduce using rule 147 (TIPO_CAMPO -> SMALLINT .)


state 181

    (148) TIPO_CAMPO -> INTEGER .

    NOT             reduce using rule 148 (TIPO_CAMPO -> INTEGER .)
    DEFAULT         reduce using rule 148 (TIPO_CAMPO -> INTEGER .)
    NULL            reduce using rule 148 (TIPO_CAMPO -> INTEGER .)
    COMA            reduce using rule 148 (TIPO_CAMPO -> INTEGER .)
    ID              reduce using rule 148 (TIPO_CAMPO -> INTEGER .)
    PARDER          reduce using rule 148 (TIPO_CAMPO -> INTEGER .)


state 182

    (149) TIPO_CAMPO -> BIGINT .

    NOT             reduce using rule 149 (TIPO_CAMPO -> BIGINT .)
    DEFAULT         reduce using rule 149 (TIPO_CAMPO -> BIGINT .)
    NULL            reduce using rule 149 (TIPO_CAMPO -> BIGINT .)
    COMA            reduce using rule 149 (TIPO_CAMPO -> BIGINT .)
    ID              reduce using rule 149 (TIPO_CAMPO -> BIGINT .)
    PARDER          reduce using rule 149 (TIPO_CAMPO -> BIGINT .)


state 183

    (150) TIPO_CAMPO -> DECIMAL .

    NOT             reduce using rule 150 (TIPO_CAMPO -> DECIMAL .)
    DEFAULT         reduce using rule 150 (TIPO_CAMPO -> DECIMAL .)
    NULL            reduce using rule 150 (TIPO_CAMPO -> DECIMAL .)
    COMA            reduce using rule 150 (TIPO_CAMPO -> DECIMAL .)
    ID              reduce using rule 150 (TIPO_CAMPO -> DECIMAL .)
    PARDER          reduce using rule 150 (TIPO_CAMPO -> DECIMAL .)


state 184

    (151) TIPO_CAMPO -> REAL .

    NOT             reduce using rule 151 (TIPO_CAMPO -> REAL .)
    DEFAULT         reduce using rule 151 (TIPO_CAMPO -> REAL .)
    NULL            reduce using rule 151 (TIPO_CAMPO -> REAL .)
    COMA            reduce using rule 151 (TIPO_CAMPO -> REAL .)
    ID              reduce using rule 151 (TIPO_CAMPO -> REAL .)
    PARDER          reduce using rule 151 (TIPO_CAMPO -> REAL .)


state 185

    (152) TIPO_CAMPO -> MONEY .

    NOT             reduce using rule 152 (TIPO_CAMPO -> MONEY .)
    DEFAULT         reduce using rule 152 (TIPO_CAMPO -> MONEY .)
    NULL            reduce using rule 152 (TIPO_CAMPO -> MONEY .)
    COMA            reduce using rule 152 (TIPO_CAMPO -> MONEY .)
    ID              reduce using rule 152 (TIPO_CAMPO -> MONEY .)
    PARDER          reduce using rule 152 (TIPO_CAMPO -> MONEY .)


state 186

    (153) TIPO_CAMPO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 229


state 187

    (154) TIPO_CAMPO -> CHARACTER . VARYING PARIZQ ENTERO PARDER
    (156) TIPO_CAMPO -> CHARACTER . PARIZQ ENTERO PARDER

    VARYING         shift and go to state 230
    PARIZQ          shift and go to state 231


state 188

    (155) TIPO_CAMPO -> VARCHAR . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 232


state 189

    (157) TIPO_CAMPO -> CHAR . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 233


state 190

    (158) TIPO_CAMPO -> TEXT .

    NOT             reduce using rule 158 (TIPO_CAMPO -> TEXT .)
    DEFAULT         reduce using rule 158 (TIPO_CAMPO -> TEXT .)
    NULL            reduce using rule 158 (TIPO_CAMPO -> TEXT .)
    COMA            reduce using rule 158 (TIPO_CAMPO -> TEXT .)
    ID              reduce using rule 158 (TIPO_CAMPO -> TEXT .)
    PARDER          reduce using rule 158 (TIPO_CAMPO -> TEXT .)


state 191

    (159) TIPO_CAMPO -> BOOLEAN .

    NOT             reduce using rule 159 (TIPO_CAMPO -> BOOLEAN .)
    DEFAULT         reduce using rule 159 (TIPO_CAMPO -> BOOLEAN .)
    NULL            reduce using rule 159 (TIPO_CAMPO -> BOOLEAN .)
    COMA            reduce using rule 159 (TIPO_CAMPO -> BOOLEAN .)
    ID              reduce using rule 159 (TIPO_CAMPO -> BOOLEAN .)
    PARDER          reduce using rule 159 (TIPO_CAMPO -> BOOLEAN .)


state 192

    (118) QUERY -> PARIZQ QUE PARDER AS_NO .

    PARIZQ          reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    EXISTS          reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    ID              reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    ENTERO          reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    DECIMAL         reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    CADENASIMPLE    reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    CADENADOBLE     reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    WHERE           reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    PUNTOCOMA       reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    UNION           reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    INTERSECT       reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    EXCEPT          reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    JOIN            reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    GROUP           reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    LIMIT           reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    OFFSET          reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    INNER           reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    LEFT            reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    RIGHT           reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)
    FULL            reduce using rule 118 (QUERY -> PARIZQ QUE PARDER AS_NO .)


state 193

    (119) AS_NO -> COMA . QUERY
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    PARIZQ          shift and go to state 38
    EXISTS          shift and go to state 45
    ID              shift and go to state 76
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    QUERY                          shift and go to state 234
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 46
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 194

    (120) AS_NO -> AS . NO_N
    (121) AS_NO -> AS . NO_N COMA QUERY
    (122) NO_N -> . ID

    ID              shift and go to state 236

    NO_N                           shift and go to state 235

state 195

    (115) QUERY -> ATE_QUE PARIZQ QUE PARDER .
    (116) QUERY -> ATE_QUE PARIZQ QUE PARDER . AS_NO
    (119) AS_NO -> . COMA QUERY
    (120) AS_NO -> . AS NO_N
    (121) AS_NO -> . AS NO_N COMA QUERY

    PARIZQ          reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    EXISTS          reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    ID              reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    ENTERO          reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    DECIMAL         reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    CADENASIMPLE    reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    CADENADOBLE     reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    WHERE           reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    PUNTOCOMA       reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    UNION           reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    INTERSECT       reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    EXCEPT          reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    JOIN            reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    GROUP           reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    LIMIT           reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    OFFSET          reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    INNER           reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    LEFT            reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    RIGHT           reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    FULL            reduce using rule 115 (QUERY -> ATE_QUE PARIZQ QUE PARDER .)
    COMA            shift and go to state 193
    AS              shift and go to state 194

    AS_NO                          shift and go to state 237

state 196

    (174) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE . MODE_DATABASE
    (181) MODE_DATABASE -> . MODE IGUAL ENTERO
    (182) MODE_DATABASE -> .

    MODE            shift and go to state 239
    SELECT          reduce using rule 182 (MODE_DATABASE -> .)
    CREATE          reduce using rule 182 (MODE_DATABASE -> .)
    SHOW            reduce using rule 182 (MODE_DATABASE -> .)
    ALTER           reduce using rule 182 (MODE_DATABASE -> .)
    DROP            reduce using rule 182 (MODE_DATABASE -> .)
    $end            reduce using rule 182 (MODE_DATABASE -> .)

    MODE_DATABASE                  shift and go to state 238

state 197

    (179) OWNER_DATABASE -> OWNER . IGUAL ID

    IGUAL           shift and go to state 240


state 198

    (177) IF_NOT_EXISTIS -> IF NOT EXISTS .

    ID              reduce using rule 177 (IF_NOT_EXISTIS -> IF NOT EXISTS .)


state 199

    (187) ALTER_DATABASE_OP -> RENAME TO ID .

    SELECT          reduce using rule 187 (ALTER_DATABASE_OP -> RENAME TO ID .)
    CREATE          reduce using rule 187 (ALTER_DATABASE_OP -> RENAME TO ID .)
    SHOW            reduce using rule 187 (ALTER_DATABASE_OP -> RENAME TO ID .)
    ALTER           reduce using rule 187 (ALTER_DATABASE_OP -> RENAME TO ID .)
    DROP            reduce using rule 187 (ALTER_DATABASE_OP -> RENAME TO ID .)
    $end            reduce using rule 187 (ALTER_DATABASE_OP -> RENAME TO ID .)


state 200

    (188) ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .

    SELECT          reduce using rule 188 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    CREATE          reduce using rule 188 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    SHOW            reduce using rule 188 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    ALTER           reduce using rule 188 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    DROP            reduce using rule 188 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)
    $end            reduce using rule 188 (ALTER_DATABASE_OP -> OWNER TO ALTER_TABLE_OP_OW .)


state 201

    (189) ALTER_TABLE_OP_OW -> ID .

    SELECT          reduce using rule 189 (ALTER_TABLE_OP_OW -> ID .)
    CREATE          reduce using rule 189 (ALTER_TABLE_OP_OW -> ID .)
    SHOW            reduce using rule 189 (ALTER_TABLE_OP_OW -> ID .)
    ALTER           reduce using rule 189 (ALTER_TABLE_OP_OW -> ID .)
    DROP            reduce using rule 189 (ALTER_TABLE_OP_OW -> ID .)
    $end            reduce using rule 189 (ALTER_TABLE_OP_OW -> ID .)


state 202

    (190) ALTER_TABLE_OP_OW -> CURRENT_USER .

    SELECT          reduce using rule 190 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    CREATE          reduce using rule 190 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    SHOW            reduce using rule 190 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    ALTER           reduce using rule 190 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    DROP            reduce using rule 190 (ALTER_TABLE_OP_OW -> CURRENT_USER .)
    $end            reduce using rule 190 (ALTER_TABLE_OP_OW -> CURRENT_USER .)


state 203

    (191) ALTER_TABLE_OP_OW -> SESSION_USER .

    SELECT          reduce using rule 191 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    CREATE          reduce using rule 191 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    SHOW            reduce using rule 191 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    ALTER           reduce using rule 191 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    DROP            reduce using rule 191 (ALTER_TABLE_OP_OW -> SESSION_USER .)
    $end            reduce using rule 191 (ALTER_TABLE_OP_OW -> SESSION_USER .)


state 204

    (38) CONDICIONES -> CONDICIONES CONDICION .

    NOT             reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    ID              reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    ENTERO          reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    DECIMAL         reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    CADENASIMPLE    reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    CADENADOBLE     reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    PUNTOCOMA       reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    UNION           reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    INTERSECT       reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    EXCEPT          reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    JOIN            reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    WHERE           reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    INNER           reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    LEFT            reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    RIGHT           reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    FULL            reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    GROUP           reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    LIMIT           reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)
    OFFSET          reduce using rule 38 (CONDICIONES -> CONDICIONES CONDICION .)


state 205

    (40) CONDICION -> CONDICION_REL SIMBOLO_LOGICO . CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> CONDICION_REL SIMBOLO_LOGICO . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICION_REL                  shift and go to state 241
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 206

    (49) SIMBOLO_LOGICO -> AND .

    NOT             reduce using rule 49 (SIMBOLO_LOGICO -> AND .)
    ID              reduce using rule 49 (SIMBOLO_LOGICO -> AND .)
    ENTERO          reduce using rule 49 (SIMBOLO_LOGICO -> AND .)
    DECIMAL         reduce using rule 49 (SIMBOLO_LOGICO -> AND .)
    CADENASIMPLE    reduce using rule 49 (SIMBOLO_LOGICO -> AND .)
    CADENADOBLE     reduce using rule 49 (SIMBOLO_LOGICO -> AND .)


state 207

    (50) SIMBOLO_LOGICO -> OR .

    NOT             reduce using rule 50 (SIMBOLO_LOGICO -> OR .)
    ID              reduce using rule 50 (SIMBOLO_LOGICO -> OR .)
    ENTERO          reduce using rule 50 (SIMBOLO_LOGICO -> OR .)
    DECIMAL         reduce using rule 50 (SIMBOLO_LOGICO -> OR .)
    CADENASIMPLE    reduce using rule 50 (SIMBOLO_LOGICO -> OR .)
    CADENADOBLE     reduce using rule 50 (SIMBOLO_LOGICO -> OR .)


state 208

    (43) CONDICION_REL -> EXPRESIONNE OPERADOR . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    EXPRESIONNE                    shift and go to state 242
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 209

    (44) CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .

    AND             reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    OR              reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    NOT             reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    ID              reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    ENTERO          reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    DECIMAL         reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    CADENADOBLE     reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    PUNTOCOMA       reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    UNION           reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    INTERSECT       reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    EXCEPT          reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    JOIN            reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    WHERE           reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    INNER           reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    LEFT            reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    RIGHT           reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    FULL            reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    GROUP           reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    LIMIT           reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)
    OFFSET          reduce using rule 44 (CONDICION_REL -> SIMBOLO_NEG EXPRESIONNE .)


state 210

    (70) INNERR -> WHERE CONDICIONES .
    (38) CONDICIONES -> CONDICIONES . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    JOIN            reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    WHERE           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    INNER           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    LEFT            reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    RIGHT           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    FULL            reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    GROUP           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    LIMIT           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    OFFSET          reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    PUNTOCOMA       reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    UNION           reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    INTERSECT       reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    EXCEPT          reduce using rule 70 (INNERR -> WHERE CONDICIONES .)
    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICION                      shift and go to state 204
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 211

    (135) UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .

    PUNTOCOMA       reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    UNION           reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    INTERSECT       reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    EXCEPT          reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    SELECT          reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    CREATE          reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    SHOW            reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    ALTER           reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    DROP            reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    $end            reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)
    PARDER          reduce using rule 135 (UNIONN -> COMPORTAMIENTO ALL DQL_COMANDOS .)


state 212

    (66) INNERR -> TIPOS_INNER JOIN TABLA_REF . ON CONDICIONES
    (68) INNERR -> TIPOS_INNER JOIN TABLA_REF . USING PARIZQ SUB_COLUMN PARDER

    ON              shift and go to state 243
    USING           shift and go to state 244


state 213

    (67) INNERR -> JOIN TABLA_REF ON . CONDICIONES
    (38) CONDICIONES -> . CONDICIONES CONDICION
    (39) CONDICIONES -> . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICIONES                    shift and go to state 245
    CONDICION                      shift and go to state 149
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 214

    (69) INNERR -> JOIN TABLA_REF USING . PARIZQ SUB_COLUMN PARDER

    PARIZQ          shift and go to state 246


state 215

    (82) TABLA_REF -> ID AS . ID

    ID              shift and go to state 247


state 216

    (85) GROUPP -> GROUP BY EXPRE_LIST . MORE_ORDER
    (86) GROUPP -> GROUP BY EXPRE_LIST .
    (87) EXPRE_LIST -> EXPRE_LIST . EXPRES
    (100) MORE_ORDER -> . HAVING CONDICIONES
    (89) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (90) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (91) EXPRES -> . CAMPOS S2
    (92) EXPRES -> . CAMPOS
    (93) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (94) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (95) EXPRES -> . CAMPOS S2 STATE
    (96) EXPRES -> . CAMPOS STATE
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    GROUP           reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    JOIN            reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    WHERE           reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    LIMIT           reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    OFFSET          reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    INNER           reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    LEFT            reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    RIGHT           reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    FULL            reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    PUNTOCOMA       reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    UNION           reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    INTERSECT       reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    EXCEPT          reduce using rule 86 (GROUPP -> GROUP BY EXPRE_LIST .)
    HAVING          shift and go to state 250
    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    MORE_ORDER                     shift and go to state 248
    EXPRES                         shift and go to state 249
    NOMBRE_T                       shift and go to state 218
    CAMPOS                         shift and go to state 219

state 217

    (88) EXPRE_LIST -> EXPRES .

    HAVING          reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    ID              reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    ASTERISCO       reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    GROUP           reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    JOIN            reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    WHERE           reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    LIMIT           reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    OFFSET          reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    INNER           reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    LEFT            reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    RIGHT           reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    FULL            reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    PUNTOCOMA       reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    UNION           reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    INTERSECT       reduce using rule 88 (EXPRE_LIST -> EXPRES .)
    EXCEPT          reduce using rule 88 (EXPRE_LIST -> EXPRES .)


state 218

    (89) EXPRES -> NOMBRE_T . PUNTO CAMPOS S2
    (90) EXPRES -> NOMBRE_T . PUNTO CAMPOS
    (93) EXPRES -> NOMBRE_T . PUNTO CAMPOS S2 STATE
    (94) EXPRES -> NOMBRE_T . PUNTO CAMPOS STATE

    PUNTO           shift and go to state 251


state 219

    (91) EXPRES -> CAMPOS . S2
    (92) EXPRES -> CAMPOS .
    (95) EXPRES -> CAMPOS . S2 STATE
    (96) EXPRES -> CAMPOS . STATE
    (97) S2 -> . COMA EXPRES
    (98) S2 -> . AS ALIAS
    (99) S2 -> . AS ALIAS COMA EXPRES
    (101) STATE -> . ASC
    (102) STATE -> . ASC NULLS FIRST
    (103) STATE -> . ASC NULLS LAST
    (104) STATE -> . DESC
    (105) STATE -> . DESC NULLS FIRST
    (106) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 92 (EXPRES -> CAMPOS .)
    ID              reduce using rule 92 (EXPRES -> CAMPOS .)
    ASTERISCO       reduce using rule 92 (EXPRES -> CAMPOS .)
    GROUP           reduce using rule 92 (EXPRES -> CAMPOS .)
    JOIN            reduce using rule 92 (EXPRES -> CAMPOS .)
    WHERE           reduce using rule 92 (EXPRES -> CAMPOS .)
    LIMIT           reduce using rule 92 (EXPRES -> CAMPOS .)
    OFFSET          reduce using rule 92 (EXPRES -> CAMPOS .)
    INNER           reduce using rule 92 (EXPRES -> CAMPOS .)
    LEFT            reduce using rule 92 (EXPRES -> CAMPOS .)
    RIGHT           reduce using rule 92 (EXPRES -> CAMPOS .)
    FULL            reduce using rule 92 (EXPRES -> CAMPOS .)
    PUNTOCOMA       reduce using rule 92 (EXPRES -> CAMPOS .)
    UNION           reduce using rule 92 (EXPRES -> CAMPOS .)
    INTERSECT       reduce using rule 92 (EXPRES -> CAMPOS .)
    EXCEPT          reduce using rule 92 (EXPRES -> CAMPOS .)
    COMA            shift and go to state 254
    AS              shift and go to state 255
    ASC             shift and go to state 256
    DESC            shift and go to state 257

  ! ASC             [ reduce using rule 92 (EXPRES -> CAMPOS .) ]
  ! DESC            [ reduce using rule 92 (EXPRES -> CAMPOS .) ]

    S2                             shift and go to state 252
    STATE                          shift and go to state 253

state 220

    (8) DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .
    (133) UNIONS -> UNIONS . UNIONN
    (135) UNIONN -> . COMPORTAMIENTO ALL DQL_COMANDOS
    (136) UNIONN -> . COMPORTAMIENTO DQL_COMANDOS
    (137) UNIONN -> . PUNTOCOMA
    (138) COMPORTAMIENTO -> . UNION
    (139) COMPORTAMIENTO -> . INTERSECT
    (140) COMPORTAMIENTO -> . EXCEPT

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    SELECT          reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    CREATE          reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    SHOW            reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    ALTER           reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    DROP            reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    $end            reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PARDER          reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .)
    PUNTOCOMA       shift and go to state 104
    UNION           shift and go to state 108
    INTERSECT       shift and go to state 109
    EXCEPT          shift and go to state 110

  ! PUNTOCOMA       [ reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! UNION           [ reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! INTERSECT       [ reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]
  ! EXCEPT          [ reduce using rule 8 (DQL_COMANDOS -> SELECT DISTINCTNT LISTA_CAMPOS FROM NOMBRES_TABLAS CUERPO UNIONS .) ]

    UNIONN                         shift and go to state 147
    COMPORTAMIENTO                 shift and go to state 103

state 221

    (141) DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .

    SELECT          reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    CREATE          reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    SHOW            reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    ALTER           reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    DROP            reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    $end            reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    PARDER          reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    UNION           reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    INTERSECT       reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)
    EXCEPT          reduce using rule 141 (DQL_COMANDOS -> CREATE TABLE NOMBRES_TABLAS PARIZQ CUERPO_CREATE_TABLE PARDER PUNTOCOMA .)


state 222

    (145) LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE . COMA
    (146) LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .

    COMA            shift and go to state 258
    ID              reduce using rule 146 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)
    PARDER          reduce using rule 146 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE .)


state 223

    (160) VALIDACIONES_CREATE_TABLE -> LISTA3 .

    COMA            reduce using rule 160 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    ID              reduce using rule 160 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)
    PARDER          reduce using rule 160 (VALIDACIONES_CREATE_TABLE -> LISTA3 .)


state 224

    (161) LISTA3 -> VALIDACION_CAMPO_CREATE .

    COMA            reduce using rule 161 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    ID              reduce using rule 161 (LISTA3 -> VALIDACION_CAMPO_CREATE .)
    PARDER          reduce using rule 161 (LISTA3 -> VALIDACION_CAMPO_CREATE .)


state 225

    (162) LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .

    COMA            reduce using rule 162 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    ID              reduce using rule 162 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)
    PARDER          reduce using rule 162 (LISTA3 -> VALIDACION_CAMPO_CREATE_VACIO .)


state 226

    (163) VALIDACION_CAMPO_CREATE -> NOT . NULL

    NULL            shift and go to state 259


state 227

    (169) VALIDACION_CAMPO_CREATE -> NULL .

    COMA            reduce using rule 169 (VALIDACION_CAMPO_CREATE -> NULL .)
    ID              reduce using rule 169 (VALIDACION_CAMPO_CREATE -> NULL .)
    PARDER          reduce using rule 169 (VALIDACION_CAMPO_CREATE -> NULL .)


state 228

    (164) VALIDACION_CAMPO_CREATE -> DEFAULT . CADENASIMPLE
    (165) VALIDACION_CAMPO_CREATE -> DEFAULT . CADENADOBLE
    (166) VALIDACION_CAMPO_CREATE -> DEFAULT . DECIMAL
    (167) VALIDACION_CAMPO_CREATE -> DEFAULT . ENTERO

    CADENASIMPLE    shift and go to state 260
    CADENADOBLE     shift and go to state 261
    DECIMAL         shift and go to state 262
    ENTERO          shift and go to state 263


state 229

    (153) TIPO_CAMPO -> DOUBLE PRECISION .

    NOT             reduce using rule 153 (TIPO_CAMPO -> DOUBLE PRECISION .)
    DEFAULT         reduce using rule 153 (TIPO_CAMPO -> DOUBLE PRECISION .)
    NULL            reduce using rule 153 (TIPO_CAMPO -> DOUBLE PRECISION .)
    COMA            reduce using rule 153 (TIPO_CAMPO -> DOUBLE PRECISION .)
    ID              reduce using rule 153 (TIPO_CAMPO -> DOUBLE PRECISION .)
    PARDER          reduce using rule 153 (TIPO_CAMPO -> DOUBLE PRECISION .)


state 230

    (154) TIPO_CAMPO -> CHARACTER VARYING . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 264


state 231

    (156) TIPO_CAMPO -> CHARACTER PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 265


state 232

    (155) TIPO_CAMPO -> VARCHAR PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 266


state 233

    (157) TIPO_CAMPO -> CHAR PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 267


state 234

    (119) AS_NO -> COMA QUERY .

    PARIZQ          reduce using rule 119 (AS_NO -> COMA QUERY .)
    EXISTS          reduce using rule 119 (AS_NO -> COMA QUERY .)
    ID              reduce using rule 119 (AS_NO -> COMA QUERY .)
    ENTERO          reduce using rule 119 (AS_NO -> COMA QUERY .)
    DECIMAL         reduce using rule 119 (AS_NO -> COMA QUERY .)
    CADENASIMPLE    reduce using rule 119 (AS_NO -> COMA QUERY .)
    CADENADOBLE     reduce using rule 119 (AS_NO -> COMA QUERY .)
    WHERE           reduce using rule 119 (AS_NO -> COMA QUERY .)
    PUNTOCOMA       reduce using rule 119 (AS_NO -> COMA QUERY .)
    UNION           reduce using rule 119 (AS_NO -> COMA QUERY .)
    INTERSECT       reduce using rule 119 (AS_NO -> COMA QUERY .)
    EXCEPT          reduce using rule 119 (AS_NO -> COMA QUERY .)
    JOIN            reduce using rule 119 (AS_NO -> COMA QUERY .)
    GROUP           reduce using rule 119 (AS_NO -> COMA QUERY .)
    LIMIT           reduce using rule 119 (AS_NO -> COMA QUERY .)
    OFFSET          reduce using rule 119 (AS_NO -> COMA QUERY .)
    INNER           reduce using rule 119 (AS_NO -> COMA QUERY .)
    LEFT            reduce using rule 119 (AS_NO -> COMA QUERY .)
    RIGHT           reduce using rule 119 (AS_NO -> COMA QUERY .)
    FULL            reduce using rule 119 (AS_NO -> COMA QUERY .)


state 235

    (120) AS_NO -> AS NO_N .
    (121) AS_NO -> AS NO_N . COMA QUERY

    PARIZQ          reduce using rule 120 (AS_NO -> AS NO_N .)
    EXISTS          reduce using rule 120 (AS_NO -> AS NO_N .)
    ID              reduce using rule 120 (AS_NO -> AS NO_N .)
    ENTERO          reduce using rule 120 (AS_NO -> AS NO_N .)
    DECIMAL         reduce using rule 120 (AS_NO -> AS NO_N .)
    CADENASIMPLE    reduce using rule 120 (AS_NO -> AS NO_N .)
    CADENADOBLE     reduce using rule 120 (AS_NO -> AS NO_N .)
    WHERE           reduce using rule 120 (AS_NO -> AS NO_N .)
    PUNTOCOMA       reduce using rule 120 (AS_NO -> AS NO_N .)
    UNION           reduce using rule 120 (AS_NO -> AS NO_N .)
    INTERSECT       reduce using rule 120 (AS_NO -> AS NO_N .)
    EXCEPT          reduce using rule 120 (AS_NO -> AS NO_N .)
    JOIN            reduce using rule 120 (AS_NO -> AS NO_N .)
    GROUP           reduce using rule 120 (AS_NO -> AS NO_N .)
    LIMIT           reduce using rule 120 (AS_NO -> AS NO_N .)
    OFFSET          reduce using rule 120 (AS_NO -> AS NO_N .)
    INNER           reduce using rule 120 (AS_NO -> AS NO_N .)
    LEFT            reduce using rule 120 (AS_NO -> AS NO_N .)
    RIGHT           reduce using rule 120 (AS_NO -> AS NO_N .)
    FULL            reduce using rule 120 (AS_NO -> AS NO_N .)
    COMA            shift and go to state 268


state 236

    (122) NO_N -> ID .

    COMA            reduce using rule 122 (NO_N -> ID .)
    PARIZQ          reduce using rule 122 (NO_N -> ID .)
    EXISTS          reduce using rule 122 (NO_N -> ID .)
    ID              reduce using rule 122 (NO_N -> ID .)
    ENTERO          reduce using rule 122 (NO_N -> ID .)
    DECIMAL         reduce using rule 122 (NO_N -> ID .)
    CADENASIMPLE    reduce using rule 122 (NO_N -> ID .)
    CADENADOBLE     reduce using rule 122 (NO_N -> ID .)
    WHERE           reduce using rule 122 (NO_N -> ID .)
    PUNTOCOMA       reduce using rule 122 (NO_N -> ID .)
    UNION           reduce using rule 122 (NO_N -> ID .)
    INTERSECT       reduce using rule 122 (NO_N -> ID .)
    EXCEPT          reduce using rule 122 (NO_N -> ID .)
    JOIN            reduce using rule 122 (NO_N -> ID .)
    GROUP           reduce using rule 122 (NO_N -> ID .)
    LIMIT           reduce using rule 122 (NO_N -> ID .)
    OFFSET          reduce using rule 122 (NO_N -> ID .)
    INNER           reduce using rule 122 (NO_N -> ID .)
    LEFT            reduce using rule 122 (NO_N -> ID .)
    RIGHT           reduce using rule 122 (NO_N -> ID .)
    FULL            reduce using rule 122 (NO_N -> ID .)


state 237

    (116) QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .

    PARIZQ          reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    EXISTS          reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    ID              reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    ENTERO          reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    DECIMAL         reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    CADENASIMPLE    reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    CADENADOBLE     reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    WHERE           reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    PUNTOCOMA       reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    UNION           reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    INTERSECT       reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    EXCEPT          reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    JOIN            reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    GROUP           reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    LIMIT           reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    OFFSET          reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    INNER           reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    LEFT            reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    RIGHT           reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)
    FULL            reduce using rule 116 (QUERY -> ATE_QUE PARIZQ QUE PARDER AS_NO .)


state 238

    (174) CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .

    SELECT          reduce using rule 174 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    CREATE          reduce using rule 174 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    SHOW            reduce using rule 174 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    ALTER           reduce using rule 174 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    DROP            reduce using rule 174 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)
    $end            reduce using rule 174 (CREATE_DATABASE -> CREATE REPLACE_OP DATABASE IF_NOT_EXISTIS ID OWNER_DATABASE MODE_DATABASE .)


state 239

    (181) MODE_DATABASE -> MODE . IGUAL ENTERO

    IGUAL           shift and go to state 269


state 240

    (179) OWNER_DATABASE -> OWNER IGUAL . ID

    ID              shift and go to state 270


state 241

    (40) CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL . OTRO_LOGICO
    (41) CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .
    (46) OTRO_LOGICO -> . SIMBOLO_LOGICO CONDICIONES
    (49) SIMBOLO_LOGICO -> . AND
    (50) SIMBOLO_LOGICO -> . OR

    NOT             reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    ID              reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    ENTERO          reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    DECIMAL         reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    CADENASIMPLE    reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    CADENADOBLE     reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    PUNTOCOMA       reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    UNION           reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    INTERSECT       reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    EXCEPT          reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    JOIN            reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    WHERE           reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    INNER           reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    LEFT            reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    RIGHT           reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    FULL            reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    GROUP           reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    LIMIT           reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    OFFSET          reduce using rule 41 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL .)
    AND             shift and go to state 206
    OR              shift and go to state 207

    SIMBOLO_LOGICO                 shift and go to state 271
    OTRO_LOGICO                    shift and go to state 272

state 242

    (43) CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .

    AND             reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    OR              reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    NOT             reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    ID              reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    ENTERO          reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    DECIMAL         reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    CADENASIMPLE    reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    CADENADOBLE     reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    PUNTOCOMA       reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    UNION           reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    INTERSECT       reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    EXCEPT          reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    JOIN            reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    WHERE           reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    INNER           reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    LEFT            reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    RIGHT           reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    FULL            reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    GROUP           reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    LIMIT           reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)
    OFFSET          reduce using rule 43 (CONDICION_REL -> EXPRESIONNE OPERADOR EXPRESIONNE .)


state 243

    (66) INNERR -> TIPOS_INNER JOIN TABLA_REF ON . CONDICIONES
    (38) CONDICIONES -> . CONDICIONES CONDICION
    (39) CONDICIONES -> . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICIONES                    shift and go to state 273
    CONDICION                      shift and go to state 149
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 244

    (68) INNERR -> TIPOS_INNER JOIN TABLA_REF USING . PARIZQ SUB_COLUMN PARDER

    PARIZQ          shift and go to state 274


state 245

    (67) INNERR -> JOIN TABLA_REF ON CONDICIONES .
    (38) CONDICIONES -> CONDICIONES . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    JOIN            reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    WHERE           reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    INNER           reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    LEFT            reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    RIGHT           reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    FULL            reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    GROUP           reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    LIMIT           reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    OFFSET          reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    PUNTOCOMA       reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    UNION           reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    INTERSECT       reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    EXCEPT          reduce using rule 67 (INNERR -> JOIN TABLA_REF ON CONDICIONES .)
    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICION                      shift and go to state 204
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 246

    (69) INNERR -> JOIN TABLA_REF USING PARIZQ . SUB_COLUMN PARDER
    (71) SUB_COLUMN -> . JOIN EXPRESIONNE
    (72) SUB_COLUMN -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    JOIN            shift and go to state 275
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    SUB_COLUMN                     shift and go to state 276
    EXPRESIONNE                    shift and go to state 277
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 247

    (82) TABLA_REF -> ID AS ID .

    ON              reduce using rule 82 (TABLA_REF -> ID AS ID .)
    USING           reduce using rule 82 (TABLA_REF -> ID AS ID .)


state 248

    (85) GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .

    GROUP           reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    JOIN            reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    WHERE           reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    LIMIT           reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    OFFSET          reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    INNER           reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    LEFT            reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    RIGHT           reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    FULL            reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    PUNTOCOMA       reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    UNION           reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    INTERSECT       reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)
    EXCEPT          reduce using rule 85 (GROUPP -> GROUP BY EXPRE_LIST MORE_ORDER .)


state 249

    (87) EXPRE_LIST -> EXPRE_LIST EXPRES .

    HAVING          reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    ID              reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    ASTERISCO       reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    GROUP           reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    JOIN            reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    WHERE           reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    LIMIT           reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    OFFSET          reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    INNER           reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    LEFT            reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    RIGHT           reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    FULL            reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    PUNTOCOMA       reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    UNION           reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    INTERSECT       reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)
    EXCEPT          reduce using rule 87 (EXPRE_LIST -> EXPRE_LIST EXPRES .)


state 250

    (100) MORE_ORDER -> HAVING . CONDICIONES
    (38) CONDICIONES -> . CONDICIONES CONDICION
    (39) CONDICIONES -> . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICIONES                    shift and go to state 278
    CONDICION                      shift and go to state 149
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 251

    (89) EXPRES -> NOMBRE_T PUNTO . CAMPOS S2
    (90) EXPRES -> NOMBRE_T PUNTO . CAMPOS
    (93) EXPRES -> NOMBRE_T PUNTO . CAMPOS S2 STATE
    (94) EXPRES -> NOMBRE_T PUNTO . CAMPOS STATE
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    ID              shift and go to state 63
    ASTERISCO       shift and go to state 23

    CAMPOS                         shift and go to state 279

state 252

    (91) EXPRES -> CAMPOS S2 .
    (95) EXPRES -> CAMPOS S2 . STATE
    (101) STATE -> . ASC
    (102) STATE -> . ASC NULLS FIRST
    (103) STATE -> . ASC NULLS LAST
    (104) STATE -> . DESC
    (105) STATE -> . DESC NULLS FIRST
    (106) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    ID              reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    ASTERISCO       reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    GROUP           reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    JOIN            reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    WHERE           reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    LIMIT           reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    OFFSET          reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    INNER           reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    LEFT            reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    RIGHT           reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    FULL            reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    PUNTOCOMA       reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    UNION           reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    INTERSECT       reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    EXCEPT          reduce using rule 91 (EXPRES -> CAMPOS S2 .)
    ASC             shift and go to state 256
    DESC            shift and go to state 257

  ! ASC             [ reduce using rule 91 (EXPRES -> CAMPOS S2 .) ]
  ! DESC            [ reduce using rule 91 (EXPRES -> CAMPOS S2 .) ]

    STATE                          shift and go to state 280

state 253

    (96) EXPRES -> CAMPOS STATE .

    HAVING          reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    ID              reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    ASTERISCO       reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    GROUP           reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    JOIN            reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    WHERE           reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    LIMIT           reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    OFFSET          reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    INNER           reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    LEFT            reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    RIGHT           reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    FULL            reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    PUNTOCOMA       reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    UNION           reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    INTERSECT       reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    EXCEPT          reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    ASC             reduce using rule 96 (EXPRES -> CAMPOS STATE .)
    DESC            reduce using rule 96 (EXPRES -> CAMPOS STATE .)


state 254

    (97) S2 -> COMA . EXPRES
    (89) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (90) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (91) EXPRES -> . CAMPOS S2
    (92) EXPRES -> . CAMPOS
    (93) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (94) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (95) EXPRES -> . CAMPOS S2 STATE
    (96) EXPRES -> . CAMPOS STATE
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    EXPRES                         shift and go to state 281
    NOMBRE_T                       shift and go to state 218
    CAMPOS                         shift and go to state 219

state 255

    (98) S2 -> AS . ALIAS
    (99) S2 -> AS . ALIAS COMA EXPRES
    (19) ALIAS -> . ID

    ID              shift and go to state 66

    ALIAS                          shift and go to state 282

state 256

    (101) STATE -> ASC .
    (102) STATE -> ASC . NULLS FIRST
    (103) STATE -> ASC . NULLS LAST

    HAVING          reduce using rule 101 (STATE -> ASC .)
    ID              reduce using rule 101 (STATE -> ASC .)
    ASTERISCO       reduce using rule 101 (STATE -> ASC .)
    GROUP           reduce using rule 101 (STATE -> ASC .)
    JOIN            reduce using rule 101 (STATE -> ASC .)
    WHERE           reduce using rule 101 (STATE -> ASC .)
    LIMIT           reduce using rule 101 (STATE -> ASC .)
    OFFSET          reduce using rule 101 (STATE -> ASC .)
    INNER           reduce using rule 101 (STATE -> ASC .)
    LEFT            reduce using rule 101 (STATE -> ASC .)
    RIGHT           reduce using rule 101 (STATE -> ASC .)
    FULL            reduce using rule 101 (STATE -> ASC .)
    PUNTOCOMA       reduce using rule 101 (STATE -> ASC .)
    UNION           reduce using rule 101 (STATE -> ASC .)
    INTERSECT       reduce using rule 101 (STATE -> ASC .)
    EXCEPT          reduce using rule 101 (STATE -> ASC .)
    ASC             reduce using rule 101 (STATE -> ASC .)
    DESC            reduce using rule 101 (STATE -> ASC .)
    NULLS           shift and go to state 283


state 257

    (104) STATE -> DESC .
    (105) STATE -> DESC . NULLS FIRST
    (106) STATE -> DESC . NULLS LAST

    HAVING          reduce using rule 104 (STATE -> DESC .)
    ID              reduce using rule 104 (STATE -> DESC .)
    ASTERISCO       reduce using rule 104 (STATE -> DESC .)
    GROUP           reduce using rule 104 (STATE -> DESC .)
    JOIN            reduce using rule 104 (STATE -> DESC .)
    WHERE           reduce using rule 104 (STATE -> DESC .)
    LIMIT           reduce using rule 104 (STATE -> DESC .)
    OFFSET          reduce using rule 104 (STATE -> DESC .)
    INNER           reduce using rule 104 (STATE -> DESC .)
    LEFT            reduce using rule 104 (STATE -> DESC .)
    RIGHT           reduce using rule 104 (STATE -> DESC .)
    FULL            reduce using rule 104 (STATE -> DESC .)
    PUNTOCOMA       reduce using rule 104 (STATE -> DESC .)
    UNION           reduce using rule 104 (STATE -> DESC .)
    INTERSECT       reduce using rule 104 (STATE -> DESC .)
    EXCEPT          reduce using rule 104 (STATE -> DESC .)
    ASC             reduce using rule 104 (STATE -> DESC .)
    DESC            reduce using rule 104 (STATE -> DESC .)
    NULLS           shift and go to state 284


state 258

    (145) LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .

    ID              reduce using rule 145 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)
    PARDER          reduce using rule 145 (LISTA2 -> NOMBRE_T TIPO_CAMPO VALIDACIONES_CREATE_TABLE COMA .)


state 259

    (163) VALIDACION_CAMPO_CREATE -> NOT NULL .

    COMA            reduce using rule 163 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    ID              reduce using rule 163 (VALIDACION_CAMPO_CREATE -> NOT NULL .)
    PARDER          reduce using rule 163 (VALIDACION_CAMPO_CREATE -> NOT NULL .)


state 260

    (164) VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .

    COMA            reduce using rule 164 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    ID              reduce using rule 164 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)
    PARDER          reduce using rule 164 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENASIMPLE .)


state 261

    (165) VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .

    COMA            reduce using rule 165 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    ID              reduce using rule 165 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)
    PARDER          reduce using rule 165 (VALIDACION_CAMPO_CREATE -> DEFAULT CADENADOBLE .)


state 262

    (166) VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .

    COMA            reduce using rule 166 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    ID              reduce using rule 166 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)
    PARDER          reduce using rule 166 (VALIDACION_CAMPO_CREATE -> DEFAULT DECIMAL .)


state 263

    (167) VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .

    COMA            reduce using rule 167 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    ID              reduce using rule 167 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)
    PARDER          reduce using rule 167 (VALIDACION_CAMPO_CREATE -> DEFAULT ENTERO .)


state 264

    (154) TIPO_CAMPO -> CHARACTER VARYING PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 285


state 265

    (156) TIPO_CAMPO -> CHARACTER PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 286


state 266

    (155) TIPO_CAMPO -> VARCHAR PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 287


state 267

    (157) TIPO_CAMPO -> CHAR PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 288


state 268

    (121) AS_NO -> AS NO_N COMA . QUERY
    (115) QUERY -> . ATE_QUE PARIZQ QUE PARDER
    (116) QUERY -> . ATE_QUE PARIZQ QUE PARDER AS_NO
    (117) QUERY -> . PARIZQ QUE PARDER
    (118) QUERY -> . PARIZQ QUE PARDER AS_NO
    (123) ATE_QUE -> . EXISTS
    (124) ATE_QUE -> . EXPRESIONNE OPCIONALESS
    (125) ATE_QUE -> . EXPRESIONNE OPERADOR OPCIONALESS2
    (126) ATE_QUE -> . ID
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    PARIZQ          shift and go to state 38
    EXISTS          shift and go to state 45
    ID              shift and go to state 76
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    QUERY                          shift and go to state 289
    ATE_QUE                        shift and go to state 44
    EXPRESIONNE                    shift and go to state 46
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 269

    (181) MODE_DATABASE -> MODE IGUAL . ENTERO

    ENTERO          shift and go to state 290


state 270

    (179) OWNER_DATABASE -> OWNER IGUAL ID .

    MODE            reduce using rule 179 (OWNER_DATABASE -> OWNER IGUAL ID .)
    SELECT          reduce using rule 179 (OWNER_DATABASE -> OWNER IGUAL ID .)
    CREATE          reduce using rule 179 (OWNER_DATABASE -> OWNER IGUAL ID .)
    SHOW            reduce using rule 179 (OWNER_DATABASE -> OWNER IGUAL ID .)
    ALTER           reduce using rule 179 (OWNER_DATABASE -> OWNER IGUAL ID .)
    DROP            reduce using rule 179 (OWNER_DATABASE -> OWNER IGUAL ID .)
    $end            reduce using rule 179 (OWNER_DATABASE -> OWNER IGUAL ID .)


state 271

    (46) OTRO_LOGICO -> SIMBOLO_LOGICO . CONDICIONES
    (38) CONDICIONES -> . CONDICIONES CONDICION
    (39) CONDICIONES -> . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICIONES                    shift and go to state 291
    CONDICION                      shift and go to state 149
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 272

    (40) CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .

    NOT             reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    ID              reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    ENTERO          reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    DECIMAL         reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    CADENASIMPLE    reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    CADENADOBLE     reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    PUNTOCOMA       reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    UNION           reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    INTERSECT       reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    EXCEPT          reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    JOIN            reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    WHERE           reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    INNER           reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    LEFT            reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    RIGHT           reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    FULL            reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    GROUP           reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    LIMIT           reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)
    OFFSET          reduce using rule 40 (CONDICION -> CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO .)


state 273

    (66) INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .
    (38) CONDICIONES -> CONDICIONES . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    JOIN            reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    WHERE           reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    INNER           reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    LEFT            reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    RIGHT           reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    FULL            reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    GROUP           reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    LIMIT           reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    OFFSET          reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    PUNTOCOMA       reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    UNION           reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    INTERSECT       reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    EXCEPT          reduce using rule 66 (INNERR -> TIPOS_INNER JOIN TABLA_REF ON CONDICIONES .)
    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICION                      shift and go to state 204
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 274

    (68) INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ . SUB_COLUMN PARDER
    (71) SUB_COLUMN -> . JOIN EXPRESIONNE
    (72) SUB_COLUMN -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    JOIN            shift and go to state 275
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    SUB_COLUMN                     shift and go to state 292
    EXPRESIONNE                    shift and go to state 277
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 275

    (71) SUB_COLUMN -> JOIN . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    EXPRESIONNE                    shift and go to state 293
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 276

    (69) INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN . PARDER

    PARDER          shift and go to state 294


state 277

    (72) SUB_COLUMN -> EXPRESIONNE .

    PARDER          reduce using rule 72 (SUB_COLUMN -> EXPRESIONNE .)


state 278

    (100) MORE_ORDER -> HAVING CONDICIONES .
    (38) CONDICIONES -> CONDICIONES . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

    GROUP           reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    JOIN            reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    WHERE           reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    LIMIT           reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    OFFSET          reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    INNER           reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    LEFT            reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    RIGHT           reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    FULL            reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    PUNTOCOMA       reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    UNION           reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    INTERSECT       reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    EXCEPT          reduce using rule 100 (MORE_ORDER -> HAVING CONDICIONES .)
    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

    CONDICION                      shift and go to state 204
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 279

    (89) EXPRES -> NOMBRE_T PUNTO CAMPOS . S2
    (90) EXPRES -> NOMBRE_T PUNTO CAMPOS .
    (93) EXPRES -> NOMBRE_T PUNTO CAMPOS . S2 STATE
    (94) EXPRES -> NOMBRE_T PUNTO CAMPOS . STATE
    (97) S2 -> . COMA EXPRES
    (98) S2 -> . AS ALIAS
    (99) S2 -> . AS ALIAS COMA EXPRES
    (101) STATE -> . ASC
    (102) STATE -> . ASC NULLS FIRST
    (103) STATE -> . ASC NULLS LAST
    (104) STATE -> . DESC
    (105) STATE -> . DESC NULLS FIRST
    (106) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    ID              reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    ASTERISCO       reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    GROUP           reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    JOIN            reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    WHERE           reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    LIMIT           reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    OFFSET          reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    INNER           reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    LEFT            reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    RIGHT           reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    FULL            reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    PUNTOCOMA       reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    UNION           reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    INTERSECT       reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    EXCEPT          reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .)
    COMA            shift and go to state 254
    AS              shift and go to state 255
    ASC             shift and go to state 256
    DESC            shift and go to state 257

  ! ASC             [ reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .) ]
  ! DESC            [ reduce using rule 90 (EXPRES -> NOMBRE_T PUNTO CAMPOS .) ]

    S2                             shift and go to state 295
    STATE                          shift and go to state 296

state 280

    (95) EXPRES -> CAMPOS S2 STATE .

    HAVING          reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    ID              reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    ASTERISCO       reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    GROUP           reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    JOIN            reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    WHERE           reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    LIMIT           reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    OFFSET          reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    INNER           reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    LEFT            reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    RIGHT           reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    FULL            reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    PUNTOCOMA       reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    UNION           reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    INTERSECT       reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    EXCEPT          reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    ASC             reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)
    DESC            reduce using rule 95 (EXPRES -> CAMPOS S2 STATE .)


state 281

    (97) S2 -> COMA EXPRES .

    ASC             reduce using rule 97 (S2 -> COMA EXPRES .)
    DESC            reduce using rule 97 (S2 -> COMA EXPRES .)
    HAVING          reduce using rule 97 (S2 -> COMA EXPRES .)
    ID              reduce using rule 97 (S2 -> COMA EXPRES .)
    ASTERISCO       reduce using rule 97 (S2 -> COMA EXPRES .)
    GROUP           reduce using rule 97 (S2 -> COMA EXPRES .)
    JOIN            reduce using rule 97 (S2 -> COMA EXPRES .)
    WHERE           reduce using rule 97 (S2 -> COMA EXPRES .)
    LIMIT           reduce using rule 97 (S2 -> COMA EXPRES .)
    OFFSET          reduce using rule 97 (S2 -> COMA EXPRES .)
    INNER           reduce using rule 97 (S2 -> COMA EXPRES .)
    LEFT            reduce using rule 97 (S2 -> COMA EXPRES .)
    RIGHT           reduce using rule 97 (S2 -> COMA EXPRES .)
    FULL            reduce using rule 97 (S2 -> COMA EXPRES .)
    PUNTOCOMA       reduce using rule 97 (S2 -> COMA EXPRES .)
    UNION           reduce using rule 97 (S2 -> COMA EXPRES .)
    INTERSECT       reduce using rule 97 (S2 -> COMA EXPRES .)
    EXCEPT          reduce using rule 97 (S2 -> COMA EXPRES .)


state 282

    (98) S2 -> AS ALIAS .
    (99) S2 -> AS ALIAS . COMA EXPRES

    ASC             reduce using rule 98 (S2 -> AS ALIAS .)
    DESC            reduce using rule 98 (S2 -> AS ALIAS .)
    HAVING          reduce using rule 98 (S2 -> AS ALIAS .)
    ID              reduce using rule 98 (S2 -> AS ALIAS .)
    ASTERISCO       reduce using rule 98 (S2 -> AS ALIAS .)
    GROUP           reduce using rule 98 (S2 -> AS ALIAS .)
    JOIN            reduce using rule 98 (S2 -> AS ALIAS .)
    WHERE           reduce using rule 98 (S2 -> AS ALIAS .)
    LIMIT           reduce using rule 98 (S2 -> AS ALIAS .)
    OFFSET          reduce using rule 98 (S2 -> AS ALIAS .)
    INNER           reduce using rule 98 (S2 -> AS ALIAS .)
    LEFT            reduce using rule 98 (S2 -> AS ALIAS .)
    RIGHT           reduce using rule 98 (S2 -> AS ALIAS .)
    FULL            reduce using rule 98 (S2 -> AS ALIAS .)
    PUNTOCOMA       reduce using rule 98 (S2 -> AS ALIAS .)
    UNION           reduce using rule 98 (S2 -> AS ALIAS .)
    INTERSECT       reduce using rule 98 (S2 -> AS ALIAS .)
    EXCEPT          reduce using rule 98 (S2 -> AS ALIAS .)
    COMA            shift and go to state 297


state 283

    (102) STATE -> ASC NULLS . FIRST
    (103) STATE -> ASC NULLS . LAST

    FIRST           shift and go to state 298
    LAST            shift and go to state 299


state 284

    (105) STATE -> DESC NULLS . FIRST
    (106) STATE -> DESC NULLS . LAST

    FIRST           shift and go to state 300
    LAST            shift and go to state 301


state 285

    (154) TIPO_CAMPO -> CHARACTER VARYING PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 302


state 286

    (156) TIPO_CAMPO -> CHARACTER PARIZQ ENTERO PARDER .

    NOT             reduce using rule 156 (TIPO_CAMPO -> CHARACTER PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 156 (TIPO_CAMPO -> CHARACTER PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 156 (TIPO_CAMPO -> CHARACTER PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 156 (TIPO_CAMPO -> CHARACTER PARIZQ ENTERO PARDER .)
    ID              reduce using rule 156 (TIPO_CAMPO -> CHARACTER PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 156 (TIPO_CAMPO -> CHARACTER PARIZQ ENTERO PARDER .)


state 287

    (155) TIPO_CAMPO -> VARCHAR PARIZQ ENTERO PARDER .

    NOT             reduce using rule 155 (TIPO_CAMPO -> VARCHAR PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 155 (TIPO_CAMPO -> VARCHAR PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 155 (TIPO_CAMPO -> VARCHAR PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 155 (TIPO_CAMPO -> VARCHAR PARIZQ ENTERO PARDER .)
    ID              reduce using rule 155 (TIPO_CAMPO -> VARCHAR PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 155 (TIPO_CAMPO -> VARCHAR PARIZQ ENTERO PARDER .)


state 288

    (157) TIPO_CAMPO -> CHAR PARIZQ ENTERO PARDER .

    NOT             reduce using rule 157 (TIPO_CAMPO -> CHAR PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 157 (TIPO_CAMPO -> CHAR PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 157 (TIPO_CAMPO -> CHAR PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 157 (TIPO_CAMPO -> CHAR PARIZQ ENTERO PARDER .)
    ID              reduce using rule 157 (TIPO_CAMPO -> CHAR PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 157 (TIPO_CAMPO -> CHAR PARIZQ ENTERO PARDER .)


state 289

    (121) AS_NO -> AS NO_N COMA QUERY .

    PARIZQ          reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    EXISTS          reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    ID              reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    ENTERO          reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    DECIMAL         reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    CADENASIMPLE    reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    CADENADOBLE     reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    WHERE           reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    PUNTOCOMA       reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    UNION           reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    INTERSECT       reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    EXCEPT          reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    JOIN            reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    GROUP           reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    LIMIT           reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    OFFSET          reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    INNER           reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    LEFT            reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    RIGHT           reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)
    FULL            reduce using rule 121 (AS_NO -> AS NO_N COMA QUERY .)


state 290

    (181) MODE_DATABASE -> MODE IGUAL ENTERO .

    SELECT          reduce using rule 181 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    CREATE          reduce using rule 181 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    SHOW            reduce using rule 181 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    ALTER           reduce using rule 181 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    DROP            reduce using rule 181 (MODE_DATABASE -> MODE IGUAL ENTERO .)
    $end            reduce using rule 181 (MODE_DATABASE -> MODE IGUAL ENTERO .)


state 291

    (46) OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .
    (38) CONDICIONES -> CONDICIONES . CONDICION
    (40) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL OTRO_LOGICO
    (41) CONDICION -> . CONDICION_REL SIMBOLO_LOGICO CONDICION_REL
    (42) CONDICION -> . CONDICION_REL
    (43) CONDICION_REL -> . EXPRESIONNE OPERADOR EXPRESIONNE
    (44) CONDICION_REL -> . SIMBOLO_NEG EXPRESIONNE
    (45) CONDICION_REL -> . EXPRESIONNE
    (47) EXPRESIONNE -> . NOMBRE_C PUNTO CAMPOSC
    (48) EXPRESIONNE -> . CAMPOSC
    (51) SIMBOLO_NEG -> . NOT
    (52) NOMBRE_C -> . ID
    (53) CAMPOSC -> . ID
    (54) CAMPOSC -> . ENTERO
    (55) CAMPOSC -> . DECIMAL
    (56) CAMPOSC -> . CADENASIMPLE
    (57) CAMPOSC -> . CADENADOBLE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENASIMPLE resolved as shift
  ! shift/reduce conflict for CADENADOBLE resolved as shift
    PUNTOCOMA       reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    UNION           reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    INTERSECT       reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    EXCEPT          reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    JOIN            reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    WHERE           reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    INNER           reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    LEFT            reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    RIGHT           reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    FULL            reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    GROUP           reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    LIMIT           reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    OFFSET          reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .)
    NOT             shift and go to state 153
    ID              shift and go to state 154
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    CADENASIMPLE    shift and go to state 51
    CADENADOBLE     shift and go to state 52

  ! NOT             [ reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! ID              [ reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! ENTERO          [ reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! DECIMAL         [ reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! CADENASIMPLE    [ reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]
  ! CADENADOBLE     [ reduce using rule 46 (OTRO_LOGICO -> SIMBOLO_LOGICO CONDICIONES .) ]

    CONDICION                      shift and go to state 204
    CONDICION_REL                  shift and go to state 150
    EXPRESIONNE                    shift and go to state 151
    SIMBOLO_NEG                    shift and go to state 152
    NOMBRE_C                       shift and go to state 47
    CAMPOSC                        shift and go to state 48

state 292

    (68) INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN . PARDER

    PARDER          shift and go to state 303


state 293

    (71) SUB_COLUMN -> JOIN EXPRESIONNE .

    PARDER          reduce using rule 71 (SUB_COLUMN -> JOIN EXPRESIONNE .)


state 294

    (69) INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .

    JOIN            reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    WHERE           reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INNER           reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LEFT            reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    RIGHT           reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    FULL            reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    GROUP           reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LIMIT           reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    OFFSET          reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    PUNTOCOMA       reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    UNION           reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INTERSECT       reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    EXCEPT          reduce using rule 69 (INNERR -> JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)


state 295

    (89) EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .
    (93) EXPRES -> NOMBRE_T PUNTO CAMPOS S2 . STATE
    (101) STATE -> . ASC
    (102) STATE -> . ASC NULLS FIRST
    (103) STATE -> . ASC NULLS LAST
    (104) STATE -> . DESC
    (105) STATE -> . DESC NULLS FIRST
    (106) STATE -> . DESC NULLS LAST

  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
    HAVING          reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    ID              reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    ASTERISCO       reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    GROUP           reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    JOIN            reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    WHERE           reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    LIMIT           reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    OFFSET          reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    INNER           reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    LEFT            reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    RIGHT           reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    FULL            reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    PUNTOCOMA       reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    UNION           reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    INTERSECT       reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    EXCEPT          reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .)
    ASC             shift and go to state 256
    DESC            shift and go to state 257

  ! ASC             [ reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .) ]
  ! DESC            [ reduce using rule 89 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 .) ]

    STATE                          shift and go to state 304

state 296

    (94) EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .

    HAVING          reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    ID              reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    ASTERISCO       reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    GROUP           reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    JOIN            reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    WHERE           reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    LIMIT           reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    OFFSET          reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    INNER           reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    LEFT            reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    RIGHT           reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    FULL            reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    PUNTOCOMA       reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    UNION           reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    INTERSECT       reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    EXCEPT          reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    ASC             reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)
    DESC            reduce using rule 94 (EXPRES -> NOMBRE_T PUNTO CAMPOS STATE .)


state 297

    (99) S2 -> AS ALIAS COMA . EXPRES
    (89) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2
    (90) EXPRES -> . NOMBRE_T PUNTO CAMPOS
    (91) EXPRES -> . CAMPOS S2
    (92) EXPRES -> . CAMPOS
    (93) EXPRES -> . NOMBRE_T PUNTO CAMPOS S2 STATE
    (94) EXPRES -> . NOMBRE_T PUNTO CAMPOS STATE
    (95) EXPRES -> . CAMPOS S2 STATE
    (96) EXPRES -> . CAMPOS STATE
    (18) NOMBRE_T -> . ID
    (16) CAMPOS -> . ID
    (17) CAMPOS -> . ASTERISCO

    ID              shift and go to state 22
    ASTERISCO       shift and go to state 23

    EXPRES                         shift and go to state 305
    NOMBRE_T                       shift and go to state 218
    CAMPOS                         shift and go to state 219

state 298

    (102) STATE -> ASC NULLS FIRST .

    HAVING          reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    ID              reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    ASTERISCO       reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    GROUP           reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    JOIN            reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    WHERE           reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    LIMIT           reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    OFFSET          reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    INNER           reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    LEFT            reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    RIGHT           reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    FULL            reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    PUNTOCOMA       reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    UNION           reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    INTERSECT       reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    EXCEPT          reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    ASC             reduce using rule 102 (STATE -> ASC NULLS FIRST .)
    DESC            reduce using rule 102 (STATE -> ASC NULLS FIRST .)


state 299

    (103) STATE -> ASC NULLS LAST .

    HAVING          reduce using rule 103 (STATE -> ASC NULLS LAST .)
    ID              reduce using rule 103 (STATE -> ASC NULLS LAST .)
    ASTERISCO       reduce using rule 103 (STATE -> ASC NULLS LAST .)
    GROUP           reduce using rule 103 (STATE -> ASC NULLS LAST .)
    JOIN            reduce using rule 103 (STATE -> ASC NULLS LAST .)
    WHERE           reduce using rule 103 (STATE -> ASC NULLS LAST .)
    LIMIT           reduce using rule 103 (STATE -> ASC NULLS LAST .)
    OFFSET          reduce using rule 103 (STATE -> ASC NULLS LAST .)
    INNER           reduce using rule 103 (STATE -> ASC NULLS LAST .)
    LEFT            reduce using rule 103 (STATE -> ASC NULLS LAST .)
    RIGHT           reduce using rule 103 (STATE -> ASC NULLS LAST .)
    FULL            reduce using rule 103 (STATE -> ASC NULLS LAST .)
    PUNTOCOMA       reduce using rule 103 (STATE -> ASC NULLS LAST .)
    UNION           reduce using rule 103 (STATE -> ASC NULLS LAST .)
    INTERSECT       reduce using rule 103 (STATE -> ASC NULLS LAST .)
    EXCEPT          reduce using rule 103 (STATE -> ASC NULLS LAST .)
    ASC             reduce using rule 103 (STATE -> ASC NULLS LAST .)
    DESC            reduce using rule 103 (STATE -> ASC NULLS LAST .)


state 300

    (105) STATE -> DESC NULLS FIRST .

    HAVING          reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    ID              reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    ASTERISCO       reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    GROUP           reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    JOIN            reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    WHERE           reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    LIMIT           reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    OFFSET          reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    INNER           reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    LEFT            reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    RIGHT           reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    FULL            reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    PUNTOCOMA       reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    UNION           reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    INTERSECT       reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    EXCEPT          reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    ASC             reduce using rule 105 (STATE -> DESC NULLS FIRST .)
    DESC            reduce using rule 105 (STATE -> DESC NULLS FIRST .)


state 301

    (106) STATE -> DESC NULLS LAST .

    HAVING          reduce using rule 106 (STATE -> DESC NULLS LAST .)
    ID              reduce using rule 106 (STATE -> DESC NULLS LAST .)
    ASTERISCO       reduce using rule 106 (STATE -> DESC NULLS LAST .)
    GROUP           reduce using rule 106 (STATE -> DESC NULLS LAST .)
    JOIN            reduce using rule 106 (STATE -> DESC NULLS LAST .)
    WHERE           reduce using rule 106 (STATE -> DESC NULLS LAST .)
    LIMIT           reduce using rule 106 (STATE -> DESC NULLS LAST .)
    OFFSET          reduce using rule 106 (STATE -> DESC NULLS LAST .)
    INNER           reduce using rule 106 (STATE -> DESC NULLS LAST .)
    LEFT            reduce using rule 106 (STATE -> DESC NULLS LAST .)
    RIGHT           reduce using rule 106 (STATE -> DESC NULLS LAST .)
    FULL            reduce using rule 106 (STATE -> DESC NULLS LAST .)
    PUNTOCOMA       reduce using rule 106 (STATE -> DESC NULLS LAST .)
    UNION           reduce using rule 106 (STATE -> DESC NULLS LAST .)
    INTERSECT       reduce using rule 106 (STATE -> DESC NULLS LAST .)
    EXCEPT          reduce using rule 106 (STATE -> DESC NULLS LAST .)
    ASC             reduce using rule 106 (STATE -> DESC NULLS LAST .)
    DESC            reduce using rule 106 (STATE -> DESC NULLS LAST .)


state 302

    (154) TIPO_CAMPO -> CHARACTER VARYING PARIZQ ENTERO PARDER .

    NOT             reduce using rule 154 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 154 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 154 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 154 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    ID              reduce using rule 154 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 154 (TIPO_CAMPO -> CHARACTER VARYING PARIZQ ENTERO PARDER .)


state 303

    (68) INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .

    JOIN            reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    WHERE           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INNER           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LEFT            reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    RIGHT           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    FULL            reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    GROUP           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    LIMIT           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    OFFSET          reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    PUNTOCOMA       reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    UNION           reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    INTERSECT       reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)
    EXCEPT          reduce using rule 68 (INNERR -> TIPOS_INNER JOIN TABLA_REF USING PARIZQ SUB_COLUMN PARDER .)


state 304

    (93) EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .

    HAVING          reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    ID              reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    ASTERISCO       reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    GROUP           reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    JOIN            reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    WHERE           reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    LIMIT           reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    OFFSET          reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    INNER           reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    LEFT            reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    RIGHT           reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    FULL            reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    PUNTOCOMA       reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    UNION           reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    INTERSECT       reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    EXCEPT          reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    ASC             reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)
    DESC            reduce using rule 93 (EXPRES -> NOMBRE_T PUNTO CAMPOS S2 STATE .)


state 305

    (99) S2 -> AS ALIAS COMA EXPRES .

    ASC             reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    DESC            reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    HAVING          reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    ID              reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    ASTERISCO       reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    GROUP           reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    JOIN            reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    WHERE           reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    LIMIT           reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    OFFSET          reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    INNER           reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    LEFT            reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    RIGHT           reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    FULL            reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    PUNTOCOMA       reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    UNION           reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    INTERSECT       reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)
    EXCEPT          reduce using rule 99 (S2 -> AS ALIAS COMA EXPRES .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARIZQ in state 41 resolved as shift
WARNING: shift/reduce conflict for EXISTS in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 41 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 41 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 41 resolved as shift
WARNING: shift/reduce conflict for CADENASIMPLE in state 41 resolved as shift
WARNING: shift/reduce conflict for CADENADOBLE in state 41 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 98 resolved as shift
WARNING: shift/reduce conflict for UNION in state 98 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 98 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 98 resolved as shift
WARNING: shift/reduce conflict for JOIN in state 105 resolved as shift
WARNING: shift/reduce conflict for WHERE in state 105 resolved as shift
WARNING: shift/reduce conflict for INNER in state 105 resolved as shift
WARNING: shift/reduce conflict for LEFT in state 105 resolved as shift
WARNING: shift/reduce conflict for RIGHT in state 105 resolved as shift
WARNING: shift/reduce conflict for FULL in state 105 resolved as shift
WARNING: shift/reduce conflict for GROUP in state 106 resolved as shift
WARNING: shift/reduce conflict for LIMIT in state 107 resolved as shift
WARNING: shift/reduce conflict for OFFSET in state 107 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 146 resolved as shift
WARNING: shift/reduce conflict for UNION in state 146 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 146 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 146 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 175 resolved as shift
WARNING: shift/reduce conflict for UNION in state 175 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 175 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 175 resolved as shift
WARNING: shift/reduce conflict for ASC in state 219 resolved as shift
WARNING: shift/reduce conflict for DESC in state 219 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 220 resolved as shift
WARNING: shift/reduce conflict for UNION in state 220 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 220 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 220 resolved as shift
WARNING: shift/reduce conflict for ASC in state 252 resolved as shift
WARNING: shift/reduce conflict for DESC in state 252 resolved as shift
WARNING: shift/reduce conflict for ASC in state 279 resolved as shift
WARNING: shift/reduce conflict for DESC in state 279 resolved as shift
WARNING: shift/reduce conflict for NOT in state 291 resolved as shift
WARNING: shift/reduce conflict for ID in state 291 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 291 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 291 resolved as shift
WARNING: shift/reduce conflict for CADENASIMPLE in state 291 resolved as shift
WARNING: shift/reduce conflict for CADENADOBLE in state 291 resolved as shift
WARNING: shift/reduce conflict for ASC in state 295 resolved as shift
WARNING: shift/reduce conflict for DESC in state 295 resolved as shift
WARNING: reduce/reduce conflict in state 42 resolved using rule (NOMBRE_T -> ID)
WARNING: rejected rule (ATE_QUE -> ID) in state 42
WARNING: reduce/reduce conflict in state 148 resolved using rule (CUERPO -> WHERE CONDICIONES)
WARNING: rejected rule (INNERR -> WHERE CONDICIONES) in state 148
